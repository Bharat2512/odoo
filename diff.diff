diff --git a/addons/account/account.py b/addons/account/account.py
index a0afbea..49e31db 100644
--- a/addons/account/account.py
+++ b/addons/account/account.py
@@ -288,7 +288,83 @@ class AccountJournal(models.Model):
         return self.env['ir.sequence'].create(seq)
 
     @api.model
+    def _prepare_bank_account(self, name, company, currency_id):
+        '''
+        This function prepares the value to use for the creation of the default debit and credit accounts of a
+        bank journal (created through the wizard of generating COA from templates for example).
+
+        :param name: name of the bank account
+        :param company: company for which the wizard is running
+        :param currency_id: ID of the currency in wich is the bank account
+        :return: mapping of field names and values
+        :rtype: dict
+        '''
+
+        # Seek the next available number for the account code
+        code_digits = company.accounts_code_digits or 0
+        bank_account_code_char = company.bank_account_code_char or ''
+        for num in xrange(1, 100):
+            new_code = str(bank_account_code_char.ljust(code_digits - 1, '0')) + str(num)
+            rec = self.env['account.account'].search([('code', '=', new_code), ('company_id', '=', company.id)], limit=1)
+            if not rec:
+                break
+        else:
+            raise UserError(_('Cannot generate an unused account code.'))
+
+        liquidity_type = self.env.ref('account.data_account_type_liquidity')
+        return {
+                'name': name,
+                'currency_id': currency_id or False,
+                'code': new_code,
+                'user_type': liquidity_type and liquidity_type.id or False,
+                'company_id': company.id,
+        }
+
+    @api.model
+    def _prepare_bank_journal(self, company, line):
+        '''
+        This function prepares the value to use for the creation of a bank journal created through the wizard of
+        generating COA from templates.
+
+        :param company: company for which the wizard is running
+        :param line: dictionary containing the values encoded by the user related to his bank account with keys 
+            - acc_name (char): name of the bank account
+            - account_type (char): kind of liquidity journal to create. Either 'bank' or 'cash'
+            - currency_id (int): id of the currency related to this account if its different than the company currency (False otherwise)
+        :return: mapping of field names and values
+        :rtype: dict
+        '''
+        # we need to loop to find next number for journal code
+        for num in xrange(1, 100):
+            # journal_code has a maximal size of 5, hence we can enforce the boundary num < 100
+            journal_code = line.get('account_type', 'bank') == 'cash' and 'CSH' or 'BNK'
+            journal_code += str(num)
+            journal = self.env['account.journal'].search([('code', '=', journal_code), ('company_id', '=', company.id)], limit=1)
+            if not journal:
+                break
+        else:
+            raise UserError(_('Cannot generate an unused journal code.'))
+
+        return {
+                'name': line['acc_name'],
+                'code': journal_code,
+                'type': line.get('account_type', 'bank'),
+                'company_id': company.id,
+                'analytic_journal_id': False,
+                'currency_id': line.get('currency_id', False),
+                'show_on_dashboard': True,
+        }
+
+    @api.model
     def create(self, vals):
+        if vals.get('type') in ('bank', 'cash'):
+            default_account = vals.get('default_debit_account_id') or vals.get('default_credit_account_id')
+            if not default_account:
+                company = self.env['res.company'].browse(vals['company_id'])
+                account_vals = self._prepare_bank_account(vals.get('name'), company, vals.get('currency_id'))
+                default_account = self.env['account.account'].create(account_vals)
+                vals['default_debit_account_id'] = default_account.id
+                vals['default_credit_account_id'] = default_account.id
         # We just need to create the relevant sequences according to the chosen options
         if not vals.get('sequence_id'):
             vals.update({'sequence_id': self.sudo()._create_sequence(vals).id})
@@ -543,4 +619,4 @@ class AccountOperationTemplate(models.Model):
 
     @api.onchange('name')
     def onchange_name(self):
-        self.label = self.name
\ No newline at end of file
+        self.label = self.name
diff --git a/addons/account/account_bank.py b/addons/account/account_bank.py
index e93847f..96b69d8 100644
--- a/addons/account/account_bank.py
+++ b/addons/account/account_bank.py
@@ -1,6 +1,6 @@
 # -*- coding: utf-8 -*-
 
-from openerp import api, fields, models, _
+from openerp import api, fields, models
 
 
 class Bank(models.Model):
@@ -8,8 +8,6 @@ class Bank(models.Model):
 
     journal_id = fields.Many2one('account.journal', string='Account Journal',
         help="This journal will be created automatically for this bank account when you save the record")
-    currency_id = fields.Many2one('res.currency', related='journal_id.currency_id', string='Currency',
-        readonly=True, help="Currency of the related account journal.")
 
     @api.model
     def create(self, data):
@@ -26,70 +24,21 @@ class Bank(models.Model):
     @api.model
     def _prepare_name(self, bank):
         "Return the name to use when creating a bank journal"
-        return (bank.bank_name or '') + ' ' + (bank.acc_number or '')
-
-    @api.model
-    def _prepare_name_get(self, bank_dicts):
-        """Add ability to have %(currency_name)s in the format_layout of res.partner.bank.type"""
-        currency_ids = list(set(data['currency_id'][0] for data in bank_dicts if data.get('currency_id')))
-        currencies = self.env['res.currency'].browse(currency_ids)
-        currency_name = dict((currency.id, currency.name) for currency in currencies)
-
-        for data in bank_dicts:
-            data['currency_name'] = data.get('currency_id') and currency_name[data['currency_id'][0]] or ''
-        return super(Bank, self)._prepare_name_get(bank_dicts)
+        name = bank.bank_name + ' ' if bank.bank_name else ''
+        name += bank.acc_number
+        return name
 
     @api.multi
     def post_write(self):
-        AccountObj = self.env['account.account']
         JournalObj = self.env['account.journal']
-
         for bank in self:
             # Create a journal for the bank account if it belongs to the company.
-            if bank.partner_id in self.env.user.company_ids.mapped('partner_id') and not bank.journal_id:
-                # TODO: this code is duplicated; refactor using _prepare_bank_account() in chart_template.py
-                # Find the code and parent of the bank account to create
-                dig = 6
-                current_num = 1
-                account = AccountObj.search([('internal_type', '=', 'liquidity'), ('company_id', '=', bank.company_id.id)], limit=1)
-                # No liquidity account exists, no template available
-                if not account: continue
-
-                ref_acc_bank = account
-                while True:
-                    new_code = str(ref_acc_bank.code.ljust(dig-len(str(current_num)), '0')) + str(current_num)
-                    account = AccountObj.search([('code', '=', new_code), ('company_id', '=', bank.company_id.id)], limit=1)
-                    if not account:
-                        break
-                    current_num += 1
-                name = self._prepare_name(bank)
-                acc = {
-                    'name': name,
-                    'code': new_code,
-                    'user_type': ref_acc_bank.user_type.id,
-                    'reconcile': False,
-                    'company_id': bank.company_id.id,
-                }
-                acc_bank = AccountObj.create(acc)
-
-                new_code = 1
-                while True:
-                    code = _('BNK')+str(new_code)
-                    account = JournalObj.search([('code', '=', code)], limit=1)
-                    if not account:
-                        break
-                    new_code += 1
-
-                #create the bank journal
-                vals_journal = {
-                    'name': name,
-                    'code': code,
-                    'type': 'bank',
-                    'company_id': bank.company_id.id,
-                    'analytic_journal_id': False,
-                    'default_credit_account_id': acc_bank.id,
-                    'default_debit_account_id': acc_bank.id,
-                }
-
-                bank.journal_id = JournalObj.create(vals_journal)
-        return True
+            if bank.company_id and not bank.journal_id:
+                journal_vals = JournalObj._prepare_bank_journal(bank.company_id, {'acc_name': self._prepare_name(bank), 'currency_id': bank.currency_id.id, 'account_type': 'bank'})
+                journal = JournalObj.create(journal_vals)
+                missing_vals = {'journal_id': journal.id}
+                if not bank.partner_id:
+                    missing_vals['partner_id'] = bank.company_id.partner_id.id
+                if not bank.owner_name:
+                    missing_vals['owner_name'] = bank.company_id.partner_id.name
+                bank.write(missing_vals)
diff --git a/addons/account/account_payment.py b/addons/account/account_payment.py
index a63b8a9..8e2f0d4 100644
--- a/addons/account/account_payment.py
+++ b/addons/account/account_payment.py
@@ -32,6 +32,8 @@ class account_abstract_payment(models.AbstractModel):
 
     payment_type = fields.Selection([('outbound', 'Send Money'), ('inbound', 'Receive Money')], default='outbound', required=True)
     payment_method = fields.Many2one('account.payment.method', string='Payment Method', required=True)
+    payment_method_code = fields.Char(related='payment_method.code',
+        help="Technical field used to adapt the interface to the payment method selected.")
 
     partner_type = fields.Selection([('customer', 'Customer'), ('supplier', 'Supplier')], default='supplier')
     partner_id = fields.Many2one('res.partner', string='Partner')
@@ -54,18 +56,6 @@ class account_abstract_payment(models.AbstractModel):
             raise ValidationError('The payment amount must be strictly positive.')
 
     @api.one
-    @api.constrains('communication')
-    def _check_communication(self):
-        """ This method is to be overwritten by payment type modules. The method body would look like :
-            if self.payment_method == self.env.ref('my_module.payment_method'):
-                try:
-                    self.communication.decode('ascii')
-                except UnicodeDecodeError:
-                    raise ValidationError(_t("The communication cannot contain any special character"))
-        """
-        pass
-
-    @api.one
     @api.depends('payment_type', 'journal_id')
     def _compute_hide_payment_method(self):
         if not self.journal_id:
@@ -274,6 +264,21 @@ class account_payment(models.Model):
     def _get_invoices(self):
         return self.invoice_ids
 
+    @api.model
+    def create(self, vals):
+        self._check_communication(vals['payment_method'], vals.get('communication', ''))
+        return super(account_payment, self).create(vals)
+
+    def _check_communication(self, payment_method_id, communication):
+        """ This method is to be overwritten by payment type modules. The method body would look like :
+            if payment_method_id == self.env.ref('my_module.payment_method').id:
+                try:
+                    communication.decode('ascii')
+                except UnicodeError:
+                    raise ValidationError(_("The communication cannot contain any special character"))
+        """
+        pass
+
     @api.multi
     def button_journal_entries(self):
         return {
diff --git a/addons/account/chart_template.py b/addons/account/chart_template.py
index 90f5fee..4249546 100644
--- a/addons/account/chart_template.py
+++ b/addons/account/chart_template.py
@@ -50,55 +50,6 @@ class AccountAccountTemplate(models.Model):
         return res
 
 
-class AccountAddTmplWizard(models.TransientModel):
-    """Add one more account from the template.
-
-    With the 'nocreate' option, some accounts may not be created. Use this to add them later."""
-    _name = 'account.addtmpl.wizard'
-
-    @api.model
-    def _get_def_cparent(self):
-        context = self._context or {}
-        tmpl_obj = self.env['account.account.template']
-
-        tids = tmpl_obj.read([context['tmpl_ids']], ['parent_id'])
-        if not tids or not tids[0]['parent_id']:
-            return False
-        ptids = tmpl_obj.read([tids[0]['parent_id'][0]], ['code'])
-        account = False
-        if not ptids or not ptids[0]['code']:
-            raise UserError(_('There is no parent code for the template account.'))
-            account = self.env['account.account'].search([('code', '=', ptids[0]['code'])], limit=1)
-        return account
-
-    cparent_id = fields.Many2one('account.account', string='Parent target', default=lambda self: self._get_def_cparent(),
-        help="Creates an account with the selected template under this existing parent.", required=True, domain=[('deprecated', '=', False)])
-
-    @api.multi
-    def action_create(self):
-        context = self._context or {}
-        AccountObj = self.env['account.account']
-        data = self.read()[0]
-        company_id = AccountObj.read([data['cparent_id'][0]], ['company_id'])[0]['company_id'][0]
-        account_template = self.env['account.account.template'].browse(context['tmpl_ids'])
-        vals = {
-            'name': account_template.name,
-            'currency_id': account_template.currency_id and account_template.currency_id.id or False,
-            'code': account_template.code,
-            'user_type': account_template.user_type and account_template.user_type.id or False,
-            'reconcile': account_template.reconcile,
-            'note': account_template.note,
-            'parent_id': data['cparent_id'][0],
-            'company_id': company_id,
-        }
-        AccountObj.create(vals)
-        return {'type': 'state', 'state': 'end'}
-
-    @api.multi
-    def action_cancel(self):
-        return {'type': 'state', 'state': 'end'}
-
-
 class AccountChartTemplate(models.Model):
     _name = "account.chart.template"
     _description = "Templates for Account Chart"
@@ -776,74 +727,6 @@ class WizardMultiChartsAccounts(models.TransientModel):
         self._create_bank_journals_from_o2m(company, acc_template_ref)
         return {}
 
-    @api.model
-    def _prepare_bank_journal(self, company, line, default_account_id):
-        '''
-        This function prepares the value to use for the creation of a bank journal created through the wizard of
-        generating COA from templates.
-
-        :param line: dictionary containing the values encoded by the user related to his bank account
-        :param default_account_id: id of the default debit.credit account created before for this journal.
-        :param company_id: id of the company for which the wizard is running
-        :return: mapping of field names and values
-        :rtype: dict
-        '''
-        # we need to loop to find next number for journal code
-        for num in xrange(1, 100):
-            # journal_code has a maximal size of 5, hence we can enforce the boundary num < 100
-            journal_code = line['account_type'] == 'cash' and 'CSH' or 'BNK'
-            journal_code += str(num)
-            journal = self.env['account.journal'].search([('code', '=', journal_code), ('company_id', '=', company.id)], limit=1)
-            if not journal:
-                break
-        else:
-            raise UserError(_('Cannot generate an unused journal code.'))
-
-        return {
-                'name': line['acc_name'],
-                'code': journal_code,
-                'type': line['account_type'],
-                'company_id': company.id,
-                'analytic_journal_id': False,
-                'currency_id': line['currency_id'] or False,
-                'default_credit_account_id': default_account_id,
-                'default_debit_account_id': default_account_id,
-                'show_on_dashboard': True,
-        }
-
-    @api.model
-    def _prepare_bank_account(self, company, line):
-        '''
-        This function prepares the value to use for the creation of the default debit and credit accounts of a
-        bank journal created through the wizard of generating COA from templates.
-
-        :param company: company for which the wizard is running
-        :param line: dictionary containing the values encoded by the user related to his bank account
-        :return: mapping of field names and values
-        :rtype: dict
-        '''
-
-        # Seek the next available number for the account code
-        code_digits = company.accounts_code_digits or 0
-        bank_account_code_char = company.bank_account_code_char or ''
-        for num in xrange(1, 100):
-            new_code = str(bank_account_code_char.ljust(code_digits - 1, '0')) + str(num)
-            rec = self.env['account.account'].search([('code', '=', new_code), ('company_id', '=', company.id)], limit=1)
-            if not rec:
-                break
-        else:
-            raise UserError(_('Cannot generate an unused account code.'))
-
-        liquidity_type = self.env.ref('account.data_account_type_liquidity')
-
-        return {
-                'name': line['acc_name'],
-                'currency_id': line['currency_id'] or False,
-                'code': new_code,
-                'user_type': liquidity_type and liquidity_type.id or False,
-                'company_id': company.id,
-        }
-
     @api.multi
     def _create_bank_journals_from_o2m(self, company, acc_template_ref):
         '''
@@ -872,13 +755,21 @@ class WizardMultiChartsAccounts(models.TransientModel):
         company.write({'bank_account_code_char': ref_acc_bank})
 
         for line in journal_data:
-            # Create the default debit/credit accounts for this bank journal
-            vals = self._prepare_bank_account(company, line)
-            default_account = self.env['account.account'].create(vals)
-
-            #create the bank journal
-            vals_journal = self._prepare_bank_journal(company, line, default_account.id)
-            self.env['account.journal'].create(vals_journal)
+            if line['account_type'] == 'bank':
+                #create the bank account that will trigger the journal and account.account creation
+                res_partner_bank_vals = {
+                    'acc_number': line['acc_name'],
+                    'currency_id': line['currency_id'],
+                    'company_id': company.id,
+                    'owner_name': company.partner_id.name,
+                    'partner_id': company.partner_id.id,
+                    'footer': True
+                }
+                self.env['res.partner.bank'].create(res_partner_bank_vals)
+            else:
+                #create the cash journal that will trigger the account.account creation
+                vals_journal = self.env['account.journal']._prepare_bank_journal(company, line)
+                self.env['account.journal'].create(vals_journal)
         return True
 
 
@@ -889,4 +780,4 @@ class AccountBankAccountsWizard(models.TransientModel):
     bank_account_id = fields.Many2one('wizard.multi.charts.accounts', string='Bank Account', required=True, ondelete='cascade')
     currency_id = fields.Many2one('res.currency', string='Secondary Currency',
         help="Forces all moves for this account to have this secondary currency.")
-    account_type = fields.Selection([('cash', 'Cash'), ('bank', 'Bank')])
\ No newline at end of file
+    account_type = fields.Selection([('cash', 'Cash'), ('bank', 'Bank')])
diff --git a/addons/account/company.py b/addons/account/company.py
index c78ad5f..2ea1c6a 100644
--- a/addons/account/company.py
+++ b/addons/account/company.py
@@ -33,22 +33,6 @@ class ResCompany(models.Model):
     anglo_saxon_accounting = fields.Boolean(string="Use anglo-saxon accounting")
 
     @api.multi
-    def _create_bank_account_and_journal(self, account_number, currency_id=None):
-        """ Create a journal and its account """
-        MultiChartsAccounts = self.env['wizard.multi.charts.accounts']
-
-        if currency_id is None:
-            currency_id = self.currency_id.id
-
-        vals_account = {'currency_id': currency_id, 'acc_name': account_number, 'account_type': 'bank'}
-        vals_account = MultiChartsAccounts._prepare_bank_account(self, vals_account)
-        account_id = self.env['account.account'].create(vals_account).id
-
-        vals_journal = {'currency_id': currency_id, 'acc_name': _('Bank') + ' ' + account_number, 'account_type': 'bank'}
-        vals_journal = MultiChartsAccounts._prepare_bank_journal(self, vals_journal, account_id)
-        return self.env['account.journal'].create(vals_journal).id
-
-    @api.multi
     def compute_fiscalyear_dates(self, date):
         """ Computes the start and end dates of the fiscalyear where the given 'date' belongs to
             @param date: a datetime object
diff --git a/addons/account/tests/test_payment.py b/addons/account/tests/test_payment.py
index 74c1e7d..00ec04c 100644
--- a/addons/account/tests/test_payment.py
+++ b/addons/account/tests/test_payment.py
@@ -26,11 +26,11 @@ class TestPayment(AccountingTestCase):
         self.account_payable = self.env['account.account'].search([('user_type', '=', self.env.ref('account.data_account_type_payable').id)])[0]
         self.account_revenue = self.env['account.account'].search([('user_type', '=', self.env.ref('account.data_account_type_revenue').id)])[0]
 
-        self.bank_euro = self.env['res.partner.bank'].create({'acc_number': '0123456789', 'bank_name': 'Test Bank'})
+        self.bank_euro = self.env['res.partner.bank'].create({'acc_number': '0123456789', 'bank_name': 'Test Bank', 'company_id': self.env.user.company_id.id})
         self.bank_journal_euro = self.bank_euro.journal_id
         self.account_eur = self.bank_journal_euro.default_debit_account_id
 
-        self.bank_usd = self.env['res.partner.bank'].create({'acc_number': '0123456789', 'bank_name': 'Test Bank USD'})
+        self.bank_usd = self.env['res.partner.bank'].create({'acc_number': '0123456789', 'bank_name': 'Test Bank USD', 'company_id': self.env.user.company_id.id})
         self.bank_journal_usd = self.bank_usd.journal_id
         self.account_usd = self.bank_journal_usd.default_debit_account_id
         self.account_usd.write({'currency_id': self.currency_usd_id})
@@ -40,7 +40,6 @@ class TestPayment(AccountingTestCase):
         self.diff_income_account = self.env['res.users'].browse(self.env.uid).company_id.income_currency_exchange_account_id
         self.diff_expense_account = self.env['res.users'].browse(self.env.uid).company_id.expense_currency_exchange_account_id
 
-
     def create_invoice(self, amount=100, type='out_invoice', currency_id=None):
         """ Returns an open invoice """
         invoice = self.invoice_model.create({
diff --git a/addons/account/tests/test_reconciliation.py b/addons/account/tests/test_reconciliation.py
index 8442334..056232e 100644
--- a/addons/account/tests/test_reconciliation.py
+++ b/addons/account/tests/test_reconciliation.py
@@ -25,12 +25,12 @@ class TestReconciliation(AccountingTestCase):
         self.account_rsa = self.env['account.account'].search([('user_type', '=', self.env.ref('account.data_account_type_payable').id)])[0]
         self.product = self.env.ref("product.product_product_4")
 
-        self.bank_euro = self.env['res.partner.bank'].create({'acc_number': 'Reconciliation test', 'bank_name': 'Test Bank'})
+        self.bank_euro = self.env['res.partner.bank'].create({'acc_number': 'Reconciliation test', 'bank_name': 'Test Bank', 'company_id': self.env.user.company_id.id})
         self.bank_journal_euro = self.bank_euro.journal_id
         self.account_euro = self.bank_journal_euro.default_debit_account_id
 
         self.bank_usd = self.env['res.partner.bank'].create({'acc_number': 'Reconciliation test USD',
-                                                             'bank_name': 'Test Bank USD'})
+                                                             'bank_name': 'Test Bank USD', 'company_id': self.env.user.company_id.id})
         self.bank_journal_usd = self.bank_usd.journal_id
         self.account_usd = self.bank_journal_usd.default_debit_account_id
         self.account_usd.write({'currency_id': self.currency_usd_id})
diff --git a/addons/account/views/account_payment_view.xml b/addons/account/views/account_payment_view.xml
index 321a9ea..8820c81 100644
--- a/addons/account/views/account_payment_view.xml
+++ b/addons/account/views/account_payment_view.xml
@@ -82,8 +82,9 @@
                                 <field name="destination_journal_id" widget="selection" attrs="{'required': [('payment_type', '=', 'transfer')], 'invisible': [('payment_type', '!=', 'transfer')], 'readonly': [('state', '!=', 'draft')]}"/>
                                 <field name="hide_payment_method" invisible="1"/>
                                 <field name="payment_method" widget="radio" attrs="{'invisible': [('hide_payment_method', '=', True)], 'readonly': [('state', '!=', 'draft')]}" String="Payment Mode"/>
+                                <field name="payment_method_code" invisible="1"/>
                                 <label for="amount"/>
-                                <div>
+                                <div name="amount_div">
                                     <field name="amount" class="oe_inline" attrs="{'readonly': [('state', '!=', 'draft')]}"/>
                                     <field name="currency_id" groups="base.group_multi_currency" class="oe_inline" attrs="{'readonly': [('state', '!=', 'draft')]}"/>
                                 </div>
@@ -145,8 +146,9 @@
                                 <field name="journal_id" widget="selection"/>
                                 <field name="hide_payment_method" invisible="1"/>
                                 <field name="payment_method" widget="radio" attrs="{'invisible': [('hide_payment_method', '=', True)]}"/>
+                                <field name="payment_method_code" invisible="1"/>
                                 <label for="amount"/>
-                                <div>
+                                <div name="amount_div">
                                     <field name="amount" class="oe_inline"/>
                                     <field name="currency_id" groups="base.group_multi_currency" class="oe_inline"/>
                                 </div>
@@ -191,11 +193,14 @@
             <field name="arch" type="xml">
                 <form string="Register Payment" version="7">
                     <field name="payment_type" invisible="1"/>
+                    <field name="partner_type" invisible="1"/>
+                    <field name="partner_id" invisible="1"/>
                     <group>
                         <group>
                             <field name="journal_id" widget="selection"/>
                             <field name="hide_payment_method" invisible="1"/>
                             <field name="payment_method" widget="radio" attrs="{'invisible': [('hide_payment_method', '=', True)]}"/>
+                            <field name="payment_method_code" invisible="1"/>
                             <label for="amount" />
                             <div>
                                 <field name="amount" class="oe_inline"/>
diff --git a/addons/account/views/account_view.xml b/addons/account/views/account_view.xml
index d77b19d..c201b2d 100644
--- a/addons/account/views/account_view.xml
+++ b/addons/account/views/account_view.xml
@@ -254,14 +254,14 @@
                                 <field name="type"/>
                             </group>
                             <group>
-                                <field name="default_debit_account_id" attrs="{'required':[('type','in', ('cash', 'bank'))]}" domain="[('deprecated', '=', False)]"/>
-                                <field name="default_credit_account_id" attrs="{'required':[('type','in',('cash', 'bank'))]}" domain="[('deprecated', '=', False)]"/>
+                                <field name="default_debit_account_id" domain="[('deprecated', '=', False)]"/>
+                                <field name="default_credit_account_id" domain="[('deprecated', '=', False)]"/>
                                 <field name="currency_id" groups="base.group_multi_currency"/>
                                 <field name="company_id" groups="base.group_multi_company"/>
                             </group>
                         </group>
                         <notebook>
-                            <page string="Advanced Settings">
+                            <page name="advanced_settings" string="Advanced Settings">
                                 <group>
                                     <group>
                                         <field name="type_control_ids" widget="many2many_tags"/>
@@ -1456,29 +1456,6 @@
             <field name="search_view_id" ref="view_account_template_search"/>
         </record>
 
-        <record id="view_account_addtmpl_wizard_form" model="ir.ui.view">
-            <field name="name">Create Account</field>
-            <field name="model">account.addtmpl.wizard</field>
-            <field name="arch" type="xml">
-                <form string="Create Account">
-                    <header>
-                        <button icon="gtk-ok" name="action_create" string="Add" type="object" class="oe_highlight"  />
-                    </header>
-                    <separator col="4" colspan="4" string="Create an Account Based on this Template"/>
-                    <field name="cparent_id"/>
-                </form>
-            </field>
-        </record>
-
-        <act_window domain="[]" id="action_account_addtmpl_wizard_form"
-            name="Create Account"
-            target="new"
-            res_model="account.addtmpl.wizard"
-            context="{'tmpl_ids': active_id}"
-            src_model="account.account.template"
-            view_type="form" view_mode="form"/>
-
-
         <!-- Chart of Accounts Templates -->
         <record id="view_account_chart_template_form" model="ir.ui.view">
             <field name="name">account.chart.template.form</field>
diff --git a/addons/account_bank_statement_import/account_bank_statement_import.py b/addons/account_bank_statement_import/account_bank_statement_import.py
index cf29c79..5941871 100644
--- a/addons/account_bank_statement_import/account_bank_statement_import.py
+++ b/addons/account_bank_statement_import/account_bank_statement_import.py
@@ -44,7 +44,7 @@ class AccountBankStatementImport(models.TransientModel):
         journal_id = rec._get_journal(currency_id, bank_account_id, account_number)
         # Create the bank account if not already existing
         if not bank_account_id and account_number:
-            rec._create_bank_account(account_number, journal_id=journal_id, partner_id=self.env.uid)
+            rec._create_bank_account(account_number, journal_id=journal_id)
         # Prepare statement data to be used for bank statements creation
         stmts_vals = rec._complete_stmts_vals(stmts_vals, journal_id, account_number)
         # Create the bank statements
@@ -145,7 +145,9 @@ class AccountBankStatementImport(models.TransientModel):
 
         # If there is no journal, create one (and its account)
         if not journal_id and account_number:
-            journal_id = self.env.user.company_id._create_bank_account_and_journal(account_number, currency_id)
+            company = self.env.user.company_id
+            journal_vals = self.env['account.journal']._prepare_bank_journal(company, {'account_type': 'bank', 'acc_name': account_number, 'currency_id': currency_id})
+            journal_id = self.env['account.journal'].create(journal_vals).id
             if bank_account_id:
                 bank_account.write({'journal_id': journal_id})
 
@@ -154,7 +156,7 @@ class AccountBankStatementImport(models.TransientModel):
             raise UserError(_('Cannot find in which journal import this statement. Please manually select a journal.'))
         return journal_id
 
-    def _create_bank_account(self, account_number, journal_id=False, partner_id=False):
+    def _create_bank_account(self, account_number, journal_id=False):
         try:
             bank_type = self.env.ref('bank.bank_normal')
             bank_code = bank_type.code
@@ -167,11 +169,10 @@ class AccountBankStatementImport(models.TransientModel):
         }
         # Odoo users bank accounts (which we import statement from) have company_id and journal_id set
         # while 'counterpart' bank accounts (from which statement transactions originate) don't.
-        # Warning : if company_id is set, the method post_write of class bank will create a journal
         if journal_id:
-            vals_acc['partner_id'] = self.env.uid
             vals_acc['journal_id'] = journal_id
             vals_acc['company_id'] = self.env.user.company_id.id
+            vals_acc['partner_id'] = self.env.user.company_id.partner_id.id
 
         return self.env['res.partner.bank'].create(vals_acc)
 
@@ -184,7 +185,7 @@ class AccountBankStatementImport(models.TransientModel):
                 if unique_import_id:
                     line_vals['unique_import_id'] = (account_number and account_number + '-' or '') + unique_import_id
 
-                if not 'bank_account_id' in line_vals or not line_vals['bank_account_id']:
+                if not line_vals.get('bank_account_id'):
                     # Find the partner and his bank account or create the bank account. The partner selected during the
                     # reconciliation process will be linked to the bank when the statement is closed.
                     partner_id = False
@@ -196,6 +197,8 @@ class AccountBankStatementImport(models.TransientModel):
                             bank_account_id = partner_bank.id
                             partner_id = partner_bank.partner_id.id
                         else:
+                            #do not pass the journal_id in _create_bank_account() because we don't want to link
+                            #that bank_account to the journal (it belongs to a partner, not to the company)
                             bank_account_id = self._create_bank_account(identifying_string).id
                     line_vals['partner_id'] = partner_id
                     line_vals['bank_account_id'] = bank_account_id
diff --git a/addons/account_bank_statement_import/wizard/journal_creation.py b/addons/account_bank_statement_import/wizard/journal_creation.py
index 547afda..d49fde7 100644
--- a/addons/account_bank_statement_import/wizard/journal_creation.py
+++ b/addons/account_bank_statement_import/wizard/journal_creation.py
@@ -1,42 +1,42 @@
 # -*- coding: utf-8 -*-
 
-from openerp.osv import fields, osv
-from openerp.tools.translate import _
+from openerp import api, fields, models
 
-class account_bank_statement_import_journal_creation(osv.TransientModel):
+class account_bank_statement_import_journal_creation(models.TransientModel):
     _name = 'account.bank.statement.import.journal.creation'
     _description = 'Import Bank Statement Journal Creation Wizard'
-    _columns = {
-        'name': fields.char('Journal Name', required=True),
-        'currency_id': fields.many2one('res.currency', 'Currency', readonly=True),
-        'account_number': fields.char('Account Number', readonly=True),
-    }
 
-    def create_journal(self, cr, uid, ids, context=None):
-        bank_account_id = context['bank_account_id']
+    name = fields.Char('Journal Name', required=True)
+    currency_id = fields.Many2one('res.currency', 'Currency', readonly=True)
+    account_number = fields.Char('Account Number', readonly=True)
 
-        wmca_pool = self.pool.get('wizard.multi.charts.accounts')
-        import_wiz_obj = self.pool['account.bank.statement.import']
-        company = self.pool.get('res.users').browse(cr, uid, uid, context=context).company_id
-        wiz = self.browse(cr, uid, ids, context=context)[0]
+    @api.multi
+    def create_journal(self):
+        import_wiz_obj = self.env['account.bank.statement.import']
+        journal_obj = self.env['account.journal']
+        company = self.env.user.company_id
+        wiz = self[0]
         currency_id = wiz.currency_id.id
         account_number = wiz.account_number
 
-        # Create the account.account
-        vals_account = {'currency_id': currency_id, 'acc_name': account_number, 'account_type': 'bank', 'currency_id': currency_id}
-        vals_account = wmca_pool._prepare_bank_account(cr, uid, company, vals_account, context=context)
-        account_id = self.pool.get('account.account').create(cr, uid, vals_account, context=context)
-
-        # Create the account.journal
-        name = wiz.name
-        vals_journal = {'currency_id': currency_id, 'acc_name': name, 'account_type': 'bank'}
-        vals_journal = wmca_pool._prepare_bank_journal(cr, uid, company, vals_journal, account_id, context=context)
-        journal_id = self.pool.get('account.journal').create(cr, uid, vals_journal, context=context)
+        bank_account_id = self.env._context.get('bank_account_id')
         if bank_account_id:
-            self.pool.get('res.partner.bank').write(cr, uid, [bank_account_id], {'journal_id': journal_id}, context=context)
-        # Create the bank account if not already existing
-        elif not bank_account_id and account_number:
-            import_wiz_obj._create_bank_account(cr, uid, account_number, journal_id=journal_id, partner_id=uid, context=context)
+            vals = {'currency_id': currency_id, 'acc_name': account_number, 'account_type': 'bank'}
+            vals_journal = journal_obj._prepare_bank_journal(company, vals)
+            journal = journal_obj.create(vals_journal)
+            self.env['res.partner.bank'].browse(bank_account_id).write({'journal_id': journal.id})
+        else:
+            #create the bank account that will trigger the journal and account.account creation
+            res_partner_bank_vals = {
+                    'acc_number': account_number,
+                    'currency_id': currency_id,
+                    'company_id': company.id,
+                    'owner_name': company.partner_id.name,
+                    'partner_id': company.partner_id.id,
+                    'footer': True
+            }
+            self.env['res.partner.bank'].create(res_partner_bank_vals)
+
         # Finish the statement import
-        statement_import_transient = import_wiz_obj.browse(cr, uid, context['statement_import_transient_id'], context=context)
+        statement_import_transient = import_wiz_obj.browse(self.env._context['statement_import_transient_id'])
         return statement_import_transient.import_file()
diff --git a/addons/account_bank_statement_import_qif/tests/test_import_bank_statement.py b/addons/account_bank_statement_import_qif/tests/test_import_bank_statement.py
index 7768e9a..6aa6b79 100644
--- a/addons/account_bank_statement_import_qif/tests/test_import_bank_statement.py
+++ b/addons/account_bank_statement_import_qif/tests/test_import_bank_statement.py
@@ -19,7 +19,9 @@ class TestQifFile(TransactionCase):
         bank_statement_id = self.BankStatementImport.create(dict(
             data_file=qif_file,
         ))
-        journal = self.env.user.company_id._create_bank_account_and_journal('Bank Account (test import qif)')
-        bank_statement_id.with_context(journal_id=journal).import_file()
+        company = self.env.user.company_id
+        journal_vals = self.env['account.journal']._prepare_bank_journal(company, {'account_type': 'bank', 'acc_name': 'Bank Account (test import qif)'})
+        journal = self.env['account.journal'].create(journal_vals)
+        bank_statement_id.with_context(journal_id=journal.id).import_file()
         line = self.BankStatementLine.search([('name', '=', 'YOUR LOCAL SUPERMARKET')], limit=1)
         assert float_compare(line.statement_id.balance_end_real, -1896.09, 2) == 0
diff --git a/addons/account_check_writing/__init__.py b/addons/account_check_writing/__init__.py
index b2f6526..7bf5a49 100644
--- a/addons/account_check_writing/__init__.py
+++ b/addons/account_check_writing/__init__.py
@@ -1,25 +1,4 @@
 # -*- coding: utf-8 -*-
-##############################################################################
-#
-#    OpenERP, Open Source Management Solution
-#    Copyright (C) 2004-2010 Tiny SPRL (<http://tiny.be>).
-#
-#    This program is free software: you can redistribute it and/or modify
-#    it under the terms of the GNU Affero General Public License as
-#    published by the Free Software Foundation, either version 3 of the
-#    License, or (at your option) any later version.
-#
-#    This program is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU Affero General Public License for more details.
-#
-#    You should have received a copy of the GNU Affero General Public License
-#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
-#
-##############################################################################
 
-import account
-import account_voucher
-import wizard
-import report
+import account_journal
+import account_payment
diff --git a/addons/account_check_writing/__openerp__.py b/addons/account_check_writing/__openerp__.py
index 9cdfa7a..bf502ea 100644
--- a/addons/account_check_writing/__openerp__.py
+++ b/addons/account_check_writing/__openerp__.py
@@ -1,44 +1,24 @@
 # -*- coding: utf-8 -*-
-##############################################################################
-#
-#    OpenERP, Open Source Management Solution
-#    Copyright (C) 2004-2010 Tiny SPRL (<http://tiny.be>).
-#
-#    This program is free software: you can redistribute it and/or modify
-#    it under the terms of the GNU Affero General Public License as
-#    published by the Free Software Foundation, either version 3 of the
-#    License, or (at your option) any later version.
-#
-#    This program is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU Affero General Public License for more details.
-#
-#    You should have received a copy of the GNU Affero General Public License
-#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
-#
-##############################################################################
 {
     'name': 'Check Writing',
-    'version': '1.1',
-    'author': 'OpenERP SA, NovaPoint Group',
+    'version': '1.0',
+    'author': 'Odoo SA',
     'category': 'Generic Modules/Accounting',
+    'summary': 'Keep Track of Checks Payments',
     'description': """
-Module for the Check Writing and Check Printing.
-================================================
+Check Writing
+=============
+This module allows to register your payments by check in odoo.
+You can also print checks by installing a module that adds country-specific check printing.
+The check settings are located in the accounting journals configuration page.
     """,
     'website': 'https://www.odoo.com/page/accounting',
-    'depends' : ['account_voucher'],
+    'depends' : ['account_accountant'],
     'data': [
-        'wizard/account_check_batch_printing_view.xml',
-        'account_view.xml',
-        'account_check_writing_data.xml',
-        'data/report_paperformat.xml',
-        'views/report_check.xml',
-        'account_check_writing_report.xml',
+        'data/check_writing.xml',
+        'views/account_journal_view.xml',
+        'views/account_payment_view.xml',
     ],
-    'demo': ['account_demo.xml'],
-    'test': [],
-    'installable': False,
-    'active': False,
+    'installable': True,
+    'auto_install': False,
 }
diff --git a/addons/account_check_writing/account.py b/addons/account_check_writing/account.py
deleted file mode 100644
index 398dd61..0000000
--- a/addons/account_check_writing/account.py
+++ /dev/null
@@ -1,47 +0,0 @@
-# -*- coding: utf-8 -*-
-##############################################################################
-#
-#    OpenERP, Open Source Management Solution
-#    Copyright (C) 2004-2010 Tiny SPRL (<http://tiny.be>).
-#
-#    This program is free software: you can redistribute it and/or modify
-#    it under the terms of the GNU Affero General Public License as
-#    published by the Free Software Foundation, either version 3 of the
-#    License, or (at your option) any later version.
-#
-#    This program is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU Affero General Public License for more details.
-#
-#    You should have received a copy of the GNU Affero General Public License
-#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
-#
-##############################################################################
-
-from openerp.osv import osv,fields
-
-class account_journal(osv.osv):
-    _inherit = "account.journal"
-
-    _columns = {
-        'allow_check_writing': fields.boolean('Allow Check writing', help='Check this if the journal is to be used for writing checks.'),
-        'use_preprint_check': fields.boolean('Use Preprinted Check', help='Check if you use a preformated sheet for check'),
-        }
-
-
-class res_company(osv.osv):
-    _inherit = "res.company"
-    _columns = {
-        'check_layout': fields.selection([
-            ('top', 'Check on Top'),
-            ('middle', 'Check in middle'),
-            ('bottom', 'Check on bottom'),
-            ],"Check Layout",
-            help="Check on top is compatible with Quicken, QuickBooks and Microsoft Money. Check in middle is compatible with Peachtree, ACCPAC and DacEasy. Check on bottom is compatible with Peachtree, ACCPAC and DacEasy only"  ),
-        }
-        
-    _defaults = {
-        'check_layout' : lambda *a: 'top',
-    }
-    
diff --git a/addons/account_check_writing/account_check_writing_data.xml b/addons/account_check_writing/account_check_writing_data.xml
deleted file mode 100644
index 7b3777e..0000000
--- a/addons/account_check_writing/account_check_writing_data.xml
+++ /dev/null
@@ -1,10 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<openerp>
-    <data noupdate="1">
-        <record id="sequence_check_number" model="ir.sequence">
-            <field name="name">Check Number</field>
-            <field name="code">check.number</field>
-            <field eval="4" name="padding"/>
-        </record>        
-    </data>
-</openerp>
diff --git a/addons/account_check_writing/account_check_writing_report.xml b/addons/account_check_writing/account_check_writing_report.xml
deleted file mode 100644
index aa938c4..0000000
--- a/addons/account_check_writing/account_check_writing_report.xml
+++ /dev/null
@@ -1,14 +0,0 @@
-<?xml version="1.0"?>
-<openerp>
-    <data>
-        <report
-            id="action_report_check" 
-            model="account.voucher" 
-            string="Check"
-            report_type="qweb-pdf"
-            name="account_check_writing.report_check" 
-            file="account_check_writing.report_check" 
-            paperformat="account_check_writing.paperformat_frenchcheck"
-        />
-    </data>
-</openerp>
diff --git a/addons/account_check_writing/account_demo.xml b/addons/account_check_writing/account_demo.xml
deleted file mode 100644
index c311907..0000000
--- a/addons/account_check_writing/account_demo.xml
+++ /dev/null
@@ -1,5 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<openerp>
-    <data noupdate="1">
-    </data>
-</openerp>
diff --git a/addons/account_check_writing/account_journal.py b/addons/account_check_writing/account_journal.py
new file mode 100644
index 0000000..5775899
--- /dev/null
+++ b/addons/account_check_writing/account_journal.py
@@ -0,0 +1,77 @@
+# -*- coding: utf-8 -*-
+
+from openerp import models, fields, api, _
+from openerp.exceptions import ValidationError
+
+class AccountJournal(models.Model):
+    _inherit = "account.journal"
+
+    @api.one
+    @api.depends('outbound_payment_methods')
+    def _compute_check_writing_payment_method_selected(self):
+        self.check_writing_payment_method_selected = any(pm.code == 'check_writing' for pm in self.outbound_payment_methods)
+
+    @api.one
+    @api.depends('check_manual_sequencing')
+    def _get_check_next_number(self):
+        if self.check_sequence_id:
+            self.check_next_number = self.check_sequence_id.number_next_actual
+        else:
+            self.check_next_number = 1
+
+    @api.one
+    def _set_check_next_number(self):
+        if self.check_next_number < self.check_sequence_id.number_next_actual:
+            raise ValidationError(_("The last check number was %s. In order to avoid a check being rejected "
+                "by the bank, you can only use a greater number." % self.check_sequence_id.number_next_actual))
+        self.check_sequence_id.sudo().number_next_actual = self.check_next_number
+
+    check_manual_sequencing = fields.Boolean('Manual Numbering', default=False,
+        help="Check this option if your pre-printed checks are not numbered.")
+    check_sequence_id = fields.Many2one('ir.sequence', 'Check Sequence', readonly=True, copy=False,
+        help="Checks numbering sequence.")
+    check_next_number = fields.Integer('Next Check Number', compute='_get_check_next_number', inverse='_set_check_next_number',
+        help="Sequence number of the next printed check.")
+    check_writing_payment_method_selected = fields.Boolean(compute='_compute_check_writing_payment_method_selected',
+        help="Technical feature used to know whether check writing was enabled as payment method.")
+
+    @api.model
+    def create(self, vals):
+        if not vals.get('check_sequence_id'):
+            vals.update({'check_sequence_id': self._create_check_sequence(vals).id})
+        return super(AccountJournal, self).create(vals)
+
+    @api.one
+    def copy(self, default=None):
+        rec = super(AccountJournal, self).copy(default)
+        rec.write({'check_sequence_id': self._create_check_sequence({'name': rec.name, 'company_id': rec.company_id.id}).id})
+        return rec
+
+    @api.model
+    def _create_check_sequence(self, vals):
+        """ Create a check sequence for the journal """
+        return self.env['ir.sequence'].sudo().create({
+            'name': vals['name'] + _(" : Check Number Sequence"),
+            'implementation': 'no_gap',
+            'padding': 5,
+            'number_increment': 1,
+            'company_id': vals.get('company_id', self.env.user.company_id.id),
+        })
+
+    def _default_outbound_payment_methods(self):
+        vals = super(AccountJournal, self)._default_outbound_payment_methods()
+        return vals + [(4, self.env.ref('account_check_writing.account_payment_method_check_writing').id, None)]
+
+    @api.model
+    def _enable_check_writing_on_bank_journals(self):
+        """ Enables check writing payment method and add a check sequence on bank journals.
+            Called upon module installation via data file.
+        """
+        check_writing = self.env.ref('account_check_writing.account_payment_method_check_writing')
+        bank_journals = self.search([('type', '=', 'bank')])
+        for bank_journal in bank_journals:
+            check_sequence = self._create_check_sequence({'name': bank_journal.name, 'company_id': bank_journal.company_id.id})
+            bank_journal.write({
+                'outbound_payment_methods': [(4, check_writing.id, None)],
+                'check_sequence_id': check_sequence.id,
+            })
diff --git a/addons/account_check_writing/account_payment.py b/addons/account_check_writing/account_payment.py
new file mode 100644
index 0000000..eb19755
--- /dev/null
+++ b/addons/account_check_writing/account_payment.py
@@ -0,0 +1,98 @@
+# -*- coding: utf-8 -*-
+
+import math
+
+from openerp import models, fields, api, _
+from openerp.tools import amount_to_text_en, float_round
+from openerp.exceptions import UserError
+
+class account_register_payments(models.TransientModel):
+    _inherit = "account.register.payments"
+
+    check_amount_in_words = fields.Char(string="Amount in Words")
+    check_manual_sequencing = fields.Boolean(related='journal_id.check_manual_sequencing')
+    check_number = fields.Integer(string="Check Number", readonly=True, copy=False,
+        help="The selected journal is configured to print check numbers. If your pre-printed check paper already has numbers "
+             "or if the current numbering is wrong, you can change it in the journal configuration page.")
+
+    @api.onchange('journal_id')
+    def _onchange_journal_id(self):
+        if hasattr(super(account_register_payments, self), '_onchange_journal_id'):
+            super(account_register_payments, self)._onchange_journal_id()
+        if self.journal_id.check_manual_sequencing:
+            self.check_number = self.journal_id.check_sequence_id.number_next_actual
+
+    @api.onchange('amount')
+    def _onchange_amount(self):
+        if hasattr(super(account_register_payments, self), '_onchange_amount'):
+            super(account_register_payments, self)._onchange_amount()
+        # TODO: merge, refactor and complete the amount_to_text and amount_to_text_en classes
+        check_amount_in_words = amount_to_text_en.amount_to_text(math.floor(self.amount), lang='en', currency='')
+        check_amount_in_words = check_amount_in_words.replace(' and Zero Cent', '') # Ugh
+        decimals = self.amount % 1
+        if decimals >= 10**-2:
+            check_amount_in_words += _(' and %s/100') % str(int(float_round(decimals, precision_rounding=0.01)*100))
+        self.check_amount_in_words = check_amount_in_words
+
+    @api.multi
+    def get_payment_vals(self):
+        res = super(account_register_payments, self).get_payment_vals()
+        res.update({'check_amount_in_words': self.check_amount_in_words})
+        return res
+
+
+class account_payment(models.Model):
+    _inherit = "account.payment"
+
+    check_amount_in_words = fields.Char(string="Amount in Words")
+    check_manual_sequencing = fields.Boolean(related='journal_id.check_manual_sequencing')
+    check_number = fields.Integer(string="Check Number", readonly=True, copy=False,
+        help="The selected journal is configured to print check numbers. If your pre-printed check paper already has numbers "
+             "or if the current numbering is wrong, you can change it in the journal configuration page.")
+
+    @api.onchange('journal_id')
+    def _onchange_journal_id(self):
+        if hasattr(super(account_payment, self), '_onchange_journal_id'):
+            super(account_payment, self)._onchange_journal_id()
+        if self.journal_id.check_manual_sequencing:
+            self.check_number = self.journal_id.check_sequence_id.number_next_actual
+
+    @api.onchange('amount')
+    def _onchange_amount(self):
+        if hasattr(super(account_payment, self), '_onchange_amount'):
+            super(account_payment, self)._onchange_amount()
+        check_amount_in_words = amount_to_text_en.amount_to_text(math.floor(self.amount), lang='en', currency='')
+        check_amount_in_words = check_amount_in_words.replace(' and Zero Cent', '') # Ugh
+        decimals = self.amount % 1
+        if decimals >= 10**-2:
+            check_amount_in_words += _(' and %s/100') % str(int(float_round(decimals, precision_rounding=0.01)*100))
+        self.check_amount_in_words = check_amount_in_words
+
+    @api.model
+    def create(self, vals):
+        if vals.get('check_manual_sequencing'):
+            sequence = self.env['account.journal'].browse(vals['journal_id']).check_sequence_id
+            vals.update({'check_number': sequence.next_by_id()})
+        return super(account_payment, self.sudo()).create(vals)
+
+    @api.multi
+    def send_checks(self):
+        """ Check that the recordset is valid, set the payments state to sent and call print_checks() """
+        # Since this method can be called via a client_action_multi, we need to make sure the received records are what we expect
+        self = self.filtered(lambda r: r.payment_method.code == 'check_writing' and r.state != 'reconciled')
+
+        if len(self) == 0:
+            raise UserError(_("Payments to print as a checks must have 'Check Writing' selected as payment method and "
+                              "not have already been reconciled"))
+        if any(payment.journal_id != self[0].journal_id for payment in self):
+            raise UserError(_("In order to print multiple checks at once, they must belong to the same bank journal."))
+
+        self.filtered(lambda r: r.state == 'draft').post()
+        self.write({'state': 'sent'})
+
+        return self.print_checks()
+
+    @api.multi
+    def print_checks(self):
+        """ This method is a hook for l10n_xx_check_printing modules to implement actual check printing capabilities """
+        pass
diff --git a/addons/account_check_writing/account_view.xml b/addons/account_check_writing/account_view.xml
deleted file mode 100644
index 75b28fa..0000000
--- a/addons/account_check_writing/account_view.xml
+++ /dev/null
@@ -1,38 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<openerp>
-    <data>
-
-        <!--
-            check option in journal
-        -->
-
-        <record id="view_account_journal_form" model="ir.ui.view">
-            <field name="name">account.journal.form</field>
-            <field name="model">account.journal</field>
-            <field name="inherit_id" ref="account.view_account_journal_form" />
-            <field name="arch" type="xml">
-                <field name="type" />
-                <field name="group_invoice_lines" position="after">
-                    <field name="allow_check_writing" attrs="{'readonly':[('type','!=','bank')]}" />
-                    <field name="use_preprint_check" attrs="{'readonly':[('type','!=','bank')]}" />
-                </field>
-            </field>
-        </record>
-
-        <!--
-            check format option in company
-        -->
-
-        <record id="check_format_company" model="ir.ui.view">
-            <field name="name">res.company.check.format</field>
-            <field name="model">res.company</field>
-            <field name="priority">17</field>
-            <field name="inherit_id" ref="base.view_company_form"/>
-            <field name="arch" type="xml">
-                <xpath expr="//group[@name='account_grp']" position="inside">
-                    <field name="check_layout"/>
-                </xpath>
-            </field>
-       </record>
-    </data>
-</openerp>
diff --git a/addons/account_check_writing/account_voucher.py b/addons/account_check_writing/account_voucher.py
deleted file mode 100644
index 135fcbb..0000000
--- a/addons/account_check_writing/account_voucher.py
+++ /dev/null
@@ -1,117 +0,0 @@
-# -*- coding: utf-8 -*-
-##############################################################################
-#
-#    OpenERP, Open Source Management Solution
-#    Copyright (C) 2004-2010 Tiny SPRL (<http://tiny.be>).
-#
-#    This program is free software: you can redistribute it and/or modify
-#    it under the terms of the GNU Affero General Public License as
-#    published by the Free Software Foundation, either version 3 of the
-#    License, or (at your option) any later version.
-#
-#    This program is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU Affero General Public License for more details.
-#
-#    You should have received a copy of the GNU Affero General Public License
-#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
-#
-##############################################################################
-
-from openerp.osv import osv,fields
-from openerp.tools.translate import _
-from openerp.tools.amount_to_text_en import amount_to_text
-from lxml import etree
-from openerp.exceptions import UserError
-
-class account_voucher(osv.osv):
-    _inherit = 'account.voucher'
-
-    def _make_journal_search(self, cr, uid, ttype, context=None):
-        if context is None: 
-            context = {}
-        journal_pool = self.pool.get('account.journal')
-        if context.get('write_check',False) :
-            return journal_pool.search(cr, uid, [('allow_check_writing', '=', True)], limit=1)
-        return journal_pool.search(cr, uid, [('type', '=', ttype)], limit=1)
-
-    _columns = {
-        'amount_in_word' : fields.char("Amount in Word", readonly=True, states={'draft':[('readonly',False)]}),
-        'allow_check' : fields.related('journal_id', 'allow_check_writing', type='boolean', string='Allow Check Writing'),
-        'number': fields.char('Number'),
-    }
-
-    def _amount_to_text(self, cr, uid, amount, currency_id, context=None):
-        # Currency complete name is not available in res.currency model
-        # Exceptions done here (EUR, USD, BRL) cover 75% of cases
-        # For other currencies, display the currency code
-        currency = self.pool['res.currency'].browse(cr, uid, currency_id, context=context)
-        if currency.name.upper() == 'EUR':
-            currency_name = 'Euro'
-        elif currency.name.upper() == 'USD':
-            currency_name = 'Dollars'
-        elif currency.name.upper() == 'BRL':
-            currency_name = 'reais'
-        else:
-            currency_name = currency.name
-        #TODO : generic amount_to_text is not ready yet, otherwise language (and country) and currency can be passed
-        #amount_in_word = amount_to_text(amount, context=context)
-        return amount_to_text(amount, currency=currency_name)
-
-    def onchange_amount(self, cr, uid, ids, amount, rate, partner_id, journal_id, currency_id, ttype, date, payment_rate_currency_id, company_id, context=None):
-        """ Inherited - add amount_in_word and allow_check_writting in returned value dictionary """
-        if not context:
-            context = {}
-        default = super(account_voucher, self).onchange_amount(cr, uid, ids, amount, rate, partner_id, journal_id, currency_id, ttype, date, payment_rate_currency_id, company_id, context=context)
-        if 'value' in default:
-            amount = 'amount' in default['value'] and default['value']['amount'] or amount
-            amount_in_word = self._amount_to_text(cr, uid, amount, currency_id, context=context)
-            default['value'].update({'amount_in_word':amount_in_word})
-            if journal_id:
-                allow_check_writing = self.pool.get('account.journal').browse(cr, uid, journal_id, context=context).allow_check_writing
-                default['value'].update({'allow_check':allow_check_writing})
-        return default
-
-    def print_check(self, cr, uid, ids, context=None):
-        if not ids:
-            raise UserError(_('No check selected '))
-
-        data = {
-            'id': ids and ids[0],
-            'ids': ids,
-        }
-
-        return self.pool['report'].get_action(
-            cr, uid, [], 'account_check_writing.report_check', data=data, context=context
-        )
-
-    def create(self, cr, uid, vals, context=None):
-        if vals.get('amount') and vals.get('journal_id') and 'amount_in_word' not in vals:
-            vals['amount_in_word'] = self._amount_to_text(cr, uid, vals['amount'], vals.get('currency_id') or \
-                self.pool['account.journal'].browse(cr, uid, vals['journal_id'], context=context).currency.id or \
-                self.pool['res.company'].browse(cr, uid, vals['company_id']).currency_id.id, context=context)
-        return super(account_voucher, self).create(cr, uid, vals, context=context)
-
-    def write(self, cr, uid, ids, vals, context=None):
-        if vals.get('amount') and vals.get('journal_id') and 'amount_in_word' not in vals:
-            vals['amount_in_word'] = self._amount_to_text(cr, uid, vals['amount'], vals.get('currency_id') or \
-                self.pool['account.journal'].browse(cr, uid, vals['journal_id'], context=context).currency.id or \
-                self.pool['res.company'].browse(cr, uid, vals['company_id']).currency_id.id, context=context)
-        return super(account_voucher, self).write(cr, uid, ids, vals, context=context)
-
-    def fields_view_get(self, cr, uid, view_id=None, view_type=False, context=None, toolbar=False, submenu=False):
-        """
-            Add domain 'allow_check_writting = True' on journal_id field and remove 'widget = selection' on the same
-            field because the dynamic domain is not allowed on such widget
-        """
-        if not context: context = {}
-        res = super(account_voucher, self).fields_view_get(cr, uid, view_id=view_id, view_type=view_type, context=context, toolbar=toolbar, submenu=submenu)
-        doc = etree.XML(res['arch'])
-        nodes = doc.xpath("//field[@name='journal_id']")
-        if context.get('write_check', False) :
-            for node in nodes:
-                node.set('domain', "[('type', '=', 'bank'), ('allow_check_writing','=',True)]")
-                node.set('widget', '')
-            res['arch'] = etree.tostring(doc)
-        return res
diff --git a/addons/account_check_writing/data/check_writing.xml b/addons/account_check_writing/data/check_writing.xml
new file mode 100644
index 0000000..3326daa
--- /dev/null
+++ b/addons/account_check_writing/data/check_writing.xml
@@ -0,0 +1,33 @@
+<?xml version="1.0" encoding="utf-8"?>
+<openerp>
+    <data noupdate="1">
+
+        <record id="account_payment_method_check_writing" model="account.payment.method">
+            <field name="name">Check Writing</field>
+            <field name="code">check_writing</field>
+            <field name="payment_type">outbound</field>
+        </record>
+
+        <function model="account.journal" name="_enable_check_writing_on_bank_journals"/>
+
+
+        <record model="ir.actions.server" id="action_account_send_checks">
+            <field name="name">Send Checks</field>
+            <field name="model_id" ref="account.model_account_payment"/>
+            <field name="code">
+                if context.get('active_model') == 'account.payment' and context.get('active_ids'):
+                    action = self.pool['account.payment'].send_checks(cr, uid, context['active_ids'], context=context)
+            </field>
+        </record>
+
+        <record model="ir.values" id="account_send_checks">
+            <field name="model_id" ref="account.model_account_payment" />
+            <field name="name">Send Checks</field>
+            <field name="key2">client_action_multi</field>
+            <field name="value" eval="'ir.actions.server,' +str(ref('action_account_send_checks'))" />
+            <field name="key">action</field>
+            <field name="model">account.payment</field>
+        </record>
+
+    </data>
+</openerp>
diff --git a/addons/account_check_writing/data/report_paperformat.xml b/addons/account_check_writing/data/report_paperformat.xml
deleted file mode 100644
index 3782b8b..0000000
--- a/addons/account_check_writing/data/report_paperformat.xml
+++ /dev/null
@@ -1,20 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<openerp>
-    <data>
-        <record id="paperformat_frenchcheck" model="report.paperformat">
-            <field name="name">French Bank Check</field>
-            <field name="default" eval="True"/>
-            <field name="format">custom</field>
-            <field name="page_height">80</field>
-            <field name="page_width">175</field>
-            <field name="orientation">Portrait</field>
-            <field name="margin_top">3</field>
-            <field name="margin_bottom">3</field>
-            <field name="margin_left">3</field>
-            <field name="margin_right">3</field>
-            <field name="header_line" eval="False" />
-            <field name="header_spacing">3</field>
-            <field name="dpi">80</field>
-        </record>
-    </data>
-</openerp>
diff --git a/addons/account_check_writing/i18n/ar.po b/addons/account_check_writing/i18n/ar.po
deleted file mode 100644
index 7e0b3d2..0000000
--- a/addons/account_check_writing/i18n/ar.po
+++ /dev/null
@@ -1,232 +0,0 @@
-# Arabic translation for openobject-addons
-# Copyright (c) 2014 Rosetta Contributors and Canonical Ltd 2014
-# This file is distributed under the same license as the openobject-addons package.
-# FIRST AUTHOR <EMAIL@ADDRESS>, 2014.
-#
-msgid ""
-msgstr ""
-"Project-Id-Version: openobject-addons\n"
-"Report-Msgid-Bugs-To: FULL NAME <EMAIL@ADDRESS>\n"
-"POT-Creation-Date: 2014-08-14 13:08+0000\n"
-"PO-Revision-Date: 2014-08-14 16:10+0000\n"
-"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
-"Language-Team: Arabic <ar@li.org>\n"
-"MIME-Version: 1.0\n"
-"Content-Type: text/plain; charset=UTF-8\n"
-"Content-Transfer-Encoding: 8bit\n"
-"X-Launchpad-Export-Date: 2014-08-15 06:50+0000\n"
-"X-Generator: Launchpad (build 17156)\n"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,help:account_check_writing.action_write_check
-msgid ""
-"<p class=\"oe_view_nocontent_create\">\n"
-"                Click to create a new check. \n"
-"              </p><p>\n"
-"                The check payment form allows you to track the payment you "
-"do\n"
-"                to your suppliers using checks. When you select a supplier, "
-"the\n"
-"                payment method and an amount for the payment, Odoo will\n"
-"                propose to reconcile your payment with the open supplier\n"
-"                invoices or bills.\n"
-"              </p>\n"
-"            "
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_voucher
-msgid "Accounting Voucher"
-msgstr "القسيمة المحاسبية"
-
-#. module: account_check_writing
-#: field:account.voucher,allow_check:0
-msgid "Allow Check Writing"
-msgstr "سماح بكتابة شيك"
-
-#. module: account_check_writing
-#: field:account.journal,allow_check_writing:0
-msgid "Allow Check writing"
-msgstr "السماح بطباعة الشيك"
-
-#. module: account_check_writing
-#: field:account.voucher,amount_in_word:0
-msgid "Amount in Word"
-msgstr "المبلغ نصياً"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-msgid "Cancel"
-msgstr ""
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: model:ir.actions.report.xml,name:account_check_writing.action_report_check
-msgid "Check"
-msgstr ""
-
-#. module: account_check_writing
-#: field:res.company,check_layout:0
-msgid "Check Layout"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.journal,use_preprint_check:0
-msgid "Check if you use a preformated sheet for check"
-msgstr ""
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check in middle"
-msgstr "شيك في المنتصف"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on Top"
-msgstr "شيك في الأعلى"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on bottom"
-msgstr "شيك في النهاية"
-
-#. module: account_check_writing
-#: help:res.company,check_layout:0
-msgid ""
-"Check on top is compatible with Quicken, QuickBooks and Microsoft Money. "
-"Check in middle is compatible with Peachtree, ACCPAC and DacEasy. Check on "
-"bottom is compatible with Peachtree, ACCPAC and DacEasy only"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.journal,allow_check_writing:0
-msgid "Check this if the journal is to be used for writing checks."
-msgstr ""
-"قم بباختيار هذه الخانة اذا أردت أن يتم استخدام دفتر اليومية في كتابة الشيكات"
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_res_company
-msgid "Companies"
-msgstr "الشركات"
-
-#. module: account_check_writing
-#: field:account.check.write,create_uid:0
-msgid "Created by"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,create_date:0
-msgid "Created on"
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Description"
-msgstr "الوصف"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Discount"
-msgstr "الخصم"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Due Date"
-msgstr "تاريخ الإستحقاق"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "Error!"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,id:0
-#: field:report.account_check_writing.report_check,id:0
-msgid "ID"
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_journal
-msgid "Journal"
-msgstr "اليومية"
-
-#. module: account_check_writing
-#: field:account.check.write,write_uid:0
-msgid "Last Updated by"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,write_date:0
-msgid "Last Updated on"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,check_number:0
-msgid "Next Check Number"
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "No check selected "
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "One of the printed check already got a number."
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Open Balance"
-msgstr "فتح رصيد"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Original Amount"
-msgstr "المبلغ الأصلي"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Payment"
-msgstr "الدفع"
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_check_write
-msgid "Prin Check in Batch"
-msgstr ""
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: view:account.voucher:account_check_writing.view_vendor_payment_check_form
-msgid "Print Check"
-msgstr "طباعة الشيك"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_account_check_write
-msgid "Print Check in Batch"
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "Printing error"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.check.write,check_number:0
-msgid "The number of the next check number to be printed."
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.journal,use_preprint_check:0
-msgid "Use Preprinted Check"
-msgstr "استخدام الصكوك المطبوعة مسبقاً"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_write_check
-#: model:ir.ui.menu,name:account_check_writing.menu_action_write_check
-msgid "Write Checks"
-msgstr "كتابة شيك"
diff --git a/addons/account_check_writing/i18n/bg.po b/addons/account_check_writing/i18n/bg.po
deleted file mode 100644
index 412bff1..0000000
--- a/addons/account_check_writing/i18n/bg.po
+++ /dev/null
@@ -1,231 +0,0 @@
-# Bulgarian translation for openobject-addons
-# Copyright (c) 2014 Rosetta Contributors and Canonical Ltd 2014
-# This file is distributed under the same license as the openobject-addons package.
-# FIRST AUTHOR <EMAIL@ADDRESS>, 2014.
-#
-msgid ""
-msgstr ""
-"Project-Id-Version: openobject-addons\n"
-"Report-Msgid-Bugs-To: FULL NAME <EMAIL@ADDRESS>\n"
-"POT-Creation-Date: 2014-08-14 13:08+0000\n"
-"PO-Revision-Date: 2014-11-20 09:11+0000\n"
-"Last-Translator: Dimitar Dimitrov <dimitrovden@gmail.com>\n"
-"Language-Team: Bulgarian <bg@li.org>\n"
-"MIME-Version: 1.0\n"
-"Content-Type: text/plain; charset=UTF-8\n"
-"Content-Transfer-Encoding: 8bit\n"
-"X-Launchpad-Export-Date: 2014-11-21 07:04+0000\n"
-"X-Generator: Launchpad (build 17252)\n"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,help:account_check_writing.action_write_check
-msgid ""
-"<p class=\"oe_view_nocontent_create\">\n"
-"                Click to create a new check. \n"
-"              </p><p>\n"
-"                The check payment form allows you to track the payment you "
-"do\n"
-"                to your suppliers using checks. When you select a supplier, "
-"the\n"
-"                payment method and an amount for the payment, Odoo will\n"
-"                propose to reconcile your payment with the open supplier\n"
-"                invoices or bills.\n"
-"              </p>\n"
-"            "
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_voucher
-msgid "Accounting Voucher"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.voucher,allow_check:0
-msgid "Allow Check Writing"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.journal,allow_check_writing:0
-msgid "Allow Check writing"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.voucher,amount_in_word:0
-msgid "Amount in Word"
-msgstr ""
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-msgid "Cancel"
-msgstr "Отказ"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: model:ir.actions.report.xml,name:account_check_writing.action_report_check
-msgid "Check"
-msgstr ""
-
-#. module: account_check_writing
-#: field:res.company,check_layout:0
-msgid "Check Layout"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.journal,use_preprint_check:0
-msgid "Check if you use a preformated sheet for check"
-msgstr ""
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check in middle"
-msgstr ""
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on Top"
-msgstr ""
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on bottom"
-msgstr ""
-
-#. module: account_check_writing
-#: help:res.company,check_layout:0
-msgid ""
-"Check on top is compatible with Quicken, QuickBooks and Microsoft Money. "
-"Check in middle is compatible with Peachtree, ACCPAC and DacEasy. Check on "
-"bottom is compatible with Peachtree, ACCPAC and DacEasy only"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.journal,allow_check_writing:0
-msgid "Check this if the journal is to be used for writing checks."
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_res_company
-msgid "Companies"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,create_uid:0
-msgid "Created by"
-msgstr "Създадено от"
-
-#. module: account_check_writing
-#: field:account.check.write,create_date:0
-msgid "Created on"
-msgstr "Създадено на"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Description"
-msgstr "Описание"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Discount"
-msgstr "Отстъпка"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Due Date"
-msgstr "Дата на падеж"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "Error!"
-msgstr "Грешка!"
-
-#. module: account_check_writing
-#: field:account.check.write,id:0
-#: field:report.account_check_writing.report_check,id:0
-msgid "ID"
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_journal
-msgid "Journal"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,write_uid:0
-msgid "Last Updated by"
-msgstr "Последно обновено от"
-
-#. module: account_check_writing
-#: field:account.check.write,write_date:0
-msgid "Last Updated on"
-msgstr "Последно обновено на"
-
-#. module: account_check_writing
-#: field:account.check.write,check_number:0
-msgid "Next Check Number"
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "No check selected "
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "One of the printed check already got a number."
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Open Balance"
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Original Amount"
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Payment"
-msgstr "Плащане"
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_check_write
-msgid "Prin Check in Batch"
-msgstr ""
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: view:account.voucher:account_check_writing.view_vendor_payment_check_form
-msgid "Print Check"
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_account_check_write
-msgid "Print Check in Batch"
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "Printing error"
-msgstr "Грешка при печат"
-
-#. module: account_check_writing
-#: help:account.check.write,check_number:0
-msgid "The number of the next check number to be printed."
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.journal,use_preprint_check:0
-msgid "Use Preprinted Check"
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_write_check
-#: model:ir.ui.menu,name:account_check_writing.menu_action_write_check
-msgid "Write Checks"
-msgstr ""
diff --git a/addons/account_check_writing/i18n/bs.po b/addons/account_check_writing/i18n/bs.po
deleted file mode 100644
index c951f16..0000000
--- a/addons/account_check_writing/i18n/bs.po
+++ /dev/null
@@ -1,235 +0,0 @@
-# Bosnian translation for openobject-addons
-# Copyright (c) 2014 Rosetta Contributors and Canonical Ltd 2014
-# This file is distributed under the same license as the openobject-addons package.
-# FIRST AUTHOR <EMAIL@ADDRESS>, 2014.
-#
-msgid ""
-msgstr ""
-"Project-Id-Version: openobject-addons\n"
-"Report-Msgid-Bugs-To: FULL NAME <EMAIL@ADDRESS>\n"
-"POT-Creation-Date: 2014-08-14 13:08+0000\n"
-"PO-Revision-Date: 2014-08-14 16:10+0000\n"
-"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
-"Language-Team: Bosnian <bs@li.org>\n"
-"MIME-Version: 1.0\n"
-"Content-Type: text/plain; charset=UTF-8\n"
-"Content-Transfer-Encoding: 8bit\n"
-"X-Launchpad-Export-Date: 2014-08-15 06:50+0000\n"
-"X-Generator: Launchpad (build 17156)\n"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,help:account_check_writing.action_write_check
-msgid ""
-"<p class=\"oe_view_nocontent_create\">\n"
-"                Click to create a new check. \n"
-"              </p><p>\n"
-"                The check payment form allows you to track the payment you "
-"do\n"
-"                to your suppliers using checks. When you select a supplier, "
-"the\n"
-"                payment method and an amount for the payment, Odoo will\n"
-"                propose to reconcile your payment with the open supplier\n"
-"                invoices or bills.\n"
-"              </p>\n"
-"            "
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_voucher
-msgid "Accounting Voucher"
-msgstr "Računovodstveni vaučer"
-
-#. module: account_check_writing
-#: field:account.voucher,allow_check:0
-msgid "Allow Check Writing"
-msgstr "Dozvoli pisanje čeka"
-
-#. module: account_check_writing
-#: field:account.journal,allow_check_writing:0
-msgid "Allow Check writing"
-msgstr "Dozvoli pisanje čekova"
-
-#. module: account_check_writing
-#: field:account.voucher,amount_in_word:0
-msgid "Amount in Word"
-msgstr "Pisani iznos"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-msgid "Cancel"
-msgstr "Otkaži"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: model:ir.actions.report.xml,name:account_check_writing.action_report_check
-msgid "Check"
-msgstr "Ček"
-
-#. module: account_check_writing
-#: field:res.company,check_layout:0
-msgid "Check Layout"
-msgstr "Raspored čeka"
-
-#. module: account_check_writing
-#: help:account.journal,use_preprint_check:0
-msgid "Check if you use a preformated sheet for check"
-msgstr ""
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check in middle"
-msgstr "Ćek u sredini"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on Top"
-msgstr "Ček na vrhu"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on bottom"
-msgstr "Ćek na dnu"
-
-#. module: account_check_writing
-#: help:res.company,check_layout:0
-msgid ""
-"Check on top is compatible with Quicken, QuickBooks and Microsoft Money. "
-"Check in middle is compatible with Peachtree, ACCPAC and DacEasy. Check on "
-"bottom is compatible with Peachtree, ACCPAC and DacEasy only"
-msgstr ""
-"Ček na vrhu je kompatibilan sa Quicken, QuickBooks i Microsoft Money. Ček u "
-"sredini je kompatibilan sa Peachtree, ACCPAC i DacEasy. Ček na dnu je "
-"kompatibilan sa Peachtree, ACCPAC i DacEasy samo"
-
-#. module: account_check_writing
-#: help:account.journal,allow_check_writing:0
-msgid "Check this if the journal is to be used for writing checks."
-msgstr ""
-"Označite ovo ako će se za pisanje čekova koristiti dnevnik knjiženja."
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_res_company
-msgid "Companies"
-msgstr "Kompanije"
-
-#. module: account_check_writing
-#: field:account.check.write,create_uid:0
-msgid "Created by"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,create_date:0
-msgid "Created on"
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Description"
-msgstr "Opis"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Discount"
-msgstr "Popust"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Due Date"
-msgstr "Datum dospijeća"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "Error!"
-msgstr "Greška!"
-
-#. module: account_check_writing
-#: field:account.check.write,id:0
-#: field:report.account_check_writing.report_check,id:0
-msgid "ID"
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_journal
-msgid "Journal"
-msgstr "Dnevnik knjiženja"
-
-#. module: account_check_writing
-#: field:account.check.write,write_uid:0
-msgid "Last Updated by"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,write_date:0
-msgid "Last Updated on"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,check_number:0
-msgid "Next Check Number"
-msgstr "Sljedeći broj čeka"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "No check selected "
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "One of the printed check already got a number."
-msgstr "Jedan od odštampanih čekova je već dobio broj."
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Open Balance"
-msgstr "Otvoreno saldo"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Original Amount"
-msgstr "Originalni iznos"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Payment"
-msgstr "Plaćanje"
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_check_write
-msgid "Prin Check in Batch"
-msgstr "Štampaj čekove grupno"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: view:account.voucher:account_check_writing.view_vendor_payment_check_form
-msgid "Print Check"
-msgstr "Štampaj ček"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_account_check_write
-msgid "Print Check in Batch"
-msgstr "Štampaj čekove grupno"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "Printing error"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.check.write,check_number:0
-msgid "The number of the next check number to be printed."
-msgstr "Broj sljedećeg čeka za štampanje."
-
-#. module: account_check_writing
-#: field:account.journal,use_preprint_check:0
-msgid "Use Preprinted Check"
-msgstr "Koristi pred-odštampane čekove"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_write_check
-#: model:ir.ui.menu,name:account_check_writing.menu_action_write_check
-msgid "Write Checks"
-msgstr "Piši čekove"
diff --git a/addons/account_check_writing/i18n/cs.po b/addons/account_check_writing/i18n/cs.po
deleted file mode 100644
index 9d015fc..0000000
--- a/addons/account_check_writing/i18n/cs.po
+++ /dev/null
@@ -1,231 +0,0 @@
-# Czech translation for openobject-addons
-# Copyright (c) 2014 Rosetta Contributors and Canonical Ltd 2014
-# This file is distributed under the same license as the openobject-addons package.
-# FIRST AUTHOR <EMAIL@ADDRESS>, 2014.
-#
-msgid ""
-msgstr ""
-"Project-Id-Version: openobject-addons\n"
-"Report-Msgid-Bugs-To: FULL NAME <EMAIL@ADDRESS>\n"
-"POT-Creation-Date: 2014-08-14 13:08+0000\n"
-"PO-Revision-Date: 2014-08-14 16:10+0000\n"
-"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
-"Language-Team: Czech <cs@li.org>\n"
-"MIME-Version: 1.0\n"
-"Content-Type: text/plain; charset=UTF-8\n"
-"Content-Transfer-Encoding: 8bit\n"
-"X-Launchpad-Export-Date: 2014-08-15 06:50+0000\n"
-"X-Generator: Launchpad (build 17156)\n"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,help:account_check_writing.action_write_check
-msgid ""
-"<p class=\"oe_view_nocontent_create\">\n"
-"                Click to create a new check. \n"
-"              </p><p>\n"
-"                The check payment form allows you to track the payment you "
-"do\n"
-"                to your suppliers using checks. When you select a supplier, "
-"the\n"
-"                payment method and an amount for the payment, Odoo will\n"
-"                propose to reconcile your payment with the open supplier\n"
-"                invoices or bills.\n"
-"              </p>\n"
-"            "
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_voucher
-msgid "Accounting Voucher"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.voucher,allow_check:0
-msgid "Allow Check Writing"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.journal,allow_check_writing:0
-msgid "Allow Check writing"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.voucher,amount_in_word:0
-msgid "Amount in Word"
-msgstr ""
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-msgid "Cancel"
-msgstr ""
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: model:ir.actions.report.xml,name:account_check_writing.action_report_check
-msgid "Check"
-msgstr ""
-
-#. module: account_check_writing
-#: field:res.company,check_layout:0
-msgid "Check Layout"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.journal,use_preprint_check:0
-msgid "Check if you use a preformated sheet for check"
-msgstr ""
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check in middle"
-msgstr ""
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on Top"
-msgstr ""
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on bottom"
-msgstr ""
-
-#. module: account_check_writing
-#: help:res.company,check_layout:0
-msgid ""
-"Check on top is compatible with Quicken, QuickBooks and Microsoft Money. "
-"Check in middle is compatible with Peachtree, ACCPAC and DacEasy. Check on "
-"bottom is compatible with Peachtree, ACCPAC and DacEasy only"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.journal,allow_check_writing:0
-msgid "Check this if the journal is to be used for writing checks."
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_res_company
-msgid "Companies"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,create_uid:0
-msgid "Created by"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,create_date:0
-msgid "Created on"
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Description"
-msgstr "Popis"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Discount"
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Due Date"
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "Error!"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,id:0
-#: field:report.account_check_writing.report_check,id:0
-msgid "ID"
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_journal
-msgid "Journal"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,write_uid:0
-msgid "Last Updated by"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,write_date:0
-msgid "Last Updated on"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,check_number:0
-msgid "Next Check Number"
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "No check selected "
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "One of the printed check already got a number."
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Open Balance"
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Original Amount"
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Payment"
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_check_write
-msgid "Prin Check in Batch"
-msgstr ""
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: view:account.voucher:account_check_writing.view_vendor_payment_check_form
-msgid "Print Check"
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_account_check_write
-msgid "Print Check in Batch"
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "Printing error"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.check.write,check_number:0
-msgid "The number of the next check number to be printed."
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.journal,use_preprint_check:0
-msgid "Use Preprinted Check"
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_write_check
-#: model:ir.ui.menu,name:account_check_writing.menu_action_write_check
-msgid "Write Checks"
-msgstr ""
diff --git a/addons/account_check_writing/i18n/de.po b/addons/account_check_writing/i18n/de.po
deleted file mode 100644
index 5067cf5..0000000
--- a/addons/account_check_writing/i18n/de.po
+++ /dev/null
@@ -1,246 +0,0 @@
-# German translation for openobject-addons
-# Copyright (c) 2014 Rosetta Contributors and Canonical Ltd 2014
-# This file is distributed under the same license as the openobject-addons package.
-# FIRST AUTHOR <EMAIL@ADDRESS>, 2014.
-#
-msgid ""
-msgstr ""
-"Project-Id-Version: openobject-addons\n"
-"Report-Msgid-Bugs-To: FULL NAME <EMAIL@ADDRESS>\n"
-"POT-Creation-Date: 2014-08-14 13:08+0000\n"
-"PO-Revision-Date: 2014-08-24 08:11+0000\n"
-"Last-Translator: Thorsten Vocks (OpenBig.org) <thorsten.vocks@big-"
-"consulting.net>\n"
-"Language-Team: German <de@li.org>\n"
-"MIME-Version: 1.0\n"
-"Content-Type: text/plain; charset=UTF-8\n"
-"Content-Transfer-Encoding: 8bit\n"
-"X-Launchpad-Export-Date: 2014-08-25 10:03+0000\n"
-"X-Generator: Launchpad (build 17163)\n"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,help:account_check_writing.action_write_check
-msgid ""
-"<p class=\"oe_view_nocontent_create\">\n"
-"                Click to create a new check. \n"
-"              </p><p>\n"
-"                The check payment form allows you to track the payment you "
-"do\n"
-"                to your suppliers using checks. When you select a supplier, "
-"the\n"
-"                payment method and an amount for the payment, Odoo will\n"
-"                propose to reconcile your payment with the open supplier\n"
-"                invoices or bills.\n"
-"              </p>\n"
-"            "
-msgstr ""
-"<p class=\"oe_view_nocontent_create\">\n"
-"                Klicken Sie zur Erstellung eines Schecks. \n"
-"              </p><p>\n"
-"                Sie können per Scheck Zahlungen an Lieferanten anweisen.\n"
-"                Durch Auswahl eines Lieferanten,   Auswahl der "
-"Zahlungsmethode und\n"
-"                durch Eingabe des Betrags schlägt Odoo die zum Ausgleich "
-"passenden \n"
-"                Rechnungen bereits vor.\n"
-"              </p>\n"
-"            "
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_voucher
-msgid "Accounting Voucher"
-msgstr "Buchung Zahlungsbelege"
-
-#. module: account_check_writing
-#: field:account.voucher,allow_check:0
-msgid "Allow Check Writing"
-msgstr "Scheckzahlung möglich"
-
-#. module: account_check_writing
-#: field:account.journal,allow_check_writing:0
-msgid "Allow Check writing"
-msgstr "Scheckzahlung erlaubt"
-
-#. module: account_check_writing
-#: field:account.voucher,amount_in_word:0
-msgid "Amount in Word"
-msgstr "Betrag in Worten"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-msgid "Cancel"
-msgstr "Abbrechen"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: model:ir.actions.report.xml,name:account_check_writing.action_report_check
-msgid "Check"
-msgstr "Scheck"
-
-#. module: account_check_writing
-#: field:res.company,check_layout:0
-msgid "Check Layout"
-msgstr "Scheck-Layout"
-
-#. module: account_check_writing
-#: help:account.journal,use_preprint_check:0
-msgid "Check if you use a preformated sheet for check"
-msgstr "Prüfen Sie, ob es Vorlagen für Schecks gibt"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check in middle"
-msgstr "Ausgabe in der Mitte"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on Top"
-msgstr "Ausgabe oben"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on bottom"
-msgstr "Ausgabe unten"
-
-#. module: account_check_writing
-#: help:res.company,check_layout:0
-msgid ""
-"Check on top is compatible with Quicken, QuickBooks and Microsoft Money. "
-"Check in middle is compatible with Peachtree, ACCPAC and DacEasy. Check on "
-"bottom is compatible with Peachtree, ACCPAC and DacEasy only"
-msgstr ""
-"Die Feldauswahl im Kopfbereich ist kompatibel mit  Quicken, QuickBooks und "
-"Microsoft Money. Durch Aktivierung der Mitte ist eine Kompatibilität "
-"zwischen Peachtree, ACCPAC and DacEasy ebenfalls gegeben."
-
-#. module: account_check_writing
-#: help:account.journal,allow_check_writing:0
-msgid "Check this if the journal is to be used for writing checks."
-msgstr "Auswahl des Journals für die Buchung der Scheckzahlung."
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_res_company
-msgid "Companies"
-msgstr "Unternehmen"
-
-#. module: account_check_writing
-#: field:account.check.write,create_uid:0
-msgid "Created by"
-msgstr "Erstellt von"
-
-#. module: account_check_writing
-#: field:account.check.write,create_date:0
-msgid "Created on"
-msgstr "Erstellt am"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Description"
-msgstr "Beschreibung"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Discount"
-msgstr "Rabatt"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Due Date"
-msgstr "Fälligkeit"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "Error!"
-msgstr "Fehler!"
-
-#. module: account_check_writing
-#: field:account.check.write,id:0
-#: field:report.account_check_writing.report_check,id:0
-msgid "ID"
-msgstr "ID"
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_journal
-msgid "Journal"
-msgstr "Journal"
-
-#. module: account_check_writing
-#: field:account.check.write,write_uid:0
-msgid "Last Updated by"
-msgstr "Zuletzt aktualisiert durch"
-
-#. module: account_check_writing
-#: field:account.check.write,write_date:0
-msgid "Last Updated on"
-msgstr "Zuletzt aktualisiert am"
-
-#. module: account_check_writing
-#: field:account.check.write,check_number:0
-msgid "Next Check Number"
-msgstr "Nächste Schecknummer"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "No check selected "
-msgstr "Es wurde kein Scheckformular gewählt "
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "One of the printed check already got a number."
-msgstr "Einer der gedruckten Schecks hat bereits eine Nummer"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Open Balance"
-msgstr "Offener Saldo"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Original Amount"
-msgstr "Ursprünglicher Betrag"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Payment"
-msgstr "Zahlung"
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_check_write
-msgid "Prin Check in Batch"
-msgstr "Scheckdruck im Stapel"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: view:account.voucher:account_check_writing.view_vendor_payment_check_form
-msgid "Print Check"
-msgstr "Druckausgabe Scheck"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_account_check_write
-msgid "Print Check in Batch"
-msgstr "Scheckdruck im Stapel"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "Printing error"
-msgstr "Fehler beim Drucken"
-
-#. module: account_check_writing
-#: help:account.check.write,check_number:0
-msgid "The number of the next check number to be printed."
-msgstr "Die Nummer des nächsten Scheckdrucks"
-
-#. module: account_check_writing
-#: field:account.journal,use_preprint_check:0
-msgid "Use Preprinted Check"
-msgstr "Vordruck benutzen"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_write_check
-#: model:ir.ui.menu,name:account_check_writing.menu_action_write_check
-msgid "Write Checks"
-msgstr "Zahlung per Scheck"
diff --git a/addons/account_check_writing/i18n/en_GB.po b/addons/account_check_writing/i18n/en_GB.po
deleted file mode 100644
index b3a1b53..0000000
--- a/addons/account_check_writing/i18n/en_GB.po
+++ /dev/null
@@ -1,234 +0,0 @@
-# English (United Kingdom) translation for openobject-addons
-# Copyright (c) 2014 Rosetta Contributors and Canonical Ltd 2014
-# This file is distributed under the same license as the openobject-addons package.
-# FIRST AUTHOR <EMAIL@ADDRESS>, 2014.
-#
-msgid ""
-msgstr ""
-"Project-Id-Version: openobject-addons\n"
-"Report-Msgid-Bugs-To: FULL NAME <EMAIL@ADDRESS>\n"
-"POT-Creation-Date: 2014-08-14 13:08+0000\n"
-"PO-Revision-Date: 2014-08-14 16:10+0000\n"
-"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
-"Language-Team: English (United Kingdom) <en_GB@li.org>\n"
-"MIME-Version: 1.0\n"
-"Content-Type: text/plain; charset=UTF-8\n"
-"Content-Transfer-Encoding: 8bit\n"
-"X-Launchpad-Export-Date: 2014-08-15 06:50+0000\n"
-"X-Generator: Launchpad (build 17156)\n"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,help:account_check_writing.action_write_check
-msgid ""
-"<p class=\"oe_view_nocontent_create\">\n"
-"                Click to create a new check. \n"
-"              </p><p>\n"
-"                The check payment form allows you to track the payment you "
-"do\n"
-"                to your suppliers using checks. When you select a supplier, "
-"the\n"
-"                payment method and an amount for the payment, Odoo will\n"
-"                propose to reconcile your payment with the open supplier\n"
-"                invoices or bills.\n"
-"              </p>\n"
-"            "
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_voucher
-msgid "Accounting Voucher"
-msgstr "Accounting Voucher"
-
-#. module: account_check_writing
-#: field:account.voucher,allow_check:0
-msgid "Allow Check Writing"
-msgstr "Allow Check Writing"
-
-#. module: account_check_writing
-#: field:account.journal,allow_check_writing:0
-msgid "Allow Check writing"
-msgstr "Allow Check writing"
-
-#. module: account_check_writing
-#: field:account.voucher,amount_in_word:0
-msgid "Amount in Word"
-msgstr "Amount in Word"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-msgid "Cancel"
-msgstr "Cancel"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: model:ir.actions.report.xml,name:account_check_writing.action_report_check
-msgid "Check"
-msgstr "Check"
-
-#. module: account_check_writing
-#: field:res.company,check_layout:0
-msgid "Check Layout"
-msgstr "Check Layout"
-
-#. module: account_check_writing
-#: help:account.journal,use_preprint_check:0
-msgid "Check if you use a preformated sheet for check"
-msgstr ""
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check in middle"
-msgstr "Check in middle"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on Top"
-msgstr "Check on Top"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on bottom"
-msgstr "Check on bottom"
-
-#. module: account_check_writing
-#: help:res.company,check_layout:0
-msgid ""
-"Check on top is compatible with Quicken, QuickBooks and Microsoft Money. "
-"Check in middle is compatible with Peachtree, ACCPAC and DacEasy. Check on "
-"bottom is compatible with Peachtree, ACCPAC and DacEasy only"
-msgstr ""
-"Check on top is compatible with Quicken, QuickBooks and Microsoft Money. "
-"Check in middle is compatible with Peachtree, ACCPAC and DacEasy. Check on "
-"bottom is compatible with Peachtree, ACCPAC and DacEasy only"
-
-#. module: account_check_writing
-#: help:account.journal,allow_check_writing:0
-msgid "Check this if the journal is to be used for writing checks."
-msgstr "Check this if the journal is to be used for writing checks."
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_res_company
-msgid "Companies"
-msgstr "Companies"
-
-#. module: account_check_writing
-#: field:account.check.write,create_uid:0
-msgid "Created by"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,create_date:0
-msgid "Created on"
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Description"
-msgstr "Description"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Discount"
-msgstr "Discount"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Due Date"
-msgstr "Due Date"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "Error!"
-msgstr "Error!"
-
-#. module: account_check_writing
-#: field:account.check.write,id:0
-#: field:report.account_check_writing.report_check,id:0
-msgid "ID"
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_journal
-msgid "Journal"
-msgstr "Journal"
-
-#. module: account_check_writing
-#: field:account.check.write,write_uid:0
-msgid "Last Updated by"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,write_date:0
-msgid "Last Updated on"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,check_number:0
-msgid "Next Check Number"
-msgstr "Next Check Number"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "No check selected "
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "One of the printed check already got a number."
-msgstr "One of the printed check already got a number."
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Open Balance"
-msgstr "Open Balance"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Original Amount"
-msgstr "Original Amount"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Payment"
-msgstr "Payment"
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_check_write
-msgid "Prin Check in Batch"
-msgstr "Prin Check in Batch"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: view:account.voucher:account_check_writing.view_vendor_payment_check_form
-msgid "Print Check"
-msgstr "Print Check"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_account_check_write
-msgid "Print Check in Batch"
-msgstr "Print Check in Batch"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "Printing error"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.check.write,check_number:0
-msgid "The number of the next check number to be printed."
-msgstr "The number of the next check number to be printed."
-
-#. module: account_check_writing
-#: field:account.journal,use_preprint_check:0
-msgid "Use Preprinted Check"
-msgstr "Use Preprinted Check"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_write_check
-#: model:ir.ui.menu,name:account_check_writing.menu_action_write_check
-msgid "Write Checks"
-msgstr "Write Checks"
diff --git a/addons/account_check_writing/i18n/es.po b/addons/account_check_writing/i18n/es.po
deleted file mode 100644
index 3629805..0000000
--- a/addons/account_check_writing/i18n/es.po
+++ /dev/null
@@ -1,245 +0,0 @@
-# Spanish translation for openobject-addons
-# Copyright (c) 2014 Rosetta Contributors and Canonical Ltd 2014
-# This file is distributed under the same license as the openobject-addons package.
-# FIRST AUTHOR <EMAIL@ADDRESS>, 2014.
-#
-msgid ""
-msgstr ""
-"Project-Id-Version: openobject-addons\n"
-"Report-Msgid-Bugs-To: FULL NAME <EMAIL@ADDRESS>\n"
-"POT-Creation-Date: 2014-08-14 13:08+0000\n"
-"PO-Revision-Date: 2014-08-14 19:12+0000\n"
-"Last-Translator: Pedro Manuel Baeza <pedro.baeza@gmail.com>\n"
-"Language-Team: Spanish <es@li.org>\n"
-"MIME-Version: 1.0\n"
-"Content-Type: text/plain; charset=UTF-8\n"
-"Content-Transfer-Encoding: 8bit\n"
-"X-Launchpad-Export-Date: 2014-08-15 06:50+0000\n"
-"X-Generator: Launchpad (build 17156)\n"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,help:account_check_writing.action_write_check
-msgid ""
-"<p class=\"oe_view_nocontent_create\">\n"
-"                Click to create a new check. \n"
-"              </p><p>\n"
-"                The check payment form allows you to track the payment you "
-"do\n"
-"                to your suppliers using checks. When you select a supplier, "
-"the\n"
-"                payment method and an amount for the payment, Odoo will\n"
-"                propose to reconcile your payment with the open supplier\n"
-"                invoices or bills.\n"
-"              </p>\n"
-"            "
-msgstr ""
-"<p class=\"oe_view_nocontent_create\">\n"
-"Pulse para crear un nuevo cheque \n"
-"</p><p>\n"
-"El formulario de pago por cheque permite gestionar el pago que hace\n"
-"a sus proveedores usando cheques. Cuando selecciona un proveedor,\n"
-"un método de pago y un importe para el pago, Odoo propondrá \n"
-"conciliar el pago con las facturas de proveedor o recibos pendientes.\n"
-"</p>\n"
-"            "
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_voucher
-msgid "Accounting Voucher"
-msgstr "Comprobante contable"
-
-#. module: account_check_writing
-#: field:account.voucher,allow_check:0
-msgid "Allow Check Writing"
-msgstr "Permitir escribir cheques"
-
-#. module: account_check_writing
-#: field:account.journal,allow_check_writing:0
-msgid "Allow Check writing"
-msgstr "Permitir escribir cheques"
-
-#. module: account_check_writing
-#: field:account.voucher,amount_in_word:0
-msgid "Amount in Word"
-msgstr "Cantidad en palabras"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-msgid "Cancel"
-msgstr "Cancelar"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: model:ir.actions.report.xml,name:account_check_writing.action_report_check
-msgid "Check"
-msgstr "Cheque"
-
-#. module: account_check_writing
-#: field:res.company,check_layout:0
-msgid "Check Layout"
-msgstr "Disposición del cheque"
-
-#. module: account_check_writing
-#: help:account.journal,use_preprint_check:0
-msgid "Check if you use a preformated sheet for check"
-msgstr ""
-"Marque esta casilla si usa una plantilla preformateada para el cheque"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check in middle"
-msgstr "Cheque en el centro"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on Top"
-msgstr "Cheque en la parte de arriba"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on bottom"
-msgstr "Cheque en la parte de abajo"
-
-#. module: account_check_writing
-#: help:res.company,check_layout:0
-msgid ""
-"Check on top is compatible with Quicken, QuickBooks and Microsoft Money. "
-"Check in middle is compatible with Peachtree, ACCPAC and DacEasy. Check on "
-"bottom is compatible with Peachtree, ACCPAC and DacEasy only"
-msgstr ""
-"Cheque en la parte de arriba es compatible con Quicken, Quickbooks y "
-"Microsoft Money. Cheque en el medio es compatible con PeachTree, ACCPAC y "
-"DacEasy. Cheque en la parte de abajo es compatible con Peachtree, ACCPAC y "
-"DacEasy exclusivamente"
-
-#. module: account_check_writing
-#: help:account.journal,allow_check_writing:0
-msgid "Check this if the journal is to be used for writing checks."
-msgstr "Revise si el diario es usado para registrar cheques."
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_res_company
-msgid "Companies"
-msgstr "Compañías"
-
-#. module: account_check_writing
-#: field:account.check.write,create_uid:0
-msgid "Created by"
-msgstr "Creado por"
-
-#. module: account_check_writing
-#: field:account.check.write,create_date:0
-msgid "Created on"
-msgstr "Creado en"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Description"
-msgstr "Descripción"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Discount"
-msgstr "Descuento"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Due Date"
-msgstr "Fecha de vencimiento"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "Error!"
-msgstr "¡Error!"
-
-#. module: account_check_writing
-#: field:account.check.write,id:0
-#: field:report.account_check_writing.report_check,id:0
-msgid "ID"
-msgstr "ID"
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_journal
-msgid "Journal"
-msgstr "Diario"
-
-#. module: account_check_writing
-#: field:account.check.write,write_uid:0
-msgid "Last Updated by"
-msgstr "Última actualización de"
-
-#. module: account_check_writing
-#: field:account.check.write,write_date:0
-msgid "Last Updated on"
-msgstr "Última actualización en"
-
-#. module: account_check_writing
-#: field:account.check.write,check_number:0
-msgid "Next Check Number"
-msgstr "Nº del próximo cheque"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "No check selected "
-msgstr "Sin cheque seleccionado "
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "One of the printed check already got a number."
-msgstr "Uno de los cheques impresos ya tiene un número."
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Open Balance"
-msgstr "Saldo Inicial"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Original Amount"
-msgstr "Importe original"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Payment"
-msgstr "Pagos"
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_check_write
-msgid "Prin Check in Batch"
-msgstr "Imprimir cheques en lote"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: view:account.voucher:account_check_writing.view_vendor_payment_check_form
-msgid "Print Check"
-msgstr "Imprimir cheque"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_account_check_write
-msgid "Print Check in Batch"
-msgstr "Imprimir cheques en lote"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "Printing error"
-msgstr "Error de impresión"
-
-#. module: account_check_writing
-#: help:account.check.write,check_number:0
-msgid "The number of the next check number to be printed."
-msgstr "Nº del siguiente cheque a ser impreso."
-
-#. module: account_check_writing
-#: field:account.journal,use_preprint_check:0
-msgid "Use Preprinted Check"
-msgstr "Usar cheque preimpreso"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_write_check
-#: model:ir.ui.menu,name:account_check_writing.menu_action_write_check
-msgid "Write Checks"
-msgstr "Escribir cheques"
diff --git a/addons/account_check_writing/i18n/es_AR.po b/addons/account_check_writing/i18n/es_AR.po
deleted file mode 100644
index d5c00e0..0000000
--- a/addons/account_check_writing/i18n/es_AR.po
+++ /dev/null
@@ -1,231 +0,0 @@
-# Spanish (Argentina) translation for openobject-addons
-# Copyright (c) 2014 Rosetta Contributors and Canonical Ltd 2014
-# This file is distributed under the same license as the openobject-addons package.
-# FIRST AUTHOR <EMAIL@ADDRESS>, 2014.
-#
-msgid ""
-msgstr ""
-"Project-Id-Version: openobject-addons\n"
-"Report-Msgid-Bugs-To: FULL NAME <EMAIL@ADDRESS>\n"
-"POT-Creation-Date: 2014-08-14 13:08+0000\n"
-"PO-Revision-Date: 2014-08-14 16:10+0000\n"
-"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
-"Language-Team: Spanish (Argentina) <es_AR@li.org>\n"
-"MIME-Version: 1.0\n"
-"Content-Type: text/plain; charset=UTF-8\n"
-"Content-Transfer-Encoding: 8bit\n"
-"X-Launchpad-Export-Date: 2014-08-15 06:50+0000\n"
-"X-Generator: Launchpad (build 17156)\n"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,help:account_check_writing.action_write_check
-msgid ""
-"<p class=\"oe_view_nocontent_create\">\n"
-"                Click to create a new check. \n"
-"              </p><p>\n"
-"                The check payment form allows you to track the payment you "
-"do\n"
-"                to your suppliers using checks. When you select a supplier, "
-"the\n"
-"                payment method and an amount for the payment, Odoo will\n"
-"                propose to reconcile your payment with the open supplier\n"
-"                invoices or bills.\n"
-"              </p>\n"
-"            "
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_voucher
-msgid "Accounting Voucher"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.voucher,allow_check:0
-msgid "Allow Check Writing"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.journal,allow_check_writing:0
-msgid "Allow Check writing"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.voucher,amount_in_word:0
-msgid "Amount in Word"
-msgstr ""
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-msgid "Cancel"
-msgstr ""
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: model:ir.actions.report.xml,name:account_check_writing.action_report_check
-msgid "Check"
-msgstr ""
-
-#. module: account_check_writing
-#: field:res.company,check_layout:0
-msgid "Check Layout"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.journal,use_preprint_check:0
-msgid "Check if you use a preformated sheet for check"
-msgstr ""
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check in middle"
-msgstr "Cheque en el centro"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on Top"
-msgstr ""
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on bottom"
-msgstr "Cheque en la parte de abajo"
-
-#. module: account_check_writing
-#: help:res.company,check_layout:0
-msgid ""
-"Check on top is compatible with Quicken, QuickBooks and Microsoft Money. "
-"Check in middle is compatible with Peachtree, ACCPAC and DacEasy. Check on "
-"bottom is compatible with Peachtree, ACCPAC and DacEasy only"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.journal,allow_check_writing:0
-msgid "Check this if the journal is to be used for writing checks."
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_res_company
-msgid "Companies"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,create_uid:0
-msgid "Created by"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,create_date:0
-msgid "Created on"
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Description"
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Discount"
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Due Date"
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "Error!"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,id:0
-#: field:report.account_check_writing.report_check,id:0
-msgid "ID"
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_journal
-msgid "Journal"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,write_uid:0
-msgid "Last Updated by"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,write_date:0
-msgid "Last Updated on"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,check_number:0
-msgid "Next Check Number"
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "No check selected "
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "One of the printed check already got a number."
-msgstr "Uno de los cheques impresos ya tiene un número."
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Open Balance"
-msgstr "Balance Inicial"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Original Amount"
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Payment"
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_check_write
-msgid "Prin Check in Batch"
-msgstr ""
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: view:account.voucher:account_check_writing.view_vendor_payment_check_form
-msgid "Print Check"
-msgstr "Imprimir Cheque"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_account_check_write
-msgid "Print Check in Batch"
-msgstr "Imprimir Cheque en lote"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "Printing error"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.check.write,check_number:0
-msgid "The number of the next check number to be printed."
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.journal,use_preprint_check:0
-msgid "Use Preprinted Check"
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_write_check
-#: model:ir.ui.menu,name:account_check_writing.menu_action_write_check
-msgid "Write Checks"
-msgstr ""
diff --git a/addons/account_check_writing/i18n/es_CR.po b/addons/account_check_writing/i18n/es_CR.po
deleted file mode 100644
index cfcd334..0000000
--- a/addons/account_check_writing/i18n/es_CR.po
+++ /dev/null
@@ -1,237 +0,0 @@
-# Spanish (Costa Rica) translation for openobject-addons
-# Copyright (c) 2014 Rosetta Contributors and Canonical Ltd 2014
-# This file is distributed under the same license as the openobject-addons package.
-# FIRST AUTHOR <EMAIL@ADDRESS>, 2014.
-#
-msgid ""
-msgstr ""
-"Project-Id-Version: openobject-addons\n"
-"Report-Msgid-Bugs-To: FULL NAME <EMAIL@ADDRESS>\n"
-"POT-Creation-Date: 2014-08-14 13:08+0000\n"
-"PO-Revision-Date: 2014-08-14 16:10+0000\n"
-"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
-"Language-Team: Spanish (Costa Rica) <es_CR@li.org>\n"
-"MIME-Version: 1.0\n"
-"Content-Type: text/plain; charset=UTF-8\n"
-"Content-Transfer-Encoding: 8bit\n"
-"X-Launchpad-Export-Date: 2014-08-15 06:50+0000\n"
-"X-Generator: Launchpad (build 17156)\n"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,help:account_check_writing.action_write_check
-msgid ""
-"<p class=\"oe_view_nocontent_create\">\n"
-"                Click to create a new check. \n"
-"              </p><p>\n"
-"                The check payment form allows you to track the payment you "
-"do\n"
-"                to your suppliers using checks. When you select a supplier, "
-"the\n"
-"                payment method and an amount for the payment, Odoo will\n"
-"                propose to reconcile your payment with the open supplier\n"
-"                invoices or bills.\n"
-"              </p>\n"
-"            "
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_voucher
-msgid "Accounting Voucher"
-msgstr "Comprobantes contables"
-
-#. module: account_check_writing
-#: field:account.voucher,allow_check:0
-msgid "Allow Check Writing"
-msgstr "Permitir la escritura de cheque"
-
-#. module: account_check_writing
-#: field:account.journal,allow_check_writing:0
-msgid "Allow Check writing"
-msgstr "Permitir la escritura de cheque"
-
-#. module: account_check_writing
-#: field:account.voucher,amount_in_word:0
-msgid "Amount in Word"
-msgstr "Cantidad en palabras"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-msgid "Cancel"
-msgstr ""
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: model:ir.actions.report.xml,name:account_check_writing.action_report_check
-msgid "Check"
-msgstr ""
-
-#. module: account_check_writing
-#: field:res.company,check_layout:0
-msgid "Check Layout"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.journal,use_preprint_check:0
-msgid "Check if you use a preformated sheet for check"
-msgstr ""
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check in middle"
-msgstr "Verifique en medio"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on Top"
-msgstr "Verifique el tope"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on bottom"
-msgstr "Verifique en la parte inferior"
-
-#. module: account_check_writing
-#: help:res.company,check_layout:0
-msgid ""
-"Check on top is compatible with Quicken, QuickBooks and Microsoft Money. "
-"Check in middle is compatible with Peachtree, ACCPAC and DacEasy. Check on "
-"bottom is compatible with Peachtree, ACCPAC and DacEasy only"
-msgstr ""
-"Revise si la parte superior es compatible con Quicken, QuickBooks y "
-"Microsoft Money. Compruebe en el centro si es compatible con Peachtree, "
-"ACCPAC y DacEasy. Revise en la parte inferior es compatible con Peachtree, "
-"ACCPAC y sólo DacEasy"
-
-#. module: account_check_writing
-#: help:account.journal,allow_check_writing:0
-msgid "Check this if the journal is to be used for writing checks."
-msgstr ""
-"Seleccione esta opción si el diario es el que se utilizará para la emisión "
-"de cheques."
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_res_company
-msgid "Companies"
-msgstr "Compañias"
-
-#. module: account_check_writing
-#: field:account.check.write,create_uid:0
-msgid "Created by"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,create_date:0
-msgid "Created on"
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Description"
-msgstr "Descripción"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Discount"
-msgstr "Descuento"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Due Date"
-msgstr "Fecha de vencimiento"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "Error!"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,id:0
-#: field:report.account_check_writing.report_check,id:0
-msgid "ID"
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_journal
-msgid "Journal"
-msgstr "Diario"
-
-#. module: account_check_writing
-#: field:account.check.write,write_uid:0
-msgid "Last Updated by"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,write_date:0
-msgid "Last Updated on"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,check_number:0
-msgid "Next Check Number"
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "No check selected "
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "One of the printed check already got a number."
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Open Balance"
-msgstr "Abrir balance"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Original Amount"
-msgstr "Importe original"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Payment"
-msgstr "Pago"
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_check_write
-msgid "Prin Check in Batch"
-msgstr ""
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: view:account.voucher:account_check_writing.view_vendor_payment_check_form
-msgid "Print Check"
-msgstr "Imprimir Cheque"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_account_check_write
-msgid "Print Check in Batch"
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "Printing error"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.check.write,check_number:0
-msgid "The number of the next check number to be printed."
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.journal,use_preprint_check:0
-msgid "Use Preprinted Check"
-msgstr "Utilice cheque preimpreso"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_write_check
-#: model:ir.ui.menu,name:account_check_writing.menu_action_write_check
-msgid "Write Checks"
-msgstr "Escribir cheques"
diff --git a/addons/account_check_writing/i18n/es_EC.po b/addons/account_check_writing/i18n/es_EC.po
deleted file mode 100644
index e8c7aca..0000000
--- a/addons/account_check_writing/i18n/es_EC.po
+++ /dev/null
@@ -1,234 +0,0 @@
-# Spanish (Ecuador) translation for openobject-addons
-# Copyright (c) 2014 Rosetta Contributors and Canonical Ltd 2014
-# This file is distributed under the same license as the openobject-addons package.
-# FIRST AUTHOR <EMAIL@ADDRESS>, 2014.
-#
-msgid ""
-msgstr ""
-"Project-Id-Version: openobject-addons\n"
-"Report-Msgid-Bugs-To: FULL NAME <EMAIL@ADDRESS>\n"
-"POT-Creation-Date: 2014-08-14 13:08+0000\n"
-"PO-Revision-Date: 2014-08-14 16:10+0000\n"
-"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
-"Language-Team: Spanish (Ecuador) <es_EC@li.org>\n"
-"MIME-Version: 1.0\n"
-"Content-Type: text/plain; charset=UTF-8\n"
-"Content-Transfer-Encoding: 8bit\n"
-"X-Launchpad-Export-Date: 2014-08-15 06:50+0000\n"
-"X-Generator: Launchpad (build 17156)\n"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,help:account_check_writing.action_write_check
-msgid ""
-"<p class=\"oe_view_nocontent_create\">\n"
-"                Click to create a new check. \n"
-"              </p><p>\n"
-"                The check payment form allows you to track the payment you "
-"do\n"
-"                to your suppliers using checks. When you select a supplier, "
-"the\n"
-"                payment method and an amount for the payment, Odoo will\n"
-"                propose to reconcile your payment with the open supplier\n"
-"                invoices or bills.\n"
-"              </p>\n"
-"            "
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_voucher
-msgid "Accounting Voucher"
-msgstr "Comprobantes de Pago"
-
-#. module: account_check_writing
-#: field:account.voucher,allow_check:0
-msgid "Allow Check Writing"
-msgstr "Permitir Emisión de Cheques"
-
-#. module: account_check_writing
-#: field:account.journal,allow_check_writing:0
-msgid "Allow Check writing"
-msgstr "Permitir emisión de cheques"
-
-#. module: account_check_writing
-#: field:account.voucher,amount_in_word:0
-msgid "Amount in Word"
-msgstr "Monto en Letras"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-msgid "Cancel"
-msgstr ""
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: model:ir.actions.report.xml,name:account_check_writing.action_report_check
-msgid "Check"
-msgstr ""
-
-#. module: account_check_writing
-#: field:res.company,check_layout:0
-msgid "Check Layout"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.journal,use_preprint_check:0
-msgid "Check if you use a preformated sheet for check"
-msgstr ""
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check in middle"
-msgstr "Cheque in middle"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on Top"
-msgstr "Cheque on Top"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on bottom"
-msgstr "Cheque on bottom"
-
-#. module: account_check_writing
-#: help:res.company,check_layout:0
-msgid ""
-"Check on top is compatible with Quicken, QuickBooks and Microsoft Money. "
-"Check in middle is compatible with Peachtree, ACCPAC and DacEasy. Check on "
-"bottom is compatible with Peachtree, ACCPAC and DacEasy only"
-msgstr ""
-"Check on top is compatible with Quicken, QuickBooks and Microsoft Money. "
-"Check in middle is compatible with Peachtree, ACCPAC and DacEasy. Check on "
-"bottom is compatible with Peachtree, ACCPAC and DacEasy only"
-
-#. module: account_check_writing
-#: help:account.journal,allow_check_writing:0
-msgid "Check this if the journal is to be used for writing checks."
-msgstr "Activar si este diario es usado para emitir cheques"
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_res_company
-msgid "Companies"
-msgstr "Compañias"
-
-#. module: account_check_writing
-#: field:account.check.write,create_uid:0
-msgid "Created by"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,create_date:0
-msgid "Created on"
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Description"
-msgstr "Descripción"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Discount"
-msgstr "Descuento"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Due Date"
-msgstr "Fecha de vencimiento"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "Error!"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,id:0
-#: field:report.account_check_writing.report_check,id:0
-msgid "ID"
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_journal
-msgid "Journal"
-msgstr "Diario"
-
-#. module: account_check_writing
-#: field:account.check.write,write_uid:0
-msgid "Last Updated by"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,write_date:0
-msgid "Last Updated on"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,check_number:0
-msgid "Next Check Number"
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "No check selected "
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "One of the printed check already got a number."
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Open Balance"
-msgstr "Saldo Inicial"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Original Amount"
-msgstr "Monto Inicial"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Payment"
-msgstr "Pagos"
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_check_write
-msgid "Prin Check in Batch"
-msgstr ""
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: view:account.voucher:account_check_writing.view_vendor_payment_check_form
-msgid "Print Check"
-msgstr "Imprimir Cheque"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_account_check_write
-msgid "Print Check in Batch"
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "Printing error"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.check.write,check_number:0
-msgid "The number of the next check number to be printed."
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.journal,use_preprint_check:0
-msgid "Use Preprinted Check"
-msgstr "Usar cheque preimpreso"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_write_check
-#: model:ir.ui.menu,name:account_check_writing.menu_action_write_check
-msgid "Write Checks"
-msgstr "Escribir Cheque"
diff --git a/addons/account_check_writing/i18n/es_MX.po b/addons/account_check_writing/i18n/es_MX.po
deleted file mode 100644
index a2f3477..0000000
--- a/addons/account_check_writing/i18n/es_MX.po
+++ /dev/null
@@ -1,235 +0,0 @@
-# Spanish (Mexico) translation for openobject-addons
-# Copyright (c) 2014 Rosetta Contributors and Canonical Ltd 2014
-# This file is distributed under the same license as the openobject-addons package.
-# FIRST AUTHOR <EMAIL@ADDRESS>, 2014.
-#
-msgid ""
-msgstr ""
-"Project-Id-Version: openobject-addons\n"
-"Report-Msgid-Bugs-To: FULL NAME <EMAIL@ADDRESS>\n"
-"POT-Creation-Date: 2014-08-14 13:08+0000\n"
-"PO-Revision-Date: 2014-08-14 16:10+0000\n"
-"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
-"Language-Team: Spanish (Mexico) <es_MX@li.org>\n"
-"MIME-Version: 1.0\n"
-"Content-Type: text/plain; charset=UTF-8\n"
-"Content-Transfer-Encoding: 8bit\n"
-"X-Launchpad-Export-Date: 2014-08-15 06:50+0000\n"
-"X-Generator: Launchpad (build 17156)\n"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,help:account_check_writing.action_write_check
-msgid ""
-"<p class=\"oe_view_nocontent_create\">\n"
-"                Click to create a new check. \n"
-"              </p><p>\n"
-"                The check payment form allows you to track the payment you "
-"do\n"
-"                to your suppliers using checks. When you select a supplier, "
-"the\n"
-"                payment method and an amount for the payment, Odoo will\n"
-"                propose to reconcile your payment with the open supplier\n"
-"                invoices or bills.\n"
-"              </p>\n"
-"            "
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_voucher
-msgid "Accounting Voucher"
-msgstr "Comprobante contable"
-
-#. module: account_check_writing
-#: field:account.voucher,allow_check:0
-msgid "Allow Check Writing"
-msgstr "Permitir escribir cheques"
-
-#. module: account_check_writing
-#: field:account.journal,allow_check_writing:0
-msgid "Allow Check writing"
-msgstr "Permitir escribir cheques"
-
-#. module: account_check_writing
-#: field:account.voucher,amount_in_word:0
-msgid "Amount in Word"
-msgstr "Cantidad en letra"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-msgid "Cancel"
-msgstr ""
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: model:ir.actions.report.xml,name:account_check_writing.action_report_check
-msgid "Check"
-msgstr ""
-
-#. module: account_check_writing
-#: field:res.company,check_layout:0
-msgid "Check Layout"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.journal,use_preprint_check:0
-msgid "Check if you use a preformated sheet for check"
-msgstr ""
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check in middle"
-msgstr "Cheque en el centro"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on Top"
-msgstr "Cheque en la parte de arriba"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on bottom"
-msgstr "Cheque en la parte de abajo"
-
-#. module: account_check_writing
-#: help:res.company,check_layout:0
-msgid ""
-"Check on top is compatible with Quicken, QuickBooks and Microsoft Money. "
-"Check in middle is compatible with Peachtree, ACCPAC and DacEasy. Check on "
-"bottom is compatible with Peachtree, ACCPAC and DacEasy only"
-msgstr ""
-"Cheque en la parte de arriba es compatible con Quicken, Quickbooks y "
-"Microsoft Money. Cheque en el medio es compatible con PeachTree, ACCPAC y "
-"DacEasy. Cheque en la parte de abajo es compatible con Peachtree, ACCPAC y "
-"DacEasy exclusivamente"
-
-#. module: account_check_writing
-#: help:account.journal,allow_check_writing:0
-msgid "Check this if the journal is to be used for writing checks."
-msgstr "Revise si el diario es usado para registrar cheques."
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_res_company
-msgid "Companies"
-msgstr "Compañías"
-
-#. module: account_check_writing
-#: field:account.check.write,create_uid:0
-msgid "Created by"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,create_date:0
-msgid "Created on"
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Description"
-msgstr "Descripción"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Discount"
-msgstr "Descuento"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Due Date"
-msgstr "Fecha de vencimiento"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "Error!"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,id:0
-#: field:report.account_check_writing.report_check,id:0
-msgid "ID"
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_journal
-msgid "Journal"
-msgstr "Diário"
-
-#. module: account_check_writing
-#: field:account.check.write,write_uid:0
-msgid "Last Updated by"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,write_date:0
-msgid "Last Updated on"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,check_number:0
-msgid "Next Check Number"
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "No check selected "
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "One of the printed check already got a number."
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Open Balance"
-msgstr "Saldo Inicial"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Original Amount"
-msgstr "Importe original"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Payment"
-msgstr "Pago"
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_check_write
-msgid "Prin Check in Batch"
-msgstr ""
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: view:account.voucher:account_check_writing.view_vendor_payment_check_form
-msgid "Print Check"
-msgstr "Imprimir cheque"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_account_check_write
-msgid "Print Check in Batch"
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "Printing error"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.check.write,check_number:0
-msgid "The number of the next check number to be printed."
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.journal,use_preprint_check:0
-msgid "Use Preprinted Check"
-msgstr "Usar cheque preimpreso"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_write_check
-#: model:ir.ui.menu,name:account_check_writing.menu_action_write_check
-msgid "Write Checks"
-msgstr "Escribir cheques"
diff --git a/addons/account_check_writing/i18n/fi.po b/addons/account_check_writing/i18n/fi.po
deleted file mode 100644
index 34d8cf1..0000000
--- a/addons/account_check_writing/i18n/fi.po
+++ /dev/null
@@ -1,231 +0,0 @@
-# Finnish translation for openobject-addons
-# Copyright (c) 2014 Rosetta Contributors and Canonical Ltd 2014
-# This file is distributed under the same license as the openobject-addons package.
-# FIRST AUTHOR <EMAIL@ADDRESS>, 2014.
-#
-msgid ""
-msgstr ""
-"Project-Id-Version: openobject-addons\n"
-"Report-Msgid-Bugs-To: FULL NAME <EMAIL@ADDRESS>\n"
-"POT-Creation-Date: 2014-08-14 13:08+0000\n"
-"PO-Revision-Date: 2014-08-14 16:10+0000\n"
-"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
-"Language-Team: Finnish <fi@li.org>\n"
-"MIME-Version: 1.0\n"
-"Content-Type: text/plain; charset=UTF-8\n"
-"Content-Transfer-Encoding: 8bit\n"
-"X-Launchpad-Export-Date: 2014-08-15 06:50+0000\n"
-"X-Generator: Launchpad (build 17156)\n"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,help:account_check_writing.action_write_check
-msgid ""
-"<p class=\"oe_view_nocontent_create\">\n"
-"                Click to create a new check. \n"
-"              </p><p>\n"
-"                The check payment form allows you to track the payment you "
-"do\n"
-"                to your suppliers using checks. When you select a supplier, "
-"the\n"
-"                payment method and an amount for the payment, Odoo will\n"
-"                propose to reconcile your payment with the open supplier\n"
-"                invoices or bills.\n"
-"              </p>\n"
-"            "
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_voucher
-msgid "Accounting Voucher"
-msgstr "Kirjanpitotosite"
-
-#. module: account_check_writing
-#: field:account.voucher,allow_check:0
-msgid "Allow Check Writing"
-msgstr "Salli sekkien kirjoittaminen"
-
-#. module: account_check_writing
-#: field:account.journal,allow_check_writing:0
-msgid "Allow Check writing"
-msgstr "Salli sekkien kirjoittaminen"
-
-#. module: account_check_writing
-#: field:account.voucher,amount_in_word:0
-msgid "Amount in Word"
-msgstr ""
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-msgid "Cancel"
-msgstr ""
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: model:ir.actions.report.xml,name:account_check_writing.action_report_check
-msgid "Check"
-msgstr ""
-
-#. module: account_check_writing
-#: field:res.company,check_layout:0
-msgid "Check Layout"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.journal,use_preprint_check:0
-msgid "Check if you use a preformated sheet for check"
-msgstr ""
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check in middle"
-msgstr ""
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on Top"
-msgstr ""
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on bottom"
-msgstr ""
-
-#. module: account_check_writing
-#: help:res.company,check_layout:0
-msgid ""
-"Check on top is compatible with Quicken, QuickBooks and Microsoft Money. "
-"Check in middle is compatible with Peachtree, ACCPAC and DacEasy. Check on "
-"bottom is compatible with Peachtree, ACCPAC and DacEasy only"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.journal,allow_check_writing:0
-msgid "Check this if the journal is to be used for writing checks."
-msgstr "Valitse tämä, jos päiväkirjaa käytetään sekkien kirjoittamiseen."
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_res_company
-msgid "Companies"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,create_uid:0
-msgid "Created by"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,create_date:0
-msgid "Created on"
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Description"
-msgstr "Kuvaus"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Discount"
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Due Date"
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "Error!"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,id:0
-#: field:report.account_check_writing.report_check,id:0
-msgid "ID"
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_journal
-msgid "Journal"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,write_uid:0
-msgid "Last Updated by"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,write_date:0
-msgid "Last Updated on"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,check_number:0
-msgid "Next Check Number"
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "No check selected "
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "One of the printed check already got a number."
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Open Balance"
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Original Amount"
-msgstr "Alkuperäinen summa"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Payment"
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_check_write
-msgid "Prin Check in Batch"
-msgstr ""
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: view:account.voucher:account_check_writing.view_vendor_payment_check_form
-msgid "Print Check"
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_account_check_write
-msgid "Print Check in Batch"
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "Printing error"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.check.write,check_number:0
-msgid "The number of the next check number to be printed."
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.journal,use_preprint_check:0
-msgid "Use Preprinted Check"
-msgstr "Käytä esitulostettua sekkiä"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_write_check
-#: model:ir.ui.menu,name:account_check_writing.menu_action_write_check
-msgid "Write Checks"
-msgstr "Kirjoita sekkejä"
diff --git a/addons/account_check_writing/i18n/fr.po b/addons/account_check_writing/i18n/fr.po
deleted file mode 100644
index e259e75..0000000
--- a/addons/account_check_writing/i18n/fr.po
+++ /dev/null
@@ -1,235 +0,0 @@
-# French translation for openobject-addons
-# Copyright (c) 2014 Rosetta Contributors and Canonical Ltd 2014
-# This file is distributed under the same license as the openobject-addons package.
-# FIRST AUTHOR <EMAIL@ADDRESS>, 2014.
-#
-msgid ""
-msgstr ""
-"Project-Id-Version: openobject-addons\n"
-"Report-Msgid-Bugs-To: FULL NAME <EMAIL@ADDRESS>\n"
-"POT-Creation-Date: 2014-08-14 13:08+0000\n"
-"PO-Revision-Date: 2014-12-28 05:59+0000\n"
-"Last-Translator: Florian Hatat <Unknown>\n"
-"Language-Team: French <fr@li.org>\n"
-"MIME-Version: 1.0\n"
-"Content-Type: text/plain; charset=UTF-8\n"
-"Content-Transfer-Encoding: 8bit\n"
-"X-Launchpad-Export-Date: 2014-12-29 06:34+0000\n"
-"X-Generator: Launchpad (build 17286)\n"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,help:account_check_writing.action_write_check
-msgid ""
-"<p class=\"oe_view_nocontent_create\">\n"
-"                Click to create a new check. \n"
-"              </p><p>\n"
-"                The check payment form allows you to track the payment you "
-"do\n"
-"                to your suppliers using checks. When you select a supplier, "
-"the\n"
-"                payment method and an amount for the payment, Odoo will\n"
-"                propose to reconcile your payment with the open supplier\n"
-"                invoices or bills.\n"
-"              </p>\n"
-"            "
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_voucher
-msgid "Accounting Voucher"
-msgstr "Justificatif comptable"
-
-#. module: account_check_writing
-#: field:account.voucher,allow_check:0
-msgid "Allow Check Writing"
-msgstr "Autoriser l'émission du chèque"
-
-#. module: account_check_writing
-#: field:account.journal,allow_check_writing:0
-msgid "Allow Check writing"
-msgstr "Autoriser l'émission de chèques"
-
-#. module: account_check_writing
-#: field:account.voucher,amount_in_word:0
-msgid "Amount in Word"
-msgstr "Montant en lettres"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-msgid "Cancel"
-msgstr ""
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: model:ir.actions.report.xml,name:account_check_writing.action_report_check
-msgid "Check"
-msgstr ""
-
-#. module: account_check_writing
-#: field:res.company,check_layout:0
-msgid "Check Layout"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.journal,use_preprint_check:0
-msgid "Check if you use a preformated sheet for check"
-msgstr ""
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check in middle"
-msgstr "Chèque au milieu"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on Top"
-msgstr "Chéque en haut"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on bottom"
-msgstr "Chèque en bas"
-
-#. module: account_check_writing
-#: help:res.company,check_layout:0
-msgid ""
-"Check on top is compatible with Quicken, QuickBooks and Microsoft Money. "
-"Check in middle is compatible with Peachtree, ACCPAC and DacEasy. Check on "
-"bottom is compatible with Peachtree, ACCPAC and DacEasy only"
-msgstr ""
-"Chèque en haut est compatible avec Quicken, QuickBooks et Microsoft Money. "
-"\r\n"
-"Chèque  au milieu est compatible avec Peachtree, ACCPAC et DacEasy. \r\n"
-"Chèque en bas est compatible with Peachtree, ACCPAC et DacEasy only"
-
-#. module: account_check_writing
-#: help:account.journal,allow_check_writing:0
-msgid "Check this if the journal is to be used for writing checks."
-msgstr "A vérifier si le journal doi être utilisé pour émettre des chèques."
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_res_company
-msgid "Companies"
-msgstr "Sociétés"
-
-#. module: account_check_writing
-#: field:account.check.write,create_uid:0
-msgid "Created by"
-msgstr "Créé par"
-
-#. module: account_check_writing
-#: field:account.check.write,create_date:0
-msgid "Created on"
-msgstr "Créé le"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Description"
-msgstr "Description"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Discount"
-msgstr "Remise"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Due Date"
-msgstr "Date"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "Error!"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,id:0
-#: field:report.account_check_writing.report_check,id:0
-msgid "ID"
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_journal
-msgid "Journal"
-msgstr "Journal"
-
-#. module: account_check_writing
-#: field:account.check.write,write_uid:0
-msgid "Last Updated by"
-msgstr "Dernière mise à jour par"
-
-#. module: account_check_writing
-#: field:account.check.write,write_date:0
-msgid "Last Updated on"
-msgstr "Dernière mise à jour le"
-
-#. module: account_check_writing
-#: field:account.check.write,check_number:0
-msgid "Next Check Number"
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "No check selected "
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "One of the printed check already got a number."
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Open Balance"
-msgstr "Solde initial"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Original Amount"
-msgstr "Montant original"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Payment"
-msgstr "Paiement"
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_check_write
-msgid "Prin Check in Batch"
-msgstr ""
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: view:account.voucher:account_check_writing.view_vendor_payment_check_form
-msgid "Print Check"
-msgstr "Imprimer un chèque"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_account_check_write
-msgid "Print Check in Batch"
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "Printing error"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.check.write,check_number:0
-msgid "The number of the next check number to be printed."
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.journal,use_preprint_check:0
-msgid "Use Preprinted Check"
-msgstr "Utiliser des chèques pré-imprimés"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_write_check
-#: model:ir.ui.menu,name:account_check_writing.menu_action_write_check
-msgid "Write Checks"
-msgstr "Émettre des chèques"
diff --git a/addons/account_check_writing/i18n/gu.po b/addons/account_check_writing/i18n/gu.po
deleted file mode 100644
index 26e6374..0000000
--- a/addons/account_check_writing/i18n/gu.po
+++ /dev/null
@@ -1,231 +0,0 @@
-# Gujarati translation for openobject-addons
-# Copyright (c) 2014 Rosetta Contributors and Canonical Ltd 2014
-# This file is distributed under the same license as the openobject-addons package.
-# FIRST AUTHOR <EMAIL@ADDRESS>, 2014.
-#
-msgid ""
-msgstr ""
-"Project-Id-Version: openobject-addons\n"
-"Report-Msgid-Bugs-To: FULL NAME <EMAIL@ADDRESS>\n"
-"POT-Creation-Date: 2014-08-14 13:08+0000\n"
-"PO-Revision-Date: 2014-08-14 16:10+0000\n"
-"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
-"Language-Team: Gujarati <gu@li.org>\n"
-"MIME-Version: 1.0\n"
-"Content-Type: text/plain; charset=UTF-8\n"
-"Content-Transfer-Encoding: 8bit\n"
-"X-Launchpad-Export-Date: 2014-08-15 06:50+0000\n"
-"X-Generator: Launchpad (build 17156)\n"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,help:account_check_writing.action_write_check
-msgid ""
-"<p class=\"oe_view_nocontent_create\">\n"
-"                Click to create a new check. \n"
-"              </p><p>\n"
-"                The check payment form allows you to track the payment you "
-"do\n"
-"                to your suppliers using checks. When you select a supplier, "
-"the\n"
-"                payment method and an amount for the payment, Odoo will\n"
-"                propose to reconcile your payment with the open supplier\n"
-"                invoices or bills.\n"
-"              </p>\n"
-"            "
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_voucher
-msgid "Accounting Voucher"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.voucher,allow_check:0
-msgid "Allow Check Writing"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.journal,allow_check_writing:0
-msgid "Allow Check writing"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.voucher,amount_in_word:0
-msgid "Amount in Word"
-msgstr ""
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-msgid "Cancel"
-msgstr ""
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: model:ir.actions.report.xml,name:account_check_writing.action_report_check
-msgid "Check"
-msgstr ""
-
-#. module: account_check_writing
-#: field:res.company,check_layout:0
-msgid "Check Layout"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.journal,use_preprint_check:0
-msgid "Check if you use a preformated sheet for check"
-msgstr ""
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check in middle"
-msgstr ""
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on Top"
-msgstr ""
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on bottom"
-msgstr ""
-
-#. module: account_check_writing
-#: help:res.company,check_layout:0
-msgid ""
-"Check on top is compatible with Quicken, QuickBooks and Microsoft Money. "
-"Check in middle is compatible with Peachtree, ACCPAC and DacEasy. Check on "
-"bottom is compatible with Peachtree, ACCPAC and DacEasy only"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.journal,allow_check_writing:0
-msgid "Check this if the journal is to be used for writing checks."
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_res_company
-msgid "Companies"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,create_uid:0
-msgid "Created by"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,create_date:0
-msgid "Created on"
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Description"
-msgstr "વર્ણન"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Discount"
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Due Date"
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "Error!"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,id:0
-#: field:report.account_check_writing.report_check,id:0
-msgid "ID"
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_journal
-msgid "Journal"
-msgstr "રોજનામું"
-
-#. module: account_check_writing
-#: field:account.check.write,write_uid:0
-msgid "Last Updated by"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,write_date:0
-msgid "Last Updated on"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,check_number:0
-msgid "Next Check Number"
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "No check selected "
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "One of the printed check already got a number."
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Open Balance"
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Original Amount"
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Payment"
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_check_write
-msgid "Prin Check in Batch"
-msgstr ""
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: view:account.voucher:account_check_writing.view_vendor_payment_check_form
-msgid "Print Check"
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_account_check_write
-msgid "Print Check in Batch"
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "Printing error"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.check.write,check_number:0
-msgid "The number of the next check number to be printed."
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.journal,use_preprint_check:0
-msgid "Use Preprinted Check"
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_write_check
-#: model:ir.ui.menu,name:account_check_writing.menu_action_write_check
-msgid "Write Checks"
-msgstr ""
diff --git a/addons/account_check_writing/i18n/hr.po b/addons/account_check_writing/i18n/hr.po
deleted file mode 100644
index 7dc4e22..0000000
--- a/addons/account_check_writing/i18n/hr.po
+++ /dev/null
@@ -1,231 +0,0 @@
-# Croatian translation for openobject-addons
-# Copyright (c) 2014 Rosetta Contributors and Canonical Ltd 2014
-# This file is distributed under the same license as the openobject-addons package.
-# FIRST AUTHOR <EMAIL@ADDRESS>, 2014.
-#
-msgid ""
-msgstr ""
-"Project-Id-Version: openobject-addons\n"
-"Report-Msgid-Bugs-To: FULL NAME <EMAIL@ADDRESS>\n"
-"POT-Creation-Date: 2014-08-14 13:08+0000\n"
-"PO-Revision-Date: 2014-08-14 16:10+0000\n"
-"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
-"Language-Team: Croatian <hr@li.org>\n"
-"MIME-Version: 1.0\n"
-"Content-Type: text/plain; charset=UTF-8\n"
-"Content-Transfer-Encoding: 8bit\n"
-"X-Launchpad-Export-Date: 2014-08-15 06:50+0000\n"
-"X-Generator: Launchpad (build 17156)\n"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,help:account_check_writing.action_write_check
-msgid ""
-"<p class=\"oe_view_nocontent_create\">\n"
-"                Click to create a new check. \n"
-"              </p><p>\n"
-"                The check payment form allows you to track the payment you "
-"do\n"
-"                to your suppliers using checks. When you select a supplier, "
-"the\n"
-"                payment method and an amount for the payment, Odoo will\n"
-"                propose to reconcile your payment with the open supplier\n"
-"                invoices or bills.\n"
-"              </p>\n"
-"            "
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_voucher
-msgid "Accounting Voucher"
-msgstr "Knjigovodstveni vaučer"
-
-#. module: account_check_writing
-#: field:account.voucher,allow_check:0
-msgid "Allow Check Writing"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.journal,allow_check_writing:0
-msgid "Allow Check writing"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.voucher,amount_in_word:0
-msgid "Amount in Word"
-msgstr "Slovima"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-msgid "Cancel"
-msgstr ""
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: model:ir.actions.report.xml,name:account_check_writing.action_report_check
-msgid "Check"
-msgstr ""
-
-#. module: account_check_writing
-#: field:res.company,check_layout:0
-msgid "Check Layout"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.journal,use_preprint_check:0
-msgid "Check if you use a preformated sheet for check"
-msgstr ""
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check in middle"
-msgstr ""
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on Top"
-msgstr ""
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on bottom"
-msgstr ""
-
-#. module: account_check_writing
-#: help:res.company,check_layout:0
-msgid ""
-"Check on top is compatible with Quicken, QuickBooks and Microsoft Money. "
-"Check in middle is compatible with Peachtree, ACCPAC and DacEasy. Check on "
-"bottom is compatible with Peachtree, ACCPAC and DacEasy only"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.journal,allow_check_writing:0
-msgid "Check this if the journal is to be used for writing checks."
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_res_company
-msgid "Companies"
-msgstr "Organizacije"
-
-#. module: account_check_writing
-#: field:account.check.write,create_uid:0
-msgid "Created by"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,create_date:0
-msgid "Created on"
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Description"
-msgstr "Opis"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Discount"
-msgstr "Popust"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Due Date"
-msgstr "Datum dospijeća"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "Error!"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,id:0
-#: field:report.account_check_writing.report_check,id:0
-msgid "ID"
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_journal
-msgid "Journal"
-msgstr "Knjiga"
-
-#. module: account_check_writing
-#: field:account.check.write,write_uid:0
-msgid "Last Updated by"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,write_date:0
-msgid "Last Updated on"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,check_number:0
-msgid "Next Check Number"
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "No check selected "
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "One of the printed check already got a number."
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Open Balance"
-msgstr "Otvoreni saldo"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Original Amount"
-msgstr "Originalni iznos"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Payment"
-msgstr "Plaćanje"
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_check_write
-msgid "Prin Check in Batch"
-msgstr ""
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: view:account.voucher:account_check_writing.view_vendor_payment_check_form
-msgid "Print Check"
-msgstr "Ispiši ček"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_account_check_write
-msgid "Print Check in Batch"
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "Printing error"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.check.write,check_number:0
-msgid "The number of the next check number to be printed."
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.journal,use_preprint_check:0
-msgid "Use Preprinted Check"
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_write_check
-#: model:ir.ui.menu,name:account_check_writing.menu_action_write_check
-msgid "Write Checks"
-msgstr ""
diff --git a/addons/account_check_writing/i18n/hu.po b/addons/account_check_writing/i18n/hu.po
deleted file mode 100644
index d6bf198..0000000
--- a/addons/account_check_writing/i18n/hu.po
+++ /dev/null
@@ -1,251 +0,0 @@
-# Hungarian translation for openobject-addons
-# Copyright (c) 2014 Rosetta Contributors and Canonical Ltd 2014
-# This file is distributed under the same license as the openobject-addons package.
-# FIRST AUTHOR <EMAIL@ADDRESS>, 2014.
-#
-msgid ""
-msgstr ""
-"Project-Id-Version: openobject-addons\n"
-"Report-Msgid-Bugs-To: FULL NAME <EMAIL@ADDRESS>\n"
-"POT-Creation-Date: 2014-08-14 13:08+0000\n"
-"PO-Revision-Date: 2014-10-04 15:04+0000\n"
-"Last-Translator: krnkris <Unknown>\n"
-"Language-Team: Hungarian <hu@li.org>\n"
-"MIME-Version: 1.0\n"
-"Content-Type: text/plain; charset=UTF-8\n"
-"Content-Transfer-Encoding: 8bit\n"
-"X-Launchpad-Export-Date: 2014-10-05 07:26+0000\n"
-"X-Generator: Launchpad (build 17196)\n"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,help:account_check_writing.action_write_check
-msgid ""
-"<p class=\"oe_view_nocontent_create\">\n"
-"                Click to create a new check. \n"
-"              </p><p>\n"
-"                The check payment form allows you to track the payment you "
-"do\n"
-"                to your suppliers using checks. When you select a supplier, "
-"the\n"
-"                payment method and an amount for the payment, Odoo will\n"
-"                propose to reconcile your payment with the open supplier\n"
-"                invoices or bills.\n"
-"              </p>\n"
-"            "
-msgstr ""
-"<p class=\"oe_view_nocontent_create\">\n"
-"                Kattintson új csekk létrehozásához. \n"
-"              </p><p>\n"
-"                A csekk fizetési formanyomtatvány lehetővé teszi a "
-"beszállítóknak\n"
-"                csekken történő kifizetéseinek nyomon követését. Ha "
-"kiválasztja a beszállítóját, a\n"
-"                fizetés módját és a fizetendő összeget, az Odoo rendszer "
-"felajánlja\n"
-"                a fizetései kiegyenlítését a többi nyitott beszállítói "
-"számlák vagy követelésekkel\n"
-"                együtt.\n"
-"              </p>\n"
-"            "
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_voucher
-msgid "Accounting Voucher"
-msgstr "Könyvelési bizonylat"
-
-#. module: account_check_writing
-#: field:account.voucher,allow_check:0
-msgid "Allow Check Writing"
-msgstr "Csekk írás engedélyezése"
-
-#. module: account_check_writing
-#: field:account.journal,allow_check_writing:0
-msgid "Allow Check writing"
-msgstr "Csekk írás engedélyezése."
-
-#. module: account_check_writing
-#: field:account.voucher,amount_in_word:0
-msgid "Amount in Word"
-msgstr "Összeg szavakkal"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-msgid "Cancel"
-msgstr "Mégse"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: model:ir.actions.report.xml,name:account_check_writing.action_report_check
-msgid "Check"
-msgstr "Csekk"
-
-#. module: account_check_writing
-#: field:res.company,check_layout:0
-msgid "Check Layout"
-msgstr "Csekk elrendezése"
-
-#. module: account_check_writing
-#: help:account.journal,use_preprint_check:0
-msgid "Check if you use a preformated sheet for check"
-msgstr ""
-"Ellenőrizze, hogy ha az ellenőrzéshez egy előre formázott egyenleg "
-"kimutatást használ"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check in middle"
-msgstr "Középen lévő csekk"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on Top"
-msgstr "Fennt lévő csekk"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on bottom"
-msgstr "Alul lévő csekkek"
-
-#. module: account_check_writing
-#: help:res.company,check_layout:0
-msgid ""
-"Check on top is compatible with Quicken, QuickBooks and Microsoft Money. "
-"Check in middle is compatible with Peachtree, ACCPAC and DacEasy. Check on "
-"bottom is compatible with Peachtree, ACCPAC and DacEasy only"
-msgstr ""
-"Fennt lévő csekk kompatibilis a Quicken, QuickBooks és Microsoft Money "
-"csekkekekl. A középen lévő csekkek kompatibilisek a Peachtree, ACCPAC és "
-"DacEasy csekkekel. Az alul lévő csekkek kompatibilisek a Peachtree, ACCPAC "
-"és DacEasy only csekkekel."
-
-#. module: account_check_writing
-#: help:account.journal,allow_check_writing:0
-msgid "Check this if the journal is to be used for writing checks."
-msgstr "Jelölje be ezt, ha naplót csekkírásra használja."
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_res_company
-msgid "Companies"
-msgstr "Vállalatok"
-
-#. module: account_check_writing
-#: field:account.check.write,create_uid:0
-msgid "Created by"
-msgstr "Készítette"
-
-#. module: account_check_writing
-#: field:account.check.write,create_date:0
-msgid "Created on"
-msgstr "Létrehozás dátuma"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Description"
-msgstr "Leírás"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Discount"
-msgstr "Kedvezmény"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Due Date"
-msgstr "Fizetési határidő"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "Error!"
-msgstr "Hiba!"
-
-#. module: account_check_writing
-#: field:account.check.write,id:0
-#: field:report.account_check_writing.report_check,id:0
-msgid "ID"
-msgstr "Azonosító ID"
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_journal
-msgid "Journal"
-msgstr "Napló"
-
-#. module: account_check_writing
-#: field:account.check.write,write_uid:0
-msgid "Last Updated by"
-msgstr "Utoljára frissítve, által"
-
-#. module: account_check_writing
-#: field:account.check.write,write_date:0
-msgid "Last Updated on"
-msgstr "Utoljára frissítve ekkor"
-
-#. module: account_check_writing
-#: field:account.check.write,check_number:0
-msgid "Next Check Number"
-msgstr "Következő csekk száma"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "No check selected "
-msgstr "Nem lett kiválasztva csekk "
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "One of the printed check already got a number."
-msgstr "Egyik, már kinyomtatott csekk már el van látva számmal."
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Open Balance"
-msgstr "Nyitó egyenleg"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Original Amount"
-msgstr "Eredeti összeg"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Payment"
-msgstr "Kifizetés"
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_check_write
-msgid "Prin Check in Batch"
-msgstr "Csekk kötegelt nyomtatása"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: view:account.voucher:account_check_writing.view_vendor_payment_check_form
-msgid "Print Check"
-msgstr "Csekk nyomtatása"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_account_check_write
-msgid "Print Check in Batch"
-msgstr "Csekkek kötegelt nyomtatása"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "Printing error"
-msgstr "Nyomtatási hiba"
-
-#. module: account_check_writing
-#: help:account.check.write,check_number:0
-msgid "The number of the next check number to be printed."
-msgstr "A következő csekkszám nyomtatása"
-
-#. module: account_check_writing
-#: field:account.journal,use_preprint_check:0
-msgid "Use Preprinted Check"
-msgstr "Előre nyomtatott csekk használata"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_write_check
-#: model:ir.ui.menu,name:account_check_writing.menu_action_write_check
-msgid "Write Checks"
-msgstr "Csekkek írása"
diff --git a/addons/account_check_writing/i18n/it.po b/addons/account_check_writing/i18n/it.po
deleted file mode 100644
index 2e5ffe0..0000000
--- a/addons/account_check_writing/i18n/it.po
+++ /dev/null
@@ -1,231 +0,0 @@
-# Italian translation for openobject-addons
-# Copyright (c) 2014 Rosetta Contributors and Canonical Ltd 2014
-# This file is distributed under the same license as the openobject-addons package.
-# FIRST AUTHOR <EMAIL@ADDRESS>, 2014.
-#
-msgid ""
-msgstr ""
-"Project-Id-Version: openobject-addons\n"
-"Report-Msgid-Bugs-To: FULL NAME <EMAIL@ADDRESS>\n"
-"POT-Creation-Date: 2014-08-14 13:08+0000\n"
-"PO-Revision-Date: 2014-10-01 20:26+0000\n"
-"Last-Translator: Nicola Riolini - Micronaet <nicola.riolini@gmail.com>\n"
-"Language-Team: Italian <it@li.org>\n"
-"MIME-Version: 1.0\n"
-"Content-Type: text/plain; charset=UTF-8\n"
-"Content-Transfer-Encoding: 8bit\n"
-"X-Launchpad-Export-Date: 2014-10-02 06:42+0000\n"
-"X-Generator: Launchpad (build 17196)\n"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,help:account_check_writing.action_write_check
-msgid ""
-"<p class=\"oe_view_nocontent_create\">\n"
-"                Click to create a new check. \n"
-"              </p><p>\n"
-"                The check payment form allows you to track the payment you "
-"do\n"
-"                to your suppliers using checks. When you select a supplier, "
-"the\n"
-"                payment method and an amount for the payment, Odoo will\n"
-"                propose to reconcile your payment with the open supplier\n"
-"                invoices or bills.\n"
-"              </p>\n"
-"            "
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_voucher
-msgid "Accounting Voucher"
-msgstr "Voucher contabile"
-
-#. module: account_check_writing
-#: field:account.voucher,allow_check:0
-msgid "Allow Check Writing"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.journal,allow_check_writing:0
-msgid "Allow Check writing"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.voucher,amount_in_word:0
-msgid "Amount in Word"
-msgstr "Importo in cifre"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-msgid "Cancel"
-msgstr "Annulla"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: model:ir.actions.report.xml,name:account_check_writing.action_report_check
-msgid "Check"
-msgstr ""
-
-#. module: account_check_writing
-#: field:res.company,check_layout:0
-msgid "Check Layout"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.journal,use_preprint_check:0
-msgid "Check if you use a preformated sheet for check"
-msgstr ""
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check in middle"
-msgstr ""
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on Top"
-msgstr ""
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on bottom"
-msgstr ""
-
-#. module: account_check_writing
-#: help:res.company,check_layout:0
-msgid ""
-"Check on top is compatible with Quicken, QuickBooks and Microsoft Money. "
-"Check in middle is compatible with Peachtree, ACCPAC and DacEasy. Check on "
-"bottom is compatible with Peachtree, ACCPAC and DacEasy only"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.journal,allow_check_writing:0
-msgid "Check this if the journal is to be used for writing checks."
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_res_company
-msgid "Companies"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,create_uid:0
-msgid "Created by"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,create_date:0
-msgid "Created on"
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Description"
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Discount"
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Due Date"
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "Error!"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,id:0
-#: field:report.account_check_writing.report_check,id:0
-msgid "ID"
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_journal
-msgid "Journal"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,write_uid:0
-msgid "Last Updated by"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,write_date:0
-msgid "Last Updated on"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,check_number:0
-msgid "Next Check Number"
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "No check selected "
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "One of the printed check already got a number."
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Open Balance"
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Original Amount"
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Payment"
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_check_write
-msgid "Prin Check in Batch"
-msgstr ""
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: view:account.voucher:account_check_writing.view_vendor_payment_check_form
-msgid "Print Check"
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_account_check_write
-msgid "Print Check in Batch"
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "Printing error"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.check.write,check_number:0
-msgid "The number of the next check number to be printed."
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.journal,use_preprint_check:0
-msgid "Use Preprinted Check"
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_write_check
-#: model:ir.ui.menu,name:account_check_writing.menu_action_write_check
-msgid "Write Checks"
-msgstr ""
diff --git a/addons/account_check_writing/i18n/ja.po b/addons/account_check_writing/i18n/ja.po
deleted file mode 100644
index 49d0e0b..0000000
--- a/addons/account_check_writing/i18n/ja.po
+++ /dev/null
@@ -1,234 +0,0 @@
-# Japanese translation for openobject-addons
-# Copyright (c) 2014 Rosetta Contributors and Canonical Ltd 2014
-# This file is distributed under the same license as the openobject-addons package.
-# FIRST AUTHOR <EMAIL@ADDRESS>, 2014.
-#
-msgid ""
-msgstr ""
-"Project-Id-Version: openobject-addons\n"
-"Report-Msgid-Bugs-To: FULL NAME <EMAIL@ADDRESS>\n"
-"POT-Creation-Date: 2014-08-14 13:08+0000\n"
-"PO-Revision-Date: 2014-08-14 16:10+0000\n"
-"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
-"Language-Team: Japanese <ja@li.org>\n"
-"MIME-Version: 1.0\n"
-"Content-Type: text/plain; charset=UTF-8\n"
-"Content-Transfer-Encoding: 8bit\n"
-"X-Launchpad-Export-Date: 2014-08-15 06:50+0000\n"
-"X-Generator: Launchpad (build 17156)\n"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,help:account_check_writing.action_write_check
-msgid ""
-"<p class=\"oe_view_nocontent_create\">\n"
-"                Click to create a new check. \n"
-"              </p><p>\n"
-"                The check payment form allows you to track the payment you "
-"do\n"
-"                to your suppliers using checks. When you select a supplier, "
-"the\n"
-"                payment method and an amount for the payment, Odoo will\n"
-"                propose to reconcile your payment with the open supplier\n"
-"                invoices or bills.\n"
-"              </p>\n"
-"            "
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_voucher
-msgid "Accounting Voucher"
-msgstr "会計バウチャー"
-
-#. module: account_check_writing
-#: field:account.voucher,allow_check:0
-msgid "Allow Check Writing"
-msgstr "小切手振出の許可"
-
-#. module: account_check_writing
-#: field:account.journal,allow_check_writing:0
-msgid "Allow Check writing"
-msgstr "小切手振り出しの許可"
-
-#. module: account_check_writing
-#: field:account.voucher,amount_in_word:0
-msgid "Amount in Word"
-msgstr "文字による金額"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-msgid "Cancel"
-msgstr ""
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: model:ir.actions.report.xml,name:account_check_writing.action_report_check
-msgid "Check"
-msgstr ""
-
-#. module: account_check_writing
-#: field:res.company,check_layout:0
-msgid "Check Layout"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.journal,use_preprint_check:0
-msgid "Check if you use a preformated sheet for check"
-msgstr ""
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check in middle"
-msgstr "小切手位置（中央）"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on Top"
-msgstr "小切手位置（上部）"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on bottom"
-msgstr "小切手位置（下部）"
-
-#. module: account_check_writing
-#: help:res.company,check_layout:0
-msgid ""
-"Check on top is compatible with Quicken, QuickBooks and Microsoft Money. "
-"Check in middle is compatible with Peachtree, ACCPAC and DacEasy. Check on "
-"bottom is compatible with Peachtree, ACCPAC and DacEasy only"
-msgstr ""
-"小切手位置（上部）はQuicken、QuickBooks、Microsoft "
-"Moneyと互換性があります。小切手位置（中央）はPeachtree、ACCPAC、DacEasyと互換性があります。小切手位置（下部）はPeachtre"
-"e、ACCPAC、DacEasyと互換性があります。"
-
-#. module: account_check_writing
-#: help:account.journal,allow_check_writing:0
-msgid "Check this if the journal is to be used for writing checks."
-msgstr "仕訳帳が小切手振出のために使われる場合は、これをチェックして下さい。"
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_res_company
-msgid "Companies"
-msgstr "会社"
-
-#. module: account_check_writing
-#: field:account.check.write,create_uid:0
-msgid "Created by"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,create_date:0
-msgid "Created on"
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Description"
-msgstr "説明"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Discount"
-msgstr "割引"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Due Date"
-msgstr "期日"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "Error!"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,id:0
-#: field:report.account_check_writing.report_check,id:0
-msgid "ID"
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_journal
-msgid "Journal"
-msgstr "仕訳帳"
-
-#. module: account_check_writing
-#: field:account.check.write,write_uid:0
-msgid "Last Updated by"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,write_date:0
-msgid "Last Updated on"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,check_number:0
-msgid "Next Check Number"
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "No check selected "
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "One of the printed check already got a number."
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Open Balance"
-msgstr "期首残高"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Original Amount"
-msgstr "元アカウント"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Payment"
-msgstr "支払"
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_check_write
-msgid "Prin Check in Batch"
-msgstr ""
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: view:account.voucher:account_check_writing.view_vendor_payment_check_form
-msgid "Print Check"
-msgstr "小切手印刷"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_account_check_write
-msgid "Print Check in Batch"
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "Printing error"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.check.write,check_number:0
-msgid "The number of the next check number to be printed."
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.journal,use_preprint_check:0
-msgid "Use Preprinted Check"
-msgstr "事前印刷小切手の使用"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_write_check
-#: model:ir.ui.menu,name:account_check_writing.menu_action_write_check
-msgid "Write Checks"
-msgstr "小切手作成"
diff --git a/addons/account_check_writing/i18n/lt.po b/addons/account_check_writing/i18n/lt.po
deleted file mode 100644
index 8c67c6b..0000000
--- a/addons/account_check_writing/i18n/lt.po
+++ /dev/null
@@ -1,231 +0,0 @@
-# Lithuanian translation for openobject-addons
-# Copyright (c) 2014 Rosetta Contributors and Canonical Ltd 2014
-# This file is distributed under the same license as the openobject-addons package.
-# FIRST AUTHOR <EMAIL@ADDRESS>, 2014.
-#
-msgid ""
-msgstr ""
-"Project-Id-Version: openobject-addons\n"
-"Report-Msgid-Bugs-To: FULL NAME <EMAIL@ADDRESS>\n"
-"POT-Creation-Date: 2014-08-14 13:08+0000\n"
-"PO-Revision-Date: 2014-08-14 16:10+0000\n"
-"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
-"Language-Team: Lithuanian <lt@li.org>\n"
-"MIME-Version: 1.0\n"
-"Content-Type: text/plain; charset=UTF-8\n"
-"Content-Transfer-Encoding: 8bit\n"
-"X-Launchpad-Export-Date: 2014-08-15 06:50+0000\n"
-"X-Generator: Launchpad (build 17156)\n"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,help:account_check_writing.action_write_check
-msgid ""
-"<p class=\"oe_view_nocontent_create\">\n"
-"                Click to create a new check. \n"
-"              </p><p>\n"
-"                The check payment form allows you to track the payment you "
-"do\n"
-"                to your suppliers using checks. When you select a supplier, "
-"the\n"
-"                payment method and an amount for the payment, Odoo will\n"
-"                propose to reconcile your payment with the open supplier\n"
-"                invoices or bills.\n"
-"              </p>\n"
-"            "
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_voucher
-msgid "Accounting Voucher"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.voucher,allow_check:0
-msgid "Allow Check Writing"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.journal,allow_check_writing:0
-msgid "Allow Check writing"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.voucher,amount_in_word:0
-msgid "Amount in Word"
-msgstr ""
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-msgid "Cancel"
-msgstr ""
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: model:ir.actions.report.xml,name:account_check_writing.action_report_check
-msgid "Check"
-msgstr ""
-
-#. module: account_check_writing
-#: field:res.company,check_layout:0
-msgid "Check Layout"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.journal,use_preprint_check:0
-msgid "Check if you use a preformated sheet for check"
-msgstr ""
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check in middle"
-msgstr ""
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on Top"
-msgstr ""
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on bottom"
-msgstr ""
-
-#. module: account_check_writing
-#: help:res.company,check_layout:0
-msgid ""
-"Check on top is compatible with Quicken, QuickBooks and Microsoft Money. "
-"Check in middle is compatible with Peachtree, ACCPAC and DacEasy. Check on "
-"bottom is compatible with Peachtree, ACCPAC and DacEasy only"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.journal,allow_check_writing:0
-msgid "Check this if the journal is to be used for writing checks."
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_res_company
-msgid "Companies"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,create_uid:0
-msgid "Created by"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,create_date:0
-msgid "Created on"
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Description"
-msgstr "Aprašas"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Discount"
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Due Date"
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "Error!"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,id:0
-#: field:report.account_check_writing.report_check,id:0
-msgid "ID"
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_journal
-msgid "Journal"
-msgstr "Žurnalas"
-
-#. module: account_check_writing
-#: field:account.check.write,write_uid:0
-msgid "Last Updated by"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,write_date:0
-msgid "Last Updated on"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,check_number:0
-msgid "Next Check Number"
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "No check selected "
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "One of the printed check already got a number."
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Open Balance"
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Original Amount"
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Payment"
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_check_write
-msgid "Prin Check in Batch"
-msgstr ""
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: view:account.voucher:account_check_writing.view_vendor_payment_check_form
-msgid "Print Check"
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_account_check_write
-msgid "Print Check in Batch"
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "Printing error"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.check.write,check_number:0
-msgid "The number of the next check number to be printed."
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.journal,use_preprint_check:0
-msgid "Use Preprinted Check"
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_write_check
-#: model:ir.ui.menu,name:account_check_writing.menu_action_write_check
-msgid "Write Checks"
-msgstr ""
diff --git a/addons/account_check_writing/i18n/mk.po b/addons/account_check_writing/i18n/mk.po
deleted file mode 100644
index b6cbcfd..0000000
--- a/addons/account_check_writing/i18n/mk.po
+++ /dev/null
@@ -1,246 +0,0 @@
-# Macedonian translation for openobject-addons
-# Copyright (c) 2014 Rosetta Contributors and Canonical Ltd 2014
-# This file is distributed under the same license as the openobject-addons package.
-# FIRST AUTHOR <EMAIL@ADDRESS>, 2014.
-#
-msgid ""
-msgstr ""
-"Project-Id-Version: openobject-addons\n"
-"Report-Msgid-Bugs-To: FULL NAME <EMAIL@ADDRESS>\n"
-"POT-Creation-Date: 2014-08-14 13:08+0000\n"
-"PO-Revision-Date: 2014-10-28 07:51+0000\n"
-"Last-Translator: Tome Barbov <tome.barbov@eskon.com.mk>\n"
-"Language-Team: Macedonian <mk@li.org>\n"
-"MIME-Version: 1.0\n"
-"Content-Type: text/plain; charset=UTF-8\n"
-"Content-Transfer-Encoding: 8bit\n"
-"X-Launchpad-Export-Date: 2014-10-29 07:46+0000\n"
-"X-Generator: Launchpad (build 17203)\n"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,help:account_check_writing.action_write_check
-msgid ""
-"<p class=\"oe_view_nocontent_create\">\n"
-"                Click to create a new check. \n"
-"              </p><p>\n"
-"                The check payment form allows you to track the payment you "
-"do\n"
-"                to your suppliers using checks. When you select a supplier, "
-"the\n"
-"                payment method and an amount for the payment, Odoo will\n"
-"                propose to reconcile your payment with the open supplier\n"
-"                invoices or bills.\n"
-"              </p>\n"
-"            "
-msgstr ""
-"<p class=\"oe_view_nocontent_create\">\n"
-"                Кликнете да креирате нов чек. \n"
-"              </p><p>\n"
-"                Формуларот за плаќање со чек ви дозволува да ја следите "
-"уплатата што\n"
-"                ја вршите на вашите добавувачи преку чекови. Кога ќе "
-"изберете добавувач,\n"
-"                начинот на плаќање и сумата за плаќање, Odoo ќе\n"
-"                предложи да ја подмирите наплатата на добавувачот\n"
-"                преку отворени фактури или сметки.\n"
-"              </p>\n"
-"            "
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_voucher
-msgid "Accounting Voucher"
-msgstr "Сметководствен ваучер"
-
-#. module: account_check_writing
-#: field:account.voucher,allow_check:0
-msgid "Allow Check Writing"
-msgstr "Дозволи пишување на чек"
-
-#. module: account_check_writing
-#: field:account.journal,allow_check_writing:0
-msgid "Allow Check writing"
-msgstr "Дозволи пишување на чек"
-
-#. module: account_check_writing
-#: field:account.voucher,amount_in_word:0
-msgid "Amount in Word"
-msgstr "Износ со зборови"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-msgid "Cancel"
-msgstr "Откажи"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: model:ir.actions.report.xml,name:account_check_writing.action_report_check
-msgid "Check"
-msgstr "Чек"
-
-#. module: account_check_writing
-#: field:res.company,check_layout:0
-msgid "Check Layout"
-msgstr "Изглед на чек"
-
-#. module: account_check_writing
-#: help:account.journal,use_preprint_check:0
-msgid "Check if you use a preformated sheet for check"
-msgstr "Изберете ако користите перфорирана хартија за чек"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check in middle"
-msgstr "Чек во средина"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on Top"
-msgstr "Чек на врвот"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on bottom"
-msgstr "Чек на дното"
-
-#. module: account_check_writing
-#: help:res.company,check_layout:0
-msgid ""
-"Check on top is compatible with Quicken, QuickBooks and Microsoft Money. "
-"Check in middle is compatible with Peachtree, ACCPAC and DacEasy. Check on "
-"bottom is compatible with Peachtree, ACCPAC and DacEasy only"
-msgstr ""
-"Check on top е компатибилен со Quicken, QuickBooks и Microsoft Money. Check "
-"in middle е компатибилен со Peachtree, ACCPAC и DacEasy. Check on bottom е "
-"компатибилен единствено со Peachtree, ACCPAC и DacEasy."
-
-#. module: account_check_writing
-#: help:account.journal,allow_check_writing:0
-msgid "Check this if the journal is to be used for writing checks."
-msgstr "Означи го ова доколку дневникот се користи за пишување на чекови."
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_res_company
-msgid "Companies"
-msgstr "Компании"
-
-#. module: account_check_writing
-#: field:account.check.write,create_uid:0
-msgid "Created by"
-msgstr "Креирано од"
-
-#. module: account_check_writing
-#: field:account.check.write,create_date:0
-msgid "Created on"
-msgstr "Креирано на"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Description"
-msgstr "Опис"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Discount"
-msgstr "Попуст"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Due Date"
-msgstr "Краен датум"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "Error!"
-msgstr "Грешка!"
-
-#. module: account_check_writing
-#: field:account.check.write,id:0
-#: field:report.account_check_writing.report_check,id:0
-msgid "ID"
-msgstr "ID"
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_journal
-msgid "Journal"
-msgstr "Дневник"
-
-#. module: account_check_writing
-#: field:account.check.write,write_uid:0
-msgid "Last Updated by"
-msgstr "Последно ажурирање од"
-
-#. module: account_check_writing
-#: field:account.check.write,write_date:0
-msgid "Last Updated on"
-msgstr "Последно ажурирање на"
-
-#. module: account_check_writing
-#: field:account.check.write,check_number:0
-msgid "Next Check Number"
-msgstr "Број на нареден чек"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "No check selected "
-msgstr "Нема избрано чек "
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "One of the printed check already got a number."
-msgstr "Еден од испечатените чекови веќе има број."
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Open Balance"
-msgstr "Отвори салдо"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Original Amount"
-msgstr "Оригинална сума"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Payment"
-msgstr "Плаќање"
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_check_write
-msgid "Prin Check in Batch"
-msgstr "Испечати повеќе чекови"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: view:account.voucher:account_check_writing.view_vendor_payment_check_form
-msgid "Print Check"
-msgstr "Испечати Чек"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_account_check_write
-msgid "Print Check in Batch"
-msgstr "Испечати повеќе чекови"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "Printing error"
-msgstr "Грешка при печатење"
-
-#. module: account_check_writing
-#: help:account.check.write,check_number:0
-msgid "The number of the next check number to be printed."
-msgstr "Број на следниот чек кој ќе биде испечатен."
-
-#. module: account_check_writing
-#: field:account.journal,use_preprint_check:0
-msgid "Use Preprinted Check"
-msgstr "Употреби претходно испечатен чек"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_write_check
-#: model:ir.ui.menu,name:account_check_writing.menu_action_write_check
-msgid "Write Checks"
-msgstr "Пишувај чекови"
diff --git a/addons/account_check_writing/i18n/mn.po b/addons/account_check_writing/i18n/mn.po
deleted file mode 100644
index 0ba912f..0000000
--- a/addons/account_check_writing/i18n/mn.po
+++ /dev/null
@@ -1,234 +0,0 @@
-# Mongolian translation for openobject-addons
-# Copyright (c) 2014 Rosetta Contributors and Canonical Ltd 2014
-# This file is distributed under the same license as the openobject-addons package.
-# FIRST AUTHOR <EMAIL@ADDRESS>, 2014.
-#
-msgid ""
-msgstr ""
-"Project-Id-Version: openobject-addons\n"
-"Report-Msgid-Bugs-To: FULL NAME <EMAIL@ADDRESS>\n"
-"POT-Creation-Date: 2014-08-14 13:08+0000\n"
-"PO-Revision-Date: 2014-08-14 16:10+0000\n"
-"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
-"Language-Team: Mongolian <mn@li.org>\n"
-"MIME-Version: 1.0\n"
-"Content-Type: text/plain; charset=UTF-8\n"
-"Content-Transfer-Encoding: 8bit\n"
-"X-Launchpad-Export-Date: 2014-08-15 06:50+0000\n"
-"X-Generator: Launchpad (build 17156)\n"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,help:account_check_writing.action_write_check
-msgid ""
-"<p class=\"oe_view_nocontent_create\">\n"
-"                Click to create a new check. \n"
-"              </p><p>\n"
-"                The check payment form allows you to track the payment you "
-"do\n"
-"                to your suppliers using checks. When you select a supplier, "
-"the\n"
-"                payment method and an amount for the payment, Odoo will\n"
-"                propose to reconcile your payment with the open supplier\n"
-"                invoices or bills.\n"
-"              </p>\n"
-"            "
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_voucher
-msgid "Accounting Voucher"
-msgstr "Санхүүгийн ваучер"
-
-#. module: account_check_writing
-#: field:account.voucher,allow_check:0
-msgid "Allow Check Writing"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.journal,allow_check_writing:0
-msgid "Allow Check writing"
-msgstr "Бичсэн чекийг зөвшөөрөх"
-
-#. module: account_check_writing
-#: field:account.voucher,amount_in_word:0
-msgid "Amount in Word"
-msgstr ""
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-msgid "Cancel"
-msgstr "Цуцлах"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: model:ir.actions.report.xml,name:account_check_writing.action_report_check
-msgid "Check"
-msgstr "Чек"
-
-#. module: account_check_writing
-#: field:res.company,check_layout:0
-msgid "Check Layout"
-msgstr "Чекийн зохиомж"
-
-#. module: account_check_writing
-#: help:account.journal,use_preprint_check:0
-msgid "Check if you use a preformated sheet for check"
-msgstr ""
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check in middle"
-msgstr "Чекийн төв хэсэг"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on Top"
-msgstr "Чекийн дээд хэсэг"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on bottom"
-msgstr "Чекийн доод хэсэг"
-
-#. module: account_check_writing
-#: help:res.company,check_layout:0
-msgid ""
-"Check on top is compatible with Quicken, QuickBooks and Microsoft Money. "
-"Check in middle is compatible with Peachtree, ACCPAC and DacEasy. Check on "
-"bottom is compatible with Peachtree, ACCPAC and DacEasy only"
-msgstr ""
-"Дээд талыг сонговол Quicken, QuickBooks , Microsoft Money-тэй нийцтэй байна. "
-"Дундахыг сонговол Peachtree, ACCPAC, DacEasy-тэй нийцтэй байна. Доодохыг "
-"сонговол Peachtree, ACCPAC, DacEasy-тэй нийцтэй байна."
-
-#. module: account_check_writing
-#: help:account.journal,allow_check_writing:0
-msgid "Check this if the journal is to be used for writing checks."
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_res_company
-msgid "Companies"
-msgstr "Компаниуд"
-
-#. module: account_check_writing
-#: field:account.check.write,create_uid:0
-msgid "Created by"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,create_date:0
-msgid "Created on"
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Description"
-msgstr "Тайлбар"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Discount"
-msgstr "Хөнгөлөлт"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Due Date"
-msgstr "Товлосон огноо"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "Error!"
-msgstr "Алдаа!"
-
-#. module: account_check_writing
-#: field:account.check.write,id:0
-#: field:report.account_check_writing.report_check,id:0
-msgid "ID"
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_journal
-msgid "Journal"
-msgstr "Журнал"
-
-#. module: account_check_writing
-#: field:account.check.write,write_uid:0
-msgid "Last Updated by"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,write_date:0
-msgid "Last Updated on"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,check_number:0
-msgid "Next Check Number"
-msgstr "Дараагийн Чек дугаар"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "No check selected "
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "One of the printed check already got a number."
-msgstr "Хэвлэгдсэн чекүүдийн нэг нь дугаар аль хэдийнээ авсан байна."
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Open Balance"
-msgstr "Нээлттэй Баланс"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Original Amount"
-msgstr "Эх дүн"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Payment"
-msgstr "Төлбөр"
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_check_write
-msgid "Prin Check in Batch"
-msgstr ""
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: view:account.voucher:account_check_writing.view_vendor_payment_check_form
-msgid "Print Check"
-msgstr "Чек хэвлэх"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_account_check_write
-msgid "Print Check in Batch"
-msgstr "Чекийг бөөнөөр хэвлэх"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "Printing error"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.check.write,check_number:0
-msgid "The number of the next check number to be printed."
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.journal,use_preprint_check:0
-msgid "Use Preprinted Check"
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_write_check
-#: model:ir.ui.menu,name:account_check_writing.menu_action_write_check
-msgid "Write Checks"
-msgstr "Чек бичих"
diff --git a/addons/account_check_writing/i18n/nb.po b/addons/account_check_writing/i18n/nb.po
deleted file mode 100644
index 4dbc7ef..0000000
--- a/addons/account_check_writing/i18n/nb.po
+++ /dev/null
@@ -1,234 +0,0 @@
-# Norwegian Bokmal translation for openobject-addons
-# Copyright (c) 2014 Rosetta Contributors and Canonical Ltd 2014
-# This file is distributed under the same license as the openobject-addons package.
-# FIRST AUTHOR <EMAIL@ADDRESS>, 2014.
-#
-msgid ""
-msgstr ""
-"Project-Id-Version: openobject-addons\n"
-"Report-Msgid-Bugs-To: FULL NAME <EMAIL@ADDRESS>\n"
-"POT-Creation-Date: 2014-08-14 13:08+0000\n"
-"PO-Revision-Date: 2014-08-14 16:10+0000\n"
-"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
-"Language-Team: Norwegian Bokmal <nb@li.org>\n"
-"MIME-Version: 1.0\n"
-"Content-Type: text/plain; charset=UTF-8\n"
-"Content-Transfer-Encoding: 8bit\n"
-"X-Launchpad-Export-Date: 2014-08-15 06:50+0000\n"
-"X-Generator: Launchpad (build 17156)\n"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,help:account_check_writing.action_write_check
-msgid ""
-"<p class=\"oe_view_nocontent_create\">\n"
-"                Click to create a new check. \n"
-"              </p><p>\n"
-"                The check payment form allows you to track the payment you "
-"do\n"
-"                to your suppliers using checks. When you select a supplier, "
-"the\n"
-"                payment method and an amount for the payment, Odoo will\n"
-"                propose to reconcile your payment with the open supplier\n"
-"                invoices or bills.\n"
-"              </p>\n"
-"            "
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_voucher
-msgid "Accounting Voucher"
-msgstr "Regnskapsmessig kupong"
-
-#. module: account_check_writing
-#: field:account.voucher,allow_check:0
-msgid "Allow Check Writing"
-msgstr "Tillat å skrive skjekk"
-
-#. module: account_check_writing
-#: field:account.journal,allow_check_writing:0
-msgid "Allow Check writing"
-msgstr "Tillat skjekk skriving"
-
-#. module: account_check_writing
-#: field:account.voucher,amount_in_word:0
-msgid "Amount in Word"
-msgstr "Beløp i Ord"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-msgid "Cancel"
-msgstr ""
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: model:ir.actions.report.xml,name:account_check_writing.action_report_check
-msgid "Check"
-msgstr ""
-
-#. module: account_check_writing
-#: field:res.company,check_layout:0
-msgid "Check Layout"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.journal,use_preprint_check:0
-msgid "Check if you use a preformated sheet for check"
-msgstr ""
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check in middle"
-msgstr "Skjekk i midten"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on Top"
-msgstr "Sjekk på topp"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on bottom"
-msgstr "Skjekk på bunnen"
-
-#. module: account_check_writing
-#: help:res.company,check_layout:0
-msgid ""
-"Check on top is compatible with Quicken, QuickBooks and Microsoft Money. "
-"Check in middle is compatible with Peachtree, ACCPAC and DacEasy. Check on "
-"bottom is compatible with Peachtree, ACCPAC and DacEasy only"
-msgstr ""
-"Sjekk på toppen er kompatibel med Quicken, QuickBooks og Microsoft Penger. "
-"Sjekk i midten er kompatibel med Peachtree, ACCPAC og DacEasy. Sjekk på "
-"bunnen er kompatibel med Peachtree, ACCPAC og DacEasy bare"
-
-#. module: account_check_writing
-#: help:account.journal,allow_check_writing:0
-msgid "Check this if the journal is to be used for writing checks."
-msgstr "Sjekk dette hvis journalen skal brukes til å skrive sjekker."
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_res_company
-msgid "Companies"
-msgstr "Firmaer"
-
-#. module: account_check_writing
-#: field:account.check.write,create_uid:0
-msgid "Created by"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,create_date:0
-msgid "Created on"
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Description"
-msgstr "Beskrivelse:"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Discount"
-msgstr "Rabatt"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Due Date"
-msgstr "Utløps Dato"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "Error!"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,id:0
-#: field:report.account_check_writing.report_check,id:0
-msgid "ID"
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_journal
-msgid "Journal"
-msgstr "Journal"
-
-#. module: account_check_writing
-#: field:account.check.write,write_uid:0
-msgid "Last Updated by"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,write_date:0
-msgid "Last Updated on"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,check_number:0
-msgid "Next Check Number"
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "No check selected "
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "One of the printed check already got a number."
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Open Balance"
-msgstr "Åpen balanse"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Original Amount"
-msgstr "Opprinnelig beløp"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Payment"
-msgstr "Betaling"
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_check_write
-msgid "Prin Check in Batch"
-msgstr ""
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: view:account.voucher:account_check_writing.view_vendor_payment_check_form
-msgid "Print Check"
-msgstr "Skriv ut sjekk"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_account_check_write
-msgid "Print Check in Batch"
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "Printing error"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.check.write,check_number:0
-msgid "The number of the next check number to be printed."
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.journal,use_preprint_check:0
-msgid "Use Preprinted Check"
-msgstr "Bruk Forhåndstrykt Sjekk"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_write_check
-#: model:ir.ui.menu,name:account_check_writing.menu_action_write_check
-msgid "Write Checks"
-msgstr "Skive skjekker"
diff --git a/addons/account_check_writing/i18n/nl.po b/addons/account_check_writing/i18n/nl.po
deleted file mode 100644
index 6f712be..0000000
--- a/addons/account_check_writing/i18n/nl.po
+++ /dev/null
@@ -1,250 +0,0 @@
-# Dutch translation for openobject-addons
-# Copyright (c) 2014 Rosetta Contributors and Canonical Ltd 2014
-# This file is distributed under the same license as the openobject-addons package.
-# FIRST AUTHOR <EMAIL@ADDRESS>, 2014.
-#
-msgid ""
-msgstr ""
-"Project-Id-Version: openobject-addons\n"
-"Report-Msgid-Bugs-To: FULL NAME <EMAIL@ADDRESS>\n"
-"POT-Creation-Date: 2014-08-14 13:08+0000\n"
-"PO-Revision-Date: 2014-08-17 10:13+0000\n"
-"Last-Translator: Erwin van der Ploeg (BAS Solutions) <Unknown>\n"
-"Language-Team: Dutch <nl@li.org>\n"
-"MIME-Version: 1.0\n"
-"Content-Type: text/plain; charset=UTF-8\n"
-"Content-Transfer-Encoding: 8bit\n"
-"X-Launchpad-Export-Date: 2014-08-18 07:24+0000\n"
-"X-Generator: Launchpad (build 17156)\n"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,help:account_check_writing.action_write_check
-msgid ""
-"<p class=\"oe_view_nocontent_create\">\n"
-"                Click to create a new check. \n"
-"              </p><p>\n"
-"                The check payment form allows you to track the payment you "
-"do\n"
-"                to your suppliers using checks. When you select a supplier, "
-"the\n"
-"                payment method and an amount for the payment, Odoo will\n"
-"                propose to reconcile your payment with the open supplier\n"
-"                invoices or bills.\n"
-"              </p>\n"
-"            "
-msgstr ""
-"<p class=\"oe_view_nocontent_create\">\n"
-"                Klik om een nieuwe cheque aan te maken\n"
-"              </p><p>\n"
-"                Met cheque betalingen heeft u de mogelijkheid u betalingen "
-"met\n"
-"                cheques aan uw leverancier te volgen. Wanneer u een "
-"leverancier,\n"
-"                een betaalwijze en het bedrag selecteert voor de betaling, "
-"zal\n"
-"                Odoo voorstellen om de openstaande inkoopfacturen\n"
-"                af te letteren met de betaling.\n"
-"              </p>\n"
-"            "
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_voucher
-msgid "Accounting Voucher"
-msgstr "Betalingsintentie"
-
-#. module: account_check_writing
-#: field:account.voucher,allow_check:0
-msgid "Allow Check Writing"
-msgstr "Sta uitschrijven cheque  toe"
-
-#. module: account_check_writing
-#: field:account.journal,allow_check_writing:0
-msgid "Allow Check writing"
-msgstr "Sta cheque uitschrijven toe"
-
-#. module: account_check_writing
-#: field:account.voucher,amount_in_word:0
-msgid "Amount in Word"
-msgstr "Bedrag in woord"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-msgid "Cancel"
-msgstr "Annuleren"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: model:ir.actions.report.xml,name:account_check_writing.action_report_check
-msgid "Check"
-msgstr "Cheque"
-
-#. module: account_check_writing
-#: field:res.company,check_layout:0
-msgid "Check Layout"
-msgstr "Cheque opmaak"
-
-#. module: account_check_writing
-#: help:account.journal,use_preprint_check:0
-msgid "Check if you use a preformated sheet for check"
-msgstr ""
-"Aanvinken als u een voorgeconfigureerde template voor de check gebruikt"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check in middle"
-msgstr "Cheque midden"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on Top"
-msgstr "Cheque boven"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on bottom"
-msgstr "Cheque beneden"
-
-#. module: account_check_writing
-#: help:res.company,check_layout:0
-msgid ""
-"Check on top is compatible with Quicken, QuickBooks and Microsoft Money. "
-"Check in middle is compatible with Peachtree, ACCPAC and DacEasy. Check on "
-"bottom is compatible with Peachtree, ACCPAC and DacEasy only"
-msgstr ""
-"Cheque boven is compatible met Quicken, QuickBooks en Microsoft Money. "
-"Cheque in het miden is compatible met Peachtree, ACCPAC en DacEasy. Cheque "
-"beneden is alleen compatible met Peachtree, ACCPAC en DacEasy"
-
-#. module: account_check_writing
-#: help:account.journal,allow_check_writing:0
-msgid "Check this if the journal is to be used for writing checks."
-msgstr ""
-"Vink dit aan indien het dagboek moet worden gebruikt voor het schrijven van "
-"cheques."
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_res_company
-msgid "Companies"
-msgstr "Bedrijven"
-
-#. module: account_check_writing
-#: field:account.check.write,create_uid:0
-msgid "Created by"
-msgstr "Aangemaakt door"
-
-#. module: account_check_writing
-#: field:account.check.write,create_date:0
-msgid "Created on"
-msgstr "Aangemaakt op"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Description"
-msgstr "Omschrijving"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Discount"
-msgstr "Korting"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Due Date"
-msgstr "Einddatum"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "Error!"
-msgstr "Fout!"
-
-#. module: account_check_writing
-#: field:account.check.write,id:0
-#: field:report.account_check_writing.report_check,id:0
-msgid "ID"
-msgstr "ID"
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_journal
-msgid "Journal"
-msgstr "Dagboek"
-
-#. module: account_check_writing
-#: field:account.check.write,write_uid:0
-msgid "Last Updated by"
-msgstr "Laatst bijgewerkt door"
-
-#. module: account_check_writing
-#: field:account.check.write,write_date:0
-msgid "Last Updated on"
-msgstr "Laatst bijgewerkt op"
-
-#. module: account_check_writing
-#: field:account.check.write,check_number:0
-msgid "Next Check Number"
-msgstr "Volgende cheque numer"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "No check selected "
-msgstr "Geen cheque geselecteerd "
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "One of the printed check already got a number."
-msgstr "Een van de afgedrukte cheques heeft al een nummer"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Open Balance"
-msgstr "Openstaand bedrag"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Original Amount"
-msgstr "Oorspronkelijk bedrag"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Payment"
-msgstr "Betaling"
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_check_write
-msgid "Prin Check in Batch"
-msgstr "Cheques in batch afdukken"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: view:account.voucher:account_check_writing.view_vendor_payment_check_form
-msgid "Print Check"
-msgstr "Cheque afdrukken"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_account_check_write
-msgid "Print Check in Batch"
-msgstr "Cheques is batch afdrukken"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "Printing error"
-msgstr "Afdrukfout"
-
-#. module: account_check_writing
-#: help:account.check.write,check_number:0
-msgid "The number of the next check number to be printed."
-msgstr "Het nummer van de volgende cheque die wordt afgedrukt"
-
-#. module: account_check_writing
-#: field:account.journal,use_preprint_check:0
-msgid "Use Preprinted Check"
-msgstr "Gebruik voorafgedrukte cheque"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_write_check
-#: model:ir.ui.menu,name:account_check_writing.menu_action_write_check
-msgid "Write Checks"
-msgstr "Schrijf cheque uit"
diff --git a/addons/account_check_writing/i18n/nl_BE.po b/addons/account_check_writing/i18n/nl_BE.po
deleted file mode 100644
index 35dd9bb..0000000
--- a/addons/account_check_writing/i18n/nl_BE.po
+++ /dev/null
@@ -1,231 +0,0 @@
-# Dutch (Belgium) translation for openobject-addons
-# Copyright (c) 2014 Rosetta Contributors and Canonical Ltd 2014
-# This file is distributed under the same license as the openobject-addons package.
-# FIRST AUTHOR <EMAIL@ADDRESS>, 2014.
-#
-msgid ""
-msgstr ""
-"Project-Id-Version: openobject-addons\n"
-"Report-Msgid-Bugs-To: FULL NAME <EMAIL@ADDRESS>\n"
-"POT-Creation-Date: 2014-08-14 13:08+0000\n"
-"PO-Revision-Date: 2014-10-22 09:28+0000\n"
-"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
-"Language-Team: Dutch (Belgium) <nl_BE@li.org>\n"
-"MIME-Version: 1.0\n"
-"Content-Type: text/plain; charset=UTF-8\n"
-"Content-Transfer-Encoding: 8bit\n"
-"X-Launchpad-Export-Date: 2014-10-23 07:48+0000\n"
-"X-Generator: Launchpad (build 17203)\n"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,help:account_check_writing.action_write_check
-msgid ""
-"<p class=\"oe_view_nocontent_create\">\n"
-"                Click to create a new check. \n"
-"              </p><p>\n"
-"                The check payment form allows you to track the payment you "
-"do\n"
-"                to your suppliers using checks. When you select a supplier, "
-"the\n"
-"                payment method and an amount for the payment, Odoo will\n"
-"                propose to reconcile your payment with the open supplier\n"
-"                invoices or bills.\n"
-"              </p>\n"
-"            "
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_voucher
-msgid "Accounting Voucher"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.voucher,allow_check:0
-msgid "Allow Check Writing"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.journal,allow_check_writing:0
-msgid "Allow Check writing"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.voucher,amount_in_word:0
-msgid "Amount in Word"
-msgstr ""
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-msgid "Cancel"
-msgstr ""
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: model:ir.actions.report.xml,name:account_check_writing.action_report_check
-msgid "Check"
-msgstr ""
-
-#. module: account_check_writing
-#: field:res.company,check_layout:0
-msgid "Check Layout"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.journal,use_preprint_check:0
-msgid "Check if you use a preformated sheet for check"
-msgstr ""
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check in middle"
-msgstr ""
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on Top"
-msgstr ""
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on bottom"
-msgstr ""
-
-#. module: account_check_writing
-#: help:res.company,check_layout:0
-msgid ""
-"Check on top is compatible with Quicken, QuickBooks and Microsoft Money. "
-"Check in middle is compatible with Peachtree, ACCPAC and DacEasy. Check on "
-"bottom is compatible with Peachtree, ACCPAC and DacEasy only"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.journal,allow_check_writing:0
-msgid "Check this if the journal is to be used for writing checks."
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_res_company
-msgid "Companies"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,create_uid:0
-msgid "Created by"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,create_date:0
-msgid "Created on"
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Description"
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Discount"
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Due Date"
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "Error!"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,id:0
-#: field:report.account_check_writing.report_check,id:0
-msgid "ID"
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_journal
-msgid "Journal"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,write_uid:0
-msgid "Last Updated by"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,write_date:0
-msgid "Last Updated on"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,check_number:0
-msgid "Next Check Number"
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "No check selected "
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "One of the printed check already got a number."
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Open Balance"
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Original Amount"
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Payment"
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_check_write
-msgid "Prin Check in Batch"
-msgstr ""
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: view:account.voucher:account_check_writing.view_vendor_payment_check_form
-msgid "Print Check"
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_account_check_write
-msgid "Print Check in Batch"
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "Printing error"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.check.write,check_number:0
-msgid "The number of the next check number to be printed."
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.journal,use_preprint_check:0
-msgid "Use Preprinted Check"
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_write_check
-#: model:ir.ui.menu,name:account_check_writing.menu_action_write_check
-msgid "Write Checks"
-msgstr ""
diff --git a/addons/account_check_writing/i18n/pl.po b/addons/account_check_writing/i18n/pl.po
deleted file mode 100644
index 156d431..0000000
--- a/addons/account_check_writing/i18n/pl.po
+++ /dev/null
@@ -1,232 +0,0 @@
-# Polish translation for openobject-addons
-# Copyright (c) 2014 Rosetta Contributors and Canonical Ltd 2014
-# This file is distributed under the same license as the openobject-addons package.
-# FIRST AUTHOR <EMAIL@ADDRESS>, 2014.
-#
-msgid ""
-msgstr ""
-"Project-Id-Version: openobject-addons\n"
-"Report-Msgid-Bugs-To: FULL NAME <EMAIL@ADDRESS>\n"
-"POT-Creation-Date: 2014-08-14 13:08+0000\n"
-"PO-Revision-Date: 2014-08-29 10:48+0000\n"
-"Last-Translator: Judyta Kazmierczak (OpenGLOBE.pl) "
-"<judyta.kazmierczak@openglobe.pl>\n"
-"Language-Team: Polish <pl@li.org>\n"
-"MIME-Version: 1.0\n"
-"Content-Type: text/plain; charset=UTF-8\n"
-"Content-Transfer-Encoding: 8bit\n"
-"X-Launchpad-Export-Date: 2014-08-30 08:36+0000\n"
-"X-Generator: Launchpad (build 17176)\n"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,help:account_check_writing.action_write_check
-msgid ""
-"<p class=\"oe_view_nocontent_create\">\n"
-"                Click to create a new check. \n"
-"              </p><p>\n"
-"                The check payment form allows you to track the payment you "
-"do\n"
-"                to your suppliers using checks. When you select a supplier, "
-"the\n"
-"                payment method and an amount for the payment, Odoo will\n"
-"                propose to reconcile your payment with the open supplier\n"
-"                invoices or bills.\n"
-"              </p>\n"
-"            "
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_voucher
-msgid "Accounting Voucher"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.voucher,allow_check:0
-msgid "Allow Check Writing"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.journal,allow_check_writing:0
-msgid "Allow Check writing"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.voucher,amount_in_word:0
-msgid "Amount in Word"
-msgstr "Wartość słownie"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-msgid "Cancel"
-msgstr "Anuluj"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: model:ir.actions.report.xml,name:account_check_writing.action_report_check
-msgid "Check"
-msgstr "Czek"
-
-#. module: account_check_writing
-#: field:res.company,check_layout:0
-msgid "Check Layout"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.journal,use_preprint_check:0
-msgid "Check if you use a preformated sheet for check"
-msgstr ""
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check in middle"
-msgstr ""
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on Top"
-msgstr ""
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on bottom"
-msgstr ""
-
-#. module: account_check_writing
-#: help:res.company,check_layout:0
-msgid ""
-"Check on top is compatible with Quicken, QuickBooks and Microsoft Money. "
-"Check in middle is compatible with Peachtree, ACCPAC and DacEasy. Check on "
-"bottom is compatible with Peachtree, ACCPAC and DacEasy only"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.journal,allow_check_writing:0
-msgid "Check this if the journal is to be used for writing checks."
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_res_company
-msgid "Companies"
-msgstr "Firmy"
-
-#. module: account_check_writing
-#: field:account.check.write,create_uid:0
-msgid "Created by"
-msgstr "Utworzono przez"
-
-#. module: account_check_writing
-#: field:account.check.write,create_date:0
-msgid "Created on"
-msgstr "Data utworzenia"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Description"
-msgstr "Opis"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Discount"
-msgstr "Upust"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Due Date"
-msgstr "Termin płatności"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "Error!"
-msgstr "Błąd!"
-
-#. module: account_check_writing
-#: field:account.check.write,id:0
-#: field:report.account_check_writing.report_check,id:0
-msgid "ID"
-msgstr "ID"
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_journal
-msgid "Journal"
-msgstr "Dziennik"
-
-#. module: account_check_writing
-#: field:account.check.write,write_uid:0
-msgid "Last Updated by"
-msgstr "Ostatnio modyfikowano przez"
-
-#. module: account_check_writing
-#: field:account.check.write,write_date:0
-msgid "Last Updated on"
-msgstr "Data ostatniej modyfikacji"
-
-#. module: account_check_writing
-#: field:account.check.write,check_number:0
-msgid "Next Check Number"
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "No check selected "
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "One of the printed check already got a number."
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Open Balance"
-msgstr "Bilans otwarcia"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Original Amount"
-msgstr "Oryginalna wartość"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Payment"
-msgstr "Płatność"
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_check_write
-msgid "Prin Check in Batch"
-msgstr ""
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: view:account.voucher:account_check_writing.view_vendor_payment_check_form
-msgid "Print Check"
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_account_check_write
-msgid "Print Check in Batch"
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "Printing error"
-msgstr "Błąd drukowania"
-
-#. module: account_check_writing
-#: help:account.check.write,check_number:0
-msgid "The number of the next check number to be printed."
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.journal,use_preprint_check:0
-msgid "Use Preprinted Check"
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_write_check
-#: model:ir.ui.menu,name:account_check_writing.menu_action_write_check
-msgid "Write Checks"
-msgstr ""
diff --git a/addons/account_check_writing/i18n/pt.po b/addons/account_check_writing/i18n/pt.po
deleted file mode 100644
index 5047baa..0000000
--- a/addons/account_check_writing/i18n/pt.po
+++ /dev/null
@@ -1,248 +0,0 @@
-# Portuguese translation for openobject-addons
-# Copyright (c) 2014 Rosetta Contributors and Canonical Ltd 2014
-# This file is distributed under the same license as the openobject-addons package.
-# FIRST AUTHOR <EMAIL@ADDRESS>, 2014.
-#
-msgid ""
-msgstr ""
-"Project-Id-Version: openobject-addons\n"
-"Report-Msgid-Bugs-To: FULL NAME <EMAIL@ADDRESS>\n"
-"POT-Creation-Date: 2014-08-14 13:08+0000\n"
-"PO-Revision-Date: 2014-10-15 16:52+0000\n"
-"Last-Translator: Daniel Santos - ThinkOpen <dcs@thinkopensolutions.pt>\n"
-"Language-Team: Portuguese <pt@li.org>\n"
-"MIME-Version: 1.0\n"
-"Content-Type: text/plain; charset=UTF-8\n"
-"Content-Transfer-Encoding: 8bit\n"
-"X-Launchpad-Export-Date: 2014-10-16 05:52+0000\n"
-"X-Generator: Launchpad (build 17196)\n"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,help:account_check_writing.action_write_check
-msgid ""
-"<p class=\"oe_view_nocontent_create\">\n"
-"                Click to create a new check. \n"
-"              </p><p>\n"
-"                The check payment form allows you to track the payment you "
-"do\n"
-"                to your suppliers using checks. When you select a supplier, "
-"the\n"
-"                payment method and an amount for the payment, Odoo will\n"
-"                propose to reconcile your payment with the open supplier\n"
-"                invoices or bills.\n"
-"              </p>\n"
-"            "
-msgstr ""
-"<p class=\"oe_view_nocontent_create\">\n"
-"                Clique para criar um novo Cheque. \n"
-"              </p><p>\n"
-"                O formulário de pagamento por cheque permite que acompanhe o "
-"\n"
-"                pagamento que faz aos seus fornecedores por cheque. Quando \n"
-"                escolhe um fornecedor, o método e o montante de pagamento, o "
-"\n"
-"                Odoo propõe a reconciliação entre o pagamento com os "
-"documentos \n"
-"                em aberto.\n"
-"              </p>\n"
-"            "
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_voucher
-msgid "Accounting Voucher"
-msgstr "Recibo de Contabilidade"
-
-#. module: account_check_writing
-#: field:account.voucher,allow_check:0
-msgid "Allow Check Writing"
-msgstr "Permitir Escrever Cheques"
-
-#. module: account_check_writing
-#: field:account.journal,allow_check_writing:0
-msgid "Allow Check writing"
-msgstr "Permitir escrever Cheques"
-
-#. module: account_check_writing
-#: field:account.voucher,amount_in_word:0
-msgid "Amount in Word"
-msgstr "Valor em Palavra"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-msgid "Cancel"
-msgstr "Cancelar"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: model:ir.actions.report.xml,name:account_check_writing.action_report_check
-msgid "Check"
-msgstr "Cheque"
-
-#. module: account_check_writing
-#: field:res.company,check_layout:0
-msgid "Check Layout"
-msgstr "Esboço do Cheque"
-
-#. module: account_check_writing
-#: help:account.journal,use_preprint_check:0
-msgid "Check if you use a preformated sheet for check"
-msgstr "Verificar se usa uma folha pré-formatada para o Cheque"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check in middle"
-msgstr "Verifique no meio"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on Top"
-msgstr "Verifique no Topo"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on bottom"
-msgstr "Verifique na parte inferior"
-
-#. module: account_check_writing
-#: help:res.company,check_layout:0
-msgid ""
-"Check on top is compatible with Quicken, QuickBooks and Microsoft Money. "
-"Check in middle is compatible with Peachtree, ACCPAC and DacEasy. Check on "
-"bottom is compatible with Peachtree, ACCPAC and DacEasy only"
-msgstr ""
-"Verifique no topo se é compatível com o Quicken, QuickBooks e Microsoft "
-"Money. Verifique no meio se é compatível com Peachtree, ACCPAC e DacEasy. "
-"Verifique na parte inferior se é compatível apenas com Peachtree, ACCPAC e "
-"DacEasy"
-
-#. module: account_check_writing
-#: help:account.journal,allow_check_writing:0
-msgid "Check this if the journal is to be used for writing checks."
-msgstr "Marque esta opção se está a utilizar diáriamente cheques."
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_res_company
-msgid "Companies"
-msgstr "Empresas"
-
-#. module: account_check_writing
-#: field:account.check.write,create_uid:0
-msgid "Created by"
-msgstr "Criado por"
-
-#. module: account_check_writing
-#: field:account.check.write,create_date:0
-msgid "Created on"
-msgstr "Criado em"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Description"
-msgstr "Descrição"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Discount"
-msgstr "Desconto"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Due Date"
-msgstr "Data da Dívida"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "Error!"
-msgstr "Erro!"
-
-#. module: account_check_writing
-#: field:account.check.write,id:0
-#: field:report.account_check_writing.report_check,id:0
-msgid "ID"
-msgstr "ID"
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_journal
-msgid "Journal"
-msgstr "Diário"
-
-#. module: account_check_writing
-#: field:account.check.write,write_uid:0
-msgid "Last Updated by"
-msgstr "Última Atualização por"
-
-#. module: account_check_writing
-#: field:account.check.write,write_date:0
-msgid "Last Updated on"
-msgstr "Última Atualização em"
-
-#. module: account_check_writing
-#: field:account.check.write,check_number:0
-msgid "Next Check Number"
-msgstr "Próximo Número de Cheque"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "No check selected "
-msgstr "Nenhum cheque selecionado "
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "One of the printed check already got a number."
-msgstr "Um dos cheques impressos já tem número."
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Open Balance"
-msgstr "Abrir Balanço"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Original Amount"
-msgstr "Montante original"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Payment"
-msgstr "Pagamento"
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_check_write
-msgid "Prin Check in Batch"
-msgstr "Imprimir Cheques em Lote"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: view:account.voucher:account_check_writing.view_vendor_payment_check_form
-msgid "Print Check"
-msgstr "Imprimir Cheque"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_account_check_write
-msgid "Print Check in Batch"
-msgstr "Imprimir Cheques em Lote"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "Printing error"
-msgstr "Erro de impressão"
-
-#. module: account_check_writing
-#: help:account.check.write,check_number:0
-msgid "The number of the next check number to be printed."
-msgstr "O número do próximo cheque a ser impresso"
-
-#. module: account_check_writing
-#: field:account.journal,use_preprint_check:0
-msgid "Use Preprinted Check"
-msgstr "Usar cheques pré-imprimidos"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_write_check
-#: model:ir.ui.menu,name:account_check_writing.menu_action_write_check
-msgid "Write Checks"
-msgstr "Preencher cheques"
diff --git a/addons/account_check_writing/i18n/pt_BR.po b/addons/account_check_writing/i18n/pt_BR.po
deleted file mode 100644
index e3b1cdd..0000000
--- a/addons/account_check_writing/i18n/pt_BR.po
+++ /dev/null
@@ -1,235 +0,0 @@
-# Brazilian Portuguese translation for openobject-addons
-# Copyright (c) 2014 Rosetta Contributors and Canonical Ltd 2014
-# This file is distributed under the same license as the openobject-addons package.
-# FIRST AUTHOR <EMAIL@ADDRESS>, 2014.
-#
-msgid ""
-msgstr ""
-"Project-Id-Version: openobject-addons\n"
-"Report-Msgid-Bugs-To: FULL NAME <EMAIL@ADDRESS>\n"
-"POT-Creation-Date: 2014-08-14 13:08+0000\n"
-"PO-Revision-Date: 2014-08-30 02:39+0000\n"
-"Last-Translator: Fábio Martinelli - http://zupy.com.br "
-"<webmaster@zupy.com.br>\n"
-"Language-Team: Brazilian Portuguese <pt_BR@li.org>\n"
-"MIME-Version: 1.0\n"
-"Content-Type: text/plain; charset=UTF-8\n"
-"Content-Transfer-Encoding: 8bit\n"
-"X-Launchpad-Export-Date: 2014-08-30 08:36+0000\n"
-"X-Generator: Launchpad (build 17176)\n"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,help:account_check_writing.action_write_check
-msgid ""
-"<p class=\"oe_view_nocontent_create\">\n"
-"                Click to create a new check. \n"
-"              </p><p>\n"
-"                The check payment form allows you to track the payment you "
-"do\n"
-"                to your suppliers using checks. When you select a supplier, "
-"the\n"
-"                payment method and an amount for the payment, Odoo will\n"
-"                propose to reconcile your payment with the open supplier\n"
-"                invoices or bills.\n"
-"              </p>\n"
-"            "
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_voucher
-msgid "Accounting Voucher"
-msgstr "Comprovante Contábil"
-
-#. module: account_check_writing
-#: field:account.voucher,allow_check:0
-msgid "Allow Check Writing"
-msgstr "Permite preencher Cheques"
-
-#. module: account_check_writing
-#: field:account.journal,allow_check_writing:0
-msgid "Allow Check writing"
-msgstr "Permite escrever Cheques"
-
-#. module: account_check_writing
-#: field:account.voucher,amount_in_word:0
-msgid "Amount in Word"
-msgstr "Valor por extenso"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-msgid "Cancel"
-msgstr "Cancelar"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: model:ir.actions.report.xml,name:account_check_writing.action_report_check
-msgid "Check"
-msgstr "Cheque"
-
-#. module: account_check_writing
-#: field:res.company,check_layout:0
-msgid "Check Layout"
-msgstr "Modelo de Cheque"
-
-#. module: account_check_writing
-#: help:account.journal,use_preprint_check:0
-msgid "Check if you use a preformated sheet for check"
-msgstr ""
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check in middle"
-msgstr "Cheque no meio"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on Top"
-msgstr "Cheque no topo"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on bottom"
-msgstr "Cheque no rodapé"
-
-#. module: account_check_writing
-#: help:res.company,check_layout:0
-msgid ""
-"Check on top is compatible with Quicken, QuickBooks and Microsoft Money. "
-"Check in middle is compatible with Peachtree, ACCPAC and DacEasy. Check on "
-"bottom is compatible with Peachtree, ACCPAC and DacEasy only"
-msgstr ""
-"Cheque no topo é compativel com Quicken, QuickBooks e Microsoft Money. "
-"Cheque no meio é compativel com Peactree, ACCPAC e DacEasy. Cheque no rodapé "
-"é compatível com Peachtree, ACCPAC e DacEasy apenas."
-
-#. module: account_check_writing
-#: help:account.journal,allow_check_writing:0
-msgid "Check this if the journal is to be used for writing checks."
-msgstr "Verifique se este diário é usado para escrever cheques."
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_res_company
-msgid "Companies"
-msgstr "Empresas"
-
-#. module: account_check_writing
-#: field:account.check.write,create_uid:0
-msgid "Created by"
-msgstr "Criado por"
-
-#. module: account_check_writing
-#: field:account.check.write,create_date:0
-msgid "Created on"
-msgstr "Criado em"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Description"
-msgstr "Descrição"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Discount"
-msgstr "Desconto"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Due Date"
-msgstr "Data de Vencimento"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "Error!"
-msgstr "Erro!"
-
-#. module: account_check_writing
-#: field:account.check.write,id:0
-#: field:report.account_check_writing.report_check,id:0
-msgid "ID"
-msgstr "ID"
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_journal
-msgid "Journal"
-msgstr "Diário"
-
-#. module: account_check_writing
-#: field:account.check.write,write_uid:0
-msgid "Last Updated by"
-msgstr "Última atualização por"
-
-#. module: account_check_writing
-#: field:account.check.write,write_date:0
-msgid "Last Updated on"
-msgstr "Última atualização em"
-
-#. module: account_check_writing
-#: field:account.check.write,check_number:0
-msgid "Next Check Number"
-msgstr "Próximo Número de Cheque"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "No check selected "
-msgstr "Nenhum cheque selecionado "
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "One of the printed check already got a number."
-msgstr "Um dos cheques impressos já possui um número."
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Open Balance"
-msgstr "Saldo em Aberto"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Original Amount"
-msgstr "Valor Original"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Payment"
-msgstr "Pagamento"
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_check_write
-msgid "Prin Check in Batch"
-msgstr "Imprimir Cheques em Lote"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: view:account.voucher:account_check_writing.view_vendor_payment_check_form
-msgid "Print Check"
-msgstr "Imprimir Cheque"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_account_check_write
-msgid "Print Check in Batch"
-msgstr "Imprimir cheques em lote"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "Printing error"
-msgstr "Erro de impressão"
-
-#. module: account_check_writing
-#: help:account.check.write,check_number:0
-msgid "The number of the next check number to be printed."
-msgstr "O número do próximo cheque a ser impresso"
-
-#. module: account_check_writing
-#: field:account.journal,use_preprint_check:0
-msgid "Use Preprinted Check"
-msgstr "Usar cheques pré-impressos"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_write_check
-#: model:ir.ui.menu,name:account_check_writing.menu_action_write_check
-msgid "Write Checks"
-msgstr "Preencher Cheques"
diff --git a/addons/account_check_writing/i18n/ro.po b/addons/account_check_writing/i18n/ro.po
deleted file mode 100644
index 3d4fc67..0000000
--- a/addons/account_check_writing/i18n/ro.po
+++ /dev/null
@@ -1,235 +0,0 @@
-# Romanian translation for openobject-addons
-# Copyright (c) 2014 Rosetta Contributors and Canonical Ltd 2014
-# This file is distributed under the same license as the openobject-addons package.
-# FIRST AUTHOR <EMAIL@ADDRESS>, 2014.
-#
-msgid ""
-msgstr ""
-"Project-Id-Version: openobject-addons\n"
-"Report-Msgid-Bugs-To: FULL NAME <EMAIL@ADDRESS>\n"
-"POT-Creation-Date: 2014-08-14 13:08+0000\n"
-"PO-Revision-Date: 2014-08-14 16:10+0000\n"
-"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
-"Language-Team: Romanian <ro@li.org>\n"
-"MIME-Version: 1.0\n"
-"Content-Type: text/plain; charset=UTF-8\n"
-"Content-Transfer-Encoding: 8bit\n"
-"X-Launchpad-Export-Date: 2014-08-15 06:50+0000\n"
-"X-Generator: Launchpad (build 17156)\n"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,help:account_check_writing.action_write_check
-msgid ""
-"<p class=\"oe_view_nocontent_create\">\n"
-"                Click to create a new check. \n"
-"              </p><p>\n"
-"                The check payment form allows you to track the payment you "
-"do\n"
-"                to your suppliers using checks. When you select a supplier, "
-"the\n"
-"                payment method and an amount for the payment, Odoo will\n"
-"                propose to reconcile your payment with the open supplier\n"
-"                invoices or bills.\n"
-"              </p>\n"
-"            "
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_voucher
-msgid "Accounting Voucher"
-msgstr "Chitanta contabila"
-
-#. module: account_check_writing
-#: field:account.voucher,allow_check:0
-msgid "Allow Check Writing"
-msgstr "Permiteti Scrierea de Cecuri"
-
-#. module: account_check_writing
-#: field:account.journal,allow_check_writing:0
-msgid "Allow Check writing"
-msgstr "Permite scrierea de cecuri"
-
-#. module: account_check_writing
-#: field:account.voucher,amount_in_word:0
-msgid "Amount in Word"
-msgstr "Suma in litere"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-msgid "Cancel"
-msgstr "Anuleaza"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: model:ir.actions.report.xml,name:account_check_writing.action_report_check
-msgid "Check"
-msgstr "Cec"
-
-#. module: account_check_writing
-#: field:res.company,check_layout:0
-msgid "Check Layout"
-msgstr "Aspect Cec"
-
-#. module: account_check_writing
-#: help:account.journal,use_preprint_check:0
-msgid "Check if you use a preformated sheet for check"
-msgstr ""
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check in middle"
-msgstr "Cecul la mijloc"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on Top"
-msgstr "Cecul in partea de sus"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on bottom"
-msgstr "Cecul in partea de jos"
-
-#. module: account_check_writing
-#: help:res.company,check_layout:0
-msgid ""
-"Check on top is compatible with Quicken, QuickBooks and Microsoft Money. "
-"Check in middle is compatible with Peachtree, ACCPAC and DacEasy. Check on "
-"bottom is compatible with Peachtree, ACCPAC and DacEasy only"
-msgstr ""
-"Cecul in partea de sus este compatibil cu Quicken, QuickBooks si Microsoft "
-"Money. Cecul la mijloc este compatibil cu Peachtree, ACCPAC si DacEasy. "
-"Cecul in partea de jos este compatibil numai cu Peachtree, ACCPAC si DacEasy"
-
-#. module: account_check_writing
-#: help:account.journal,allow_check_writing:0
-msgid "Check this if the journal is to be used for writing checks."
-msgstr ""
-"Bifati aceasta casuta daca jurnalul va fi folosit pentru scrierea de cecuri."
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_res_company
-msgid "Companies"
-msgstr "Companii"
-
-#. module: account_check_writing
-#: field:account.check.write,create_uid:0
-msgid "Created by"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,create_date:0
-msgid "Created on"
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Description"
-msgstr "Descriere"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Discount"
-msgstr "Reducere"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Due Date"
-msgstr "Data scadentei"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "Error!"
-msgstr "Eroare!"
-
-#. module: account_check_writing
-#: field:account.check.write,id:0
-#: field:report.account_check_writing.report_check,id:0
-msgid "ID"
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_journal
-msgid "Journal"
-msgstr "Jurnal"
-
-#. module: account_check_writing
-#: field:account.check.write,write_uid:0
-msgid "Last Updated by"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,write_date:0
-msgid "Last Updated on"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,check_number:0
-msgid "Next Check Number"
-msgstr "Numarul Cecului Urmator"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "No check selected "
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "One of the printed check already got a number."
-msgstr "Unul dintre cecurile imprimate are deja un numar."
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Open Balance"
-msgstr "Sold la deschidere"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Original Amount"
-msgstr "Suma Initiala"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Payment"
-msgstr "Plata"
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_check_write
-msgid "Prin Check in Batch"
-msgstr "Tipareste Cecuri in Loturi"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: view:account.voucher:account_check_writing.view_vendor_payment_check_form
-msgid "Print Check"
-msgstr "Printeaza Cecul"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_account_check_write
-msgid "Print Check in Batch"
-msgstr "Imprima Cecuri in Lot"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "Printing error"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.check.write,check_number:0
-msgid "The number of the next check number to be printed."
-msgstr "Numarul urmatorului cec care va fi tiparit."
-
-#. module: account_check_writing
-#: field:account.journal,use_preprint_check:0
-msgid "Use Preprinted Check"
-msgstr "Folositi Cecuri pre-tiparite"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_write_check
-#: model:ir.ui.menu,name:account_check_writing.menu_action_write_check
-msgid "Write Checks"
-msgstr "Scrieti Cecuri"
diff --git a/addons/account_check_writing/i18n/ru.po b/addons/account_check_writing/i18n/ru.po
deleted file mode 100644
index fbc5efa..0000000
--- a/addons/account_check_writing/i18n/ru.po
+++ /dev/null
@@ -1,231 +0,0 @@
-# Russian translation for openobject-addons
-# Copyright (c) 2014 Rosetta Contributors and Canonical Ltd 2014
-# This file is distributed under the same license as the openobject-addons package.
-# FIRST AUTHOR <EMAIL@ADDRESS>, 2014.
-#
-msgid ""
-msgstr ""
-"Project-Id-Version: openobject-addons\n"
-"Report-Msgid-Bugs-To: FULL NAME <EMAIL@ADDRESS>\n"
-"POT-Creation-Date: 2014-08-14 13:08+0000\n"
-"PO-Revision-Date: 2014-08-14 16:10+0000\n"
-"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
-"Language-Team: Russian <ru@li.org>\n"
-"MIME-Version: 1.0\n"
-"Content-Type: text/plain; charset=UTF-8\n"
-"Content-Transfer-Encoding: 8bit\n"
-"X-Launchpad-Export-Date: 2014-08-15 06:50+0000\n"
-"X-Generator: Launchpad (build 17156)\n"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,help:account_check_writing.action_write_check
-msgid ""
-"<p class=\"oe_view_nocontent_create\">\n"
-"                Click to create a new check. \n"
-"              </p><p>\n"
-"                The check payment form allows you to track the payment you "
-"do\n"
-"                to your suppliers using checks. When you select a supplier, "
-"the\n"
-"                payment method and an amount for the payment, Odoo will\n"
-"                propose to reconcile your payment with the open supplier\n"
-"                invoices or bills.\n"
-"              </p>\n"
-"            "
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_voucher
-msgid "Accounting Voucher"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.voucher,allow_check:0
-msgid "Allow Check Writing"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.journal,allow_check_writing:0
-msgid "Allow Check writing"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.voucher,amount_in_word:0
-msgid "Amount in Word"
-msgstr "Сумма прописью"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-msgid "Cancel"
-msgstr "Отмена"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: model:ir.actions.report.xml,name:account_check_writing.action_report_check
-msgid "Check"
-msgstr ""
-
-#. module: account_check_writing
-#: field:res.company,check_layout:0
-msgid "Check Layout"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.journal,use_preprint_check:0
-msgid "Check if you use a preformated sheet for check"
-msgstr ""
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check in middle"
-msgstr ""
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on Top"
-msgstr ""
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on bottom"
-msgstr ""
-
-#. module: account_check_writing
-#: help:res.company,check_layout:0
-msgid ""
-"Check on top is compatible with Quicken, QuickBooks and Microsoft Money. "
-"Check in middle is compatible with Peachtree, ACCPAC and DacEasy. Check on "
-"bottom is compatible with Peachtree, ACCPAC and DacEasy only"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.journal,allow_check_writing:0
-msgid "Check this if the journal is to be used for writing checks."
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_res_company
-msgid "Companies"
-msgstr "Компании"
-
-#. module: account_check_writing
-#: field:account.check.write,create_uid:0
-msgid "Created by"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,create_date:0
-msgid "Created on"
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Description"
-msgstr "Описание"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Discount"
-msgstr "Скидка"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Due Date"
-msgstr "Дата исполнения"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "Error!"
-msgstr "Ошибка!"
-
-#. module: account_check_writing
-#: field:account.check.write,id:0
-#: field:report.account_check_writing.report_check,id:0
-msgid "ID"
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_journal
-msgid "Journal"
-msgstr "Журнал"
-
-#. module: account_check_writing
-#: field:account.check.write,write_uid:0
-msgid "Last Updated by"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,write_date:0
-msgid "Last Updated on"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,check_number:0
-msgid "Next Check Number"
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "No check selected "
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "One of the printed check already got a number."
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Open Balance"
-msgstr "Открытый баланс"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Original Amount"
-msgstr "Первоначальная сумма"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Payment"
-msgstr "Платеж"
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_check_write
-msgid "Prin Check in Batch"
-msgstr ""
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: view:account.voucher:account_check_writing.view_vendor_payment_check_form
-msgid "Print Check"
-msgstr "Напечатать чек"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_account_check_write
-msgid "Print Check in Batch"
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "Printing error"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.check.write,check_number:0
-msgid "The number of the next check number to be printed."
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.journal,use_preprint_check:0
-msgid "Use Preprinted Check"
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_write_check
-#: model:ir.ui.menu,name:account_check_writing.menu_action_write_check
-msgid "Write Checks"
-msgstr ""
diff --git a/addons/account_check_writing/i18n/sl.po b/addons/account_check_writing/i18n/sl.po
deleted file mode 100644
index 2c5a91d..0000000
--- a/addons/account_check_writing/i18n/sl.po
+++ /dev/null
@@ -1,234 +0,0 @@
-# Slovenian translation for openobject-addons
-# Copyright (c) 2014 Rosetta Contributors and Canonical Ltd 2014
-# This file is distributed under the same license as the openobject-addons package.
-# FIRST AUTHOR <EMAIL@ADDRESS>, 2014.
-#
-msgid ""
-msgstr ""
-"Project-Id-Version: openobject-addons\n"
-"Report-Msgid-Bugs-To: FULL NAME <EMAIL@ADDRESS>\n"
-"POT-Creation-Date: 2014-08-14 13:08+0000\n"
-"PO-Revision-Date: 2014-08-14 16:10+0000\n"
-"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
-"Language-Team: Slovenian <sl@li.org>\n"
-"MIME-Version: 1.0\n"
-"Content-Type: text/plain; charset=UTF-8\n"
-"Content-Transfer-Encoding: 8bit\n"
-"X-Launchpad-Export-Date: 2014-08-15 06:50+0000\n"
-"X-Generator: Launchpad (build 17156)\n"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,help:account_check_writing.action_write_check
-msgid ""
-"<p class=\"oe_view_nocontent_create\">\n"
-"                Click to create a new check. \n"
-"              </p><p>\n"
-"                The check payment form allows you to track the payment you "
-"do\n"
-"                to your suppliers using checks. When you select a supplier, "
-"the\n"
-"                payment method and an amount for the payment, Odoo will\n"
-"                propose to reconcile your payment with the open supplier\n"
-"                invoices or bills.\n"
-"              </p>\n"
-"            "
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_voucher
-msgid "Accounting Voucher"
-msgstr "Accounting Voucher"
-
-#. module: account_check_writing
-#: field:account.voucher,allow_check:0
-msgid "Allow Check Writing"
-msgstr "Allow Check Writing"
-
-#. module: account_check_writing
-#: field:account.journal,allow_check_writing:0
-msgid "Allow Check writing"
-msgstr "Allow Check writing"
-
-#. module: account_check_writing
-#: field:account.voucher,amount_in_word:0
-msgid "Amount in Word"
-msgstr "Amount in Word"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-msgid "Cancel"
-msgstr "Cancel"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: model:ir.actions.report.xml,name:account_check_writing.action_report_check
-msgid "Check"
-msgstr "Check"
-
-#. module: account_check_writing
-#: field:res.company,check_layout:0
-msgid "Check Layout"
-msgstr "Check Layout"
-
-#. module: account_check_writing
-#: help:account.journal,use_preprint_check:0
-msgid "Check if you use a preformated sheet for check"
-msgstr ""
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check in middle"
-msgstr "Check in middle"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on Top"
-msgstr "Check on Top"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on bottom"
-msgstr "Check on bottom"
-
-#. module: account_check_writing
-#: help:res.company,check_layout:0
-msgid ""
-"Check on top is compatible with Quicken, QuickBooks and Microsoft Money. "
-"Check in middle is compatible with Peachtree, ACCPAC and DacEasy. Check on "
-"bottom is compatible with Peachtree, ACCPAC and DacEasy only"
-msgstr ""
-"Check on top is compatible with Quicken, QuickBooks and Microsoft Money. "
-"Check in middle is compatible with Peachtree, ACCPAC and DacEasy. Check on "
-"bottom is compatible with Peachtree, ACCPAC and DacEasy only"
-
-#. module: account_check_writing
-#: help:account.journal,allow_check_writing:0
-msgid "Check this if the journal is to be used for writing checks."
-msgstr "Check this if the journal is to be used for writing checks."
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_res_company
-msgid "Companies"
-msgstr "Companies"
-
-#. module: account_check_writing
-#: field:account.check.write,create_uid:0
-msgid "Created by"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,create_date:0
-msgid "Created on"
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Description"
-msgstr "Description"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Discount"
-msgstr "Discount"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Due Date"
-msgstr "Due Date"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "Error!"
-msgstr "Error!"
-
-#. module: account_check_writing
-#: field:account.check.write,id:0
-#: field:report.account_check_writing.report_check,id:0
-msgid "ID"
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_journal
-msgid "Journal"
-msgstr "Journal"
-
-#. module: account_check_writing
-#: field:account.check.write,write_uid:0
-msgid "Last Updated by"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,write_date:0
-msgid "Last Updated on"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,check_number:0
-msgid "Next Check Number"
-msgstr "Next Check Number"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "No check selected "
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "One of the printed check already got a number."
-msgstr "One of the printed check already got a number."
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Open Balance"
-msgstr "Open Balance"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Original Amount"
-msgstr "Original Amount"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Payment"
-msgstr "Payment"
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_check_write
-msgid "Prin Check in Batch"
-msgstr "Prin Check in Batch"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: view:account.voucher:account_check_writing.view_vendor_payment_check_form
-msgid "Print Check"
-msgstr "Print Check"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_account_check_write
-msgid "Print Check in Batch"
-msgstr "Print Check in Batch"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "Printing error"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.check.write,check_number:0
-msgid "The number of the next check number to be printed."
-msgstr "The number of the next check number to be printed."
-
-#. module: account_check_writing
-#: field:account.journal,use_preprint_check:0
-msgid "Use Preprinted Check"
-msgstr "Use Preprinted Check"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_write_check
-#: model:ir.ui.menu,name:account_check_writing.menu_action_write_check
-msgid "Write Checks"
-msgstr "Write Checks"
diff --git a/addons/account_check_writing/i18n/sr@latin.po b/addons/account_check_writing/i18n/sr@latin.po
deleted file mode 100644
index e3a6252..0000000
--- a/addons/account_check_writing/i18n/sr@latin.po
+++ /dev/null
@@ -1,234 +0,0 @@
-# Serbian Latin translation for openobject-addons
-# Copyright (c) 2014 Rosetta Contributors and Canonical Ltd 2014
-# This file is distributed under the same license as the openobject-addons package.
-# FIRST AUTHOR <EMAIL@ADDRESS>, 2014.
-#
-msgid ""
-msgstr ""
-"Project-Id-Version: openobject-addons\n"
-"Report-Msgid-Bugs-To: FULL NAME <EMAIL@ADDRESS>\n"
-"POT-Creation-Date: 2014-08-14 13:08+0000\n"
-"PO-Revision-Date: 2014-08-14 16:10+0000\n"
-"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
-"Language-Team: Serbian Latin <sr@latin@li.org>\n"
-"MIME-Version: 1.0\n"
-"Content-Type: text/plain; charset=UTF-8\n"
-"Content-Transfer-Encoding: 8bit\n"
-"X-Launchpad-Export-Date: 2014-08-15 06:50+0000\n"
-"X-Generator: Launchpad (build 17156)\n"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,help:account_check_writing.action_write_check
-msgid ""
-"<p class=\"oe_view_nocontent_create\">\n"
-"                Click to create a new check. \n"
-"              </p><p>\n"
-"                The check payment form allows you to track the payment you "
-"do\n"
-"                to your suppliers using checks. When you select a supplier, "
-"the\n"
-"                payment method and an amount for the payment, Odoo will\n"
-"                propose to reconcile your payment with the open supplier\n"
-"                invoices or bills.\n"
-"              </p>\n"
-"            "
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_voucher
-msgid "Accounting Voucher"
-msgstr "KVaučer knjigovodstva"
-
-#. module: account_check_writing
-#: field:account.voucher,allow_check:0
-msgid "Allow Check Writing"
-msgstr "Dozvoli pisanje čekova"
-
-#. module: account_check_writing
-#: field:account.journal,allow_check_writing:0
-msgid "Allow Check writing"
-msgstr "Dozvoli pisanje čekova"
-
-#. module: account_check_writing
-#: field:account.voucher,amount_in_word:0
-msgid "Amount in Word"
-msgstr "Iznos rečima"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-msgid "Cancel"
-msgstr ""
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: model:ir.actions.report.xml,name:account_check_writing.action_report_check
-msgid "Check"
-msgstr ""
-
-#. module: account_check_writing
-#: field:res.company,check_layout:0
-msgid "Check Layout"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.journal,use_preprint_check:0
-msgid "Check if you use a preformated sheet for check"
-msgstr ""
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check in middle"
-msgstr "Ček u sredini"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on Top"
-msgstr "Ček na vrhu"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on bottom"
-msgstr "Ček na dnu"
-
-#. module: account_check_writing
-#: help:res.company,check_layout:0
-msgid ""
-"Check on top is compatible with Quicken, QuickBooks and Microsoft Money. "
-"Check in middle is compatible with Peachtree, ACCPAC and DacEasy. Check on "
-"bottom is compatible with Peachtree, ACCPAC and DacEasy only"
-msgstr ""
-"Ček na vrhu kompatibilan je sa Quicken, QuickBooks i Microsoft Money. Ček u "
-"sredini kompatibilan je sa Peachtree, ACCPAC i DacEasy. Ček na dnu "
-"kompatibilan je samo sa Peachtree, ACCPAC i DacEasy"
-
-#. module: account_check_writing
-#: help:account.journal,allow_check_writing:0
-msgid "Check this if the journal is to be used for writing checks."
-msgstr "Obeležite ovo ako dnevnik treba biti korišćen za pisanje čekova-"
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_res_company
-msgid "Companies"
-msgstr "Preduzeća"
-
-#. module: account_check_writing
-#: field:account.check.write,create_uid:0
-msgid "Created by"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,create_date:0
-msgid "Created on"
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Description"
-msgstr "Opis"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Discount"
-msgstr "Popust"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Due Date"
-msgstr "Krajnji rok"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "Error!"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,id:0
-#: field:report.account_check_writing.report_check,id:0
-msgid "ID"
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_journal
-msgid "Journal"
-msgstr "Dnevnik"
-
-#. module: account_check_writing
-#: field:account.check.write,write_uid:0
-msgid "Last Updated by"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,write_date:0
-msgid "Last Updated on"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,check_number:0
-msgid "Next Check Number"
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "No check selected "
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "One of the printed check already got a number."
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Open Balance"
-msgstr "Otvori stanje"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Original Amount"
-msgstr "Prvobitni iznos"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Payment"
-msgstr "Plaćanje"
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_check_write
-msgid "Prin Check in Batch"
-msgstr ""
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: view:account.voucher:account_check_writing.view_vendor_payment_check_form
-msgid "Print Check"
-msgstr "Štampanje čeka"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_account_check_write
-msgid "Print Check in Batch"
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "Printing error"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.check.write,check_number:0
-msgid "The number of the next check number to be printed."
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.journal,use_preprint_check:0
-msgid "Use Preprinted Check"
-msgstr "iskoristi predefinisan ček"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_write_check
-#: model:ir.ui.menu,name:account_check_writing.menu_action_write_check
-msgid "Write Checks"
-msgstr "Ispiši čekove"
diff --git a/addons/account_check_writing/i18n/sv.po b/addons/account_check_writing/i18n/sv.po
deleted file mode 100644
index 91ab492..0000000
--- a/addons/account_check_writing/i18n/sv.po
+++ /dev/null
@@ -1,231 +0,0 @@
-# Swedish translation for openobject-addons
-# Copyright (c) 2014 Rosetta Contributors and Canonical Ltd 2014
-# This file is distributed under the same license as the openobject-addons package.
-# FIRST AUTHOR <EMAIL@ADDRESS>, 2014.
-#
-msgid ""
-msgstr ""
-"Project-Id-Version: openobject-addons\n"
-"Report-Msgid-Bugs-To: FULL NAME <EMAIL@ADDRESS>\n"
-"POT-Creation-Date: 2014-08-14 13:08+0000\n"
-"PO-Revision-Date: 2014-08-14 16:10+0000\n"
-"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
-"Language-Team: Swedish <sv@li.org>\n"
-"MIME-Version: 1.0\n"
-"Content-Type: text/plain; charset=UTF-8\n"
-"Content-Transfer-Encoding: 8bit\n"
-"X-Launchpad-Export-Date: 2014-08-15 06:50+0000\n"
-"X-Generator: Launchpad (build 17156)\n"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,help:account_check_writing.action_write_check
-msgid ""
-"<p class=\"oe_view_nocontent_create\">\n"
-"                Click to create a new check. \n"
-"              </p><p>\n"
-"                The check payment form allows you to track the payment you "
-"do\n"
-"                to your suppliers using checks. When you select a supplier, "
-"the\n"
-"                payment method and an amount for the payment, Odoo will\n"
-"                propose to reconcile your payment with the open supplier\n"
-"                invoices or bills.\n"
-"              </p>\n"
-"            "
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_voucher
-msgid "Accounting Voucher"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.voucher,allow_check:0
-msgid "Allow Check Writing"
-msgstr "Tillåt checkutgivning"
-
-#. module: account_check_writing
-#: field:account.journal,allow_check_writing:0
-msgid "Allow Check writing"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.voucher,amount_in_word:0
-msgid "Amount in Word"
-msgstr ""
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-msgid "Cancel"
-msgstr ""
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: model:ir.actions.report.xml,name:account_check_writing.action_report_check
-msgid "Check"
-msgstr ""
-
-#. module: account_check_writing
-#: field:res.company,check_layout:0
-msgid "Check Layout"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.journal,use_preprint_check:0
-msgid "Check if you use a preformated sheet for check"
-msgstr ""
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check in middle"
-msgstr "Checken i mitten"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on Top"
-msgstr "Checken högst upp"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on bottom"
-msgstr "Checken längst ner"
-
-#. module: account_check_writing
-#: help:res.company,check_layout:0
-msgid ""
-"Check on top is compatible with Quicken, QuickBooks and Microsoft Money. "
-"Check in middle is compatible with Peachtree, ACCPAC and DacEasy. Check on "
-"bottom is compatible with Peachtree, ACCPAC and DacEasy only"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.journal,allow_check_writing:0
-msgid "Check this if the journal is to be used for writing checks."
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_res_company
-msgid "Companies"
-msgstr "Företag"
-
-#. module: account_check_writing
-#: field:account.check.write,create_uid:0
-msgid "Created by"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,create_date:0
-msgid "Created on"
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Description"
-msgstr "Beskrivning"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Discount"
-msgstr "Rabatt"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Due Date"
-msgstr "Förfallodatum"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "Error!"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,id:0
-#: field:report.account_check_writing.report_check,id:0
-msgid "ID"
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_journal
-msgid "Journal"
-msgstr "Journal"
-
-#. module: account_check_writing
-#: field:account.check.write,write_uid:0
-msgid "Last Updated by"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,write_date:0
-msgid "Last Updated on"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,check_number:0
-msgid "Next Check Number"
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "No check selected "
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "One of the printed check already got a number."
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Open Balance"
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Original Amount"
-msgstr "Ursprungligt belopp"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Payment"
-msgstr "Betalning"
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_check_write
-msgid "Prin Check in Batch"
-msgstr ""
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: view:account.voucher:account_check_writing.view_vendor_payment_check_form
-msgid "Print Check"
-msgstr "Skriv ut check"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_account_check_write
-msgid "Print Check in Batch"
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "Printing error"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.check.write,check_number:0
-msgid "The number of the next check number to be printed."
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.journal,use_preprint_check:0
-msgid "Use Preprinted Check"
-msgstr "Använd förtryckta checker"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_write_check
-#: model:ir.ui.menu,name:account_check_writing.menu_action_write_check
-msgid "Write Checks"
-msgstr ""
diff --git a/addons/account_check_writing/i18n/tr.po b/addons/account_check_writing/i18n/tr.po
deleted file mode 100644
index 05b7f8c..0000000
--- a/addons/account_check_writing/i18n/tr.po
+++ /dev/null
@@ -1,246 +0,0 @@
-# Turkish translation for openobject-addons
-# Copyright (c) 2014 Rosetta Contributors and Canonical Ltd 2014
-# This file is distributed under the same license as the openobject-addons package.
-# FIRST AUTHOR <EMAIL@ADDRESS>, 2014.
-#
-msgid ""
-msgstr ""
-"Project-Id-Version: openobject-addons\n"
-"Report-Msgid-Bugs-To: FULL NAME <EMAIL@ADDRESS>\n"
-"POT-Creation-Date: 2014-08-14 13:08+0000\n"
-"PO-Revision-Date: 2014-10-12 15:37+0000\n"
-"Last-Translator: Ayhan KIZILTAN <Unknown>\n"
-"Language-Team: Turkish <tr@li.org>\n"
-"MIME-Version: 1.0\n"
-"Content-Type: text/plain; charset=UTF-8\n"
-"Content-Transfer-Encoding: 8bit\n"
-"X-Launchpad-Export-Date: 2014-10-13 06:34+0000\n"
-"X-Generator: Launchpad (build 17196)\n"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,help:account_check_writing.action_write_check
-msgid ""
-"<p class=\"oe_view_nocontent_create\">\n"
-"                Click to create a new check. \n"
-"              </p><p>\n"
-"                The check payment form allows you to track the payment you "
-"do\n"
-"                to your suppliers using checks. When you select a supplier, "
-"the\n"
-"                payment method and an amount for the payment, Odoo will\n"
-"                propose to reconcile your payment with the open supplier\n"
-"                invoices or bills.\n"
-"              </p>\n"
-"            "
-msgstr ""
-"<p class=\"oe_view_nocontent_create\">\n"
-"                Yeni bir çek oluşturmak için tıklayın. \n"
-"              </p><p>\n"
-"                Çek ödeme formu, tedarikçilerinize çek ile yaptığınız "
-"ödemeleri\n"
-"                izlemenizi sağlar. Bir tedarikçiyi, ödeme yöntemini ve ödeme "
-"tutarını\n"
-"                seçtiğinizde, Odoo size ödemenizin açık tedarikçi faturaları "
-"ve hesapları\n"
-"                ile uzlaştırmanızı önerecektir.\n"
-"              </p>\n"
-"            "
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_voucher
-msgid "Accounting Voucher"
-msgstr "Muhasebe Makbuzu"
-
-#. module: account_check_writing
-#: field:account.voucher,allow_check:0
-msgid "Allow Check Writing"
-msgstr "Çek Yazmaya İzin ver"
-
-#. module: account_check_writing
-#: field:account.journal,allow_check_writing:0
-msgid "Allow Check writing"
-msgstr "Çek yazmaya izin ver"
-
-#. module: account_check_writing
-#: field:account.voucher,amount_in_word:0
-msgid "Amount in Word"
-msgstr "Yazı ile Tutar"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-msgid "Cancel"
-msgstr "İptal"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: model:ir.actions.report.xml,name:account_check_writing.action_report_check
-msgid "Check"
-msgstr "Çek"
-
-#. module: account_check_writing
-#: field:res.company,check_layout:0
-msgid "Check Layout"
-msgstr "Çek yerleşimi"
-
-#. module: account_check_writing
-#: help:account.journal,use_preprint_check:0
-msgid "Check if you use a preformated sheet for check"
-msgstr "Ön tanımlı çek sayfası kullanacaksanız işaretleyin"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check in middle"
-msgstr "Çek ortada"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on Top"
-msgstr "Çek Üstte"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on bottom"
-msgstr "Çek altta"
-
-#. module: account_check_writing
-#: help:res.company,check_layout:0
-msgid ""
-"Check on top is compatible with Quicken, QuickBooks and Microsoft Money. "
-"Check in middle is compatible with Peachtree, ACCPAC and DacEasy. Check on "
-"bottom is compatible with Peachtree, ACCPAC and DacEasy only"
-msgstr ""
-"Çek üstte Quicken, QuickBooks ve Microfost Money ile uyumludur. Çek ortada "
-"Peachtree, ACCPAC ve DacEasy ile uyumludur. Çek altta Peachtree, ACCPAC ve "
-"DacEasy ile uyumludur."
-
-#. module: account_check_writing
-#: help:account.journal,allow_check_writing:0
-msgid "Check this if the journal is to be used for writing checks."
-msgstr "Günlük çek yazmak için kullanılacaksa bunu işaretleyin."
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_res_company
-msgid "Companies"
-msgstr "Şirketler"
-
-#. module: account_check_writing
-#: field:account.check.write,create_uid:0
-msgid "Created by"
-msgstr "Oluşturan"
-
-#. module: account_check_writing
-#: field:account.check.write,create_date:0
-msgid "Created on"
-msgstr "Oluşturma"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Description"
-msgstr "Açıklama"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Discount"
-msgstr "İndirim"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Due Date"
-msgstr "Vade Tarihi"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "Error!"
-msgstr "Hata!"
-
-#. module: account_check_writing
-#: field:account.check.write,id:0
-#: field:report.account_check_writing.report_check,id:0
-msgid "ID"
-msgstr "ID"
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_journal
-msgid "Journal"
-msgstr "Yevmiye"
-
-#. module: account_check_writing
-#: field:account.check.write,write_uid:0
-msgid "Last Updated by"
-msgstr "Son Güncelleyen"
-
-#. module: account_check_writing
-#: field:account.check.write,write_date:0
-msgid "Last Updated on"
-msgstr "Son Güncelleme"
-
-#. module: account_check_writing
-#: field:account.check.write,check_number:0
-msgid "Next Check Number"
-msgstr "Sonraki Çek Numarası"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "No check selected "
-msgstr "Seçilen çek yok "
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "One of the printed check already got a number."
-msgstr "Yazdırılan çekin birinin halihazırda numarası var."
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Open Balance"
-msgstr "Açık Bakiye"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Original Amount"
-msgstr "İlk Tutar"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Payment"
-msgstr "Ödeme"
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_check_write
-msgid "Prin Check in Batch"
-msgstr "Toplu Çek Yazdır"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: view:account.voucher:account_check_writing.view_vendor_payment_check_form
-msgid "Print Check"
-msgstr "Çeki Yazdır"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_account_check_write
-msgid "Print Check in Batch"
-msgstr "Toplu Çek Yazdır"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "Printing error"
-msgstr "Yazdırma hatası"
-
-#. module: account_check_writing
-#: help:account.check.write,check_number:0
-msgid "The number of the next check number to be printed."
-msgstr "Yazdırılacak sonraki çekin numarası."
-
-#. module: account_check_writing
-#: field:account.journal,use_preprint_check:0
-msgid "Use Preprinted Check"
-msgstr "Ön basılı çek kullan"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_write_check
-#: model:ir.ui.menu,name:account_check_writing.menu_action_write_check
-msgid "Write Checks"
-msgstr "Çekleri Yazma"
diff --git a/addons/account_check_writing/i18n/zh_CN.po b/addons/account_check_writing/i18n/zh_CN.po
deleted file mode 100644
index 6245346..0000000
--- a/addons/account_check_writing/i18n/zh_CN.po
+++ /dev/null
@@ -1,233 +0,0 @@
-# Chinese (Simplified) translation for openobject-addons
-# Copyright (c) 2014 Rosetta Contributors and Canonical Ltd 2014
-# This file is distributed under the same license as the openobject-addons package.
-# FIRST AUTHOR <EMAIL@ADDRESS>, 2014.
-#
-msgid ""
-msgstr ""
-"Project-Id-Version: openobject-addons\n"
-"Report-Msgid-Bugs-To: FULL NAME <EMAIL@ADDRESS>\n"
-"POT-Creation-Date: 2014-08-14 13:08+0000\n"
-"PO-Revision-Date: 2014-08-14 16:10+0000\n"
-"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
-"Language-Team: Chinese (Simplified) <zh_CN@li.org>\n"
-"MIME-Version: 1.0\n"
-"Content-Type: text/plain; charset=UTF-8\n"
-"Content-Transfer-Encoding: 8bit\n"
-"X-Launchpad-Export-Date: 2014-08-15 06:50+0000\n"
-"X-Generator: Launchpad (build 17156)\n"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,help:account_check_writing.action_write_check
-msgid ""
-"<p class=\"oe_view_nocontent_create\">\n"
-"                Click to create a new check. \n"
-"              </p><p>\n"
-"                The check payment form allows you to track the payment you "
-"do\n"
-"                to your suppliers using checks. When you select a supplier, "
-"the\n"
-"                payment method and an amount for the payment, Odoo will\n"
-"                propose to reconcile your payment with the open supplier\n"
-"                invoices or bills.\n"
-"              </p>\n"
-"            "
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_voucher
-msgid "Accounting Voucher"
-msgstr "手工凭证"
-
-#. module: account_check_writing
-#: field:account.voucher,allow_check:0
-msgid "Allow Check Writing"
-msgstr "允许写支票"
-
-#. module: account_check_writing
-#: field:account.journal,allow_check_writing:0
-msgid "Allow Check writing"
-msgstr "允许写支票"
-
-#. module: account_check_writing
-#: field:account.voucher,amount_in_word:0
-msgid "Amount in Word"
-msgstr "金额大写"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-msgid "Cancel"
-msgstr "取消"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: model:ir.actions.report.xml,name:account_check_writing.action_report_check
-msgid "Check"
-msgstr "核对"
-
-#. module: account_check_writing
-#: field:res.company,check_layout:0
-msgid "Check Layout"
-msgstr "支票布局"
-
-#. module: account_check_writing
-#: help:account.journal,use_preprint_check:0
-msgid "Check if you use a preformated sheet for check"
-msgstr ""
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check in middle"
-msgstr "中间的支票"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on Top"
-msgstr "顶部的支票"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on bottom"
-msgstr "底部的支票"
-
-#. module: account_check_writing
-#: help:res.company,check_layout:0
-msgid ""
-"Check on top is compatible with Quicken, QuickBooks and Microsoft Money. "
-"Check in middle is compatible with Peachtree, ACCPAC and DacEasy. Check on "
-"bottom is compatible with Peachtree, ACCPAC and DacEasy only"
-msgstr ""
-"顶部的支票与Quicken, QuickBooks 和 Microsoft Money兼容。中间的支票与Peachtree, ACCPAC 和 "
-"DacEasy兼容。底部的支票只与Peachtree, ACCPAC 和 DacEasy兼容。"
-
-#. module: account_check_writing
-#: help:account.journal,allow_check_writing:0
-msgid "Check this if the journal is to be used for writing checks."
-msgstr "如果这个凭证簿用于写支票，请勾选这里。"
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_res_company
-msgid "Companies"
-msgstr "公司"
-
-#. module: account_check_writing
-#: field:account.check.write,create_uid:0
-msgid "Created by"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,create_date:0
-msgid "Created on"
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Description"
-msgstr "描述"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Discount"
-msgstr "折扣"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Due Date"
-msgstr "到期日期"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "Error!"
-msgstr "错误！"
-
-#. module: account_check_writing
-#: field:account.check.write,id:0
-#: field:report.account_check_writing.report_check,id:0
-msgid "ID"
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_journal
-msgid "Journal"
-msgstr "凭证簿"
-
-#. module: account_check_writing
-#: field:account.check.write,write_uid:0
-msgid "Last Updated by"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,write_date:0
-msgid "Last Updated on"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,check_number:0
-msgid "Next Check Number"
-msgstr "下一个支票号"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "No check selected "
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "One of the printed check already got a number."
-msgstr "打印的支票已经获得一个号码"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Open Balance"
-msgstr "期初余额"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Original Amount"
-msgstr "原始金额"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Payment"
-msgstr "付款"
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_check_write
-msgid "Prin Check in Batch"
-msgstr "批量打印支票"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: view:account.voucher:account_check_writing.view_vendor_payment_check_form
-msgid "Print Check"
-msgstr "打印支票"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_account_check_write
-msgid "Print Check in Batch"
-msgstr "批量打印支票"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "Printing error"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.check.write,check_number:0
-msgid "The number of the next check number to be printed."
-msgstr "下个要被打印的支票号码"
-
-#. module: account_check_writing
-#: field:account.journal,use_preprint_check:0
-msgid "Use Preprinted Check"
-msgstr "用预先打印的支票"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_write_check
-#: model:ir.ui.menu,name:account_check_writing.menu_action_write_check
-msgid "Write Checks"
-msgstr "写支票"
diff --git a/addons/account_check_writing/i18n/zh_TW.po b/addons/account_check_writing/i18n/zh_TW.po
deleted file mode 100644
index 33300a8..0000000
--- a/addons/account_check_writing/i18n/zh_TW.po
+++ /dev/null
@@ -1,233 +0,0 @@
-# Chinese (Traditional) translation for openobject-addons
-# Copyright (c) 2014 Rosetta Contributors and Canonical Ltd 2014
-# This file is distributed under the same license as the openobject-addons package.
-# FIRST AUTHOR <EMAIL@ADDRESS>, 2014.
-#
-msgid ""
-msgstr ""
-"Project-Id-Version: openobject-addons\n"
-"Report-Msgid-Bugs-To: FULL NAME <EMAIL@ADDRESS>\n"
-"POT-Creation-Date: 2014-08-14 13:08+0000\n"
-"PO-Revision-Date: 2014-08-14 16:10+0000\n"
-"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
-"Language-Team: Chinese (Traditional) <zh_TW@li.org>\n"
-"MIME-Version: 1.0\n"
-"Content-Type: text/plain; charset=UTF-8\n"
-"Content-Transfer-Encoding: 8bit\n"
-"X-Launchpad-Export-Date: 2014-08-15 06:50+0000\n"
-"X-Generator: Launchpad (build 17156)\n"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,help:account_check_writing.action_write_check
-msgid ""
-"<p class=\"oe_view_nocontent_create\">\n"
-"                Click to create a new check. \n"
-"              </p><p>\n"
-"                The check payment form allows you to track the payment you "
-"do\n"
-"                to your suppliers using checks. When you select a supplier, "
-"the\n"
-"                payment method and an amount for the payment, Odoo will\n"
-"                propose to reconcile your payment with the open supplier\n"
-"                invoices or bills.\n"
-"              </p>\n"
-"            "
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_voucher
-msgid "Accounting Voucher"
-msgstr "手工憑證"
-
-#. module: account_check_writing
-#: field:account.voucher,allow_check:0
-msgid "Allow Check Writing"
-msgstr "允許開支票"
-
-#. module: account_check_writing
-#: field:account.journal,allow_check_writing:0
-msgid "Allow Check writing"
-msgstr "允許開支票"
-
-#. module: account_check_writing
-#: field:account.voucher,amount_in_word:0
-msgid "Amount in Word"
-msgstr "金額大寫"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-msgid "Cancel"
-msgstr "取消"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: model:ir.actions.report.xml,name:account_check_writing.action_report_check
-msgid "Check"
-msgstr "支票"
-
-#. module: account_check_writing
-#: field:res.company,check_layout:0
-msgid "Check Layout"
-msgstr "支票格式"
-
-#. module: account_check_writing
-#: help:account.journal,use_preprint_check:0
-msgid "Check if you use a preformated sheet for check"
-msgstr ""
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check in middle"
-msgstr "支票位於中間"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on Top"
-msgstr "支票位於頂部"
-
-#. module: account_check_writing
-#: selection:res.company,check_layout:0
-msgid "Check on bottom"
-msgstr "支票位於底部"
-
-#. module: account_check_writing
-#: help:res.company,check_layout:0
-msgid ""
-"Check on top is compatible with Quicken, QuickBooks and Microsoft Money. "
-"Check in middle is compatible with Peachtree, ACCPAC and DacEasy. Check on "
-"bottom is compatible with Peachtree, ACCPAC and DacEasy only"
-msgstr ""
-"支票位於頂部與Quicken, QuickBooks 和 Microsoft Money兼容。支票位於中間與Peachtree, ACCPAC 和 "
-"DacEasy兼容。支票位於底部只與Peachtree, ACCPAC 和 DacEasy兼容。"
-
-#. module: account_check_writing
-#: help:account.journal,allow_check_writing:0
-msgid "Check this if the journal is to be used for writing checks."
-msgstr "如果這個帳簿用於開支票，請勾選這裡。"
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_res_company
-msgid "Companies"
-msgstr "公司"
-
-#. module: account_check_writing
-#: field:account.check.write,create_uid:0
-msgid "Created by"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,create_date:0
-msgid "Created on"
-msgstr ""
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Description"
-msgstr "描述"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Discount"
-msgstr "折扣"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Due Date"
-msgstr "到期日期"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "Error!"
-msgstr "錯誤！"
-
-#. module: account_check_writing
-#: field:account.check.write,id:0
-#: field:report.account_check_writing.report_check,id:0
-msgid "ID"
-msgstr ""
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_journal
-msgid "Journal"
-msgstr "帳簿"
-
-#. module: account_check_writing
-#: field:account.check.write,write_uid:0
-msgid "Last Updated by"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,write_date:0
-msgid "Last Updated on"
-msgstr ""
-
-#. module: account_check_writing
-#: field:account.check.write,check_number:0
-msgid "Next Check Number"
-msgstr "下一個支票號碼"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "No check selected "
-msgstr ""
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
-#, python-format
-msgid "One of the printed check already got a number."
-msgstr "已列印的支票中有一張已有號碼。"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Open Balance"
-msgstr "期初餘額"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Original Amount"
-msgstr "原始金額"
-
-#. module: account_check_writing
-#: view:website:account_check_writing.report_check
-msgid "Payment"
-msgstr "付款"
-
-#. module: account_check_writing
-#: model:ir.model,name:account_check_writing.model_account_check_write
-msgid "Prin Check in Batch"
-msgstr "整批列印支票"
-
-#. module: account_check_writing
-#: view:account.check.write:account_check_writing.view_account_check_write
-#: view:account.voucher:account_check_writing.view_vendor_payment_check_form
-msgid "Print Check"
-msgstr "列印支票"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_account_check_write
-msgid "Print Check in Batch"
-msgstr "整批列印支票"
-
-#. module: account_check_writing
-#: code:addons/account_check_writing/account_voucher.py:77
-#, python-format
-msgid "Printing error"
-msgstr ""
-
-#. module: account_check_writing
-#: help:account.check.write,check_number:0
-msgid "The number of the next check number to be printed."
-msgstr "下一張列印的支票的號碼"
-
-#. module: account_check_writing
-#: field:account.journal,use_preprint_check:0
-msgid "Use Preprinted Check"
-msgstr "使用套表列印的支票"
-
-#. module: account_check_writing
-#: model:ir.actions.act_window,name:account_check_writing.action_write_check
-#: model:ir.ui.menu,name:account_check_writing.menu_action_write_check
-msgid "Write Checks"
-msgstr "開支票"
diff --git a/addons/account_check_writing/report/__init__.py b/addons/account_check_writing/report/__init__.py
deleted file mode 100644
index 03c7cbe..0000000
--- a/addons/account_check_writing/report/__init__.py
+++ /dev/null
@@ -1,22 +0,0 @@
-# -*- coding: utf-8 -*-
-##############################################################################
-#
-#    OpenERP, Open Source Management Solution
-#    Copyright (C) 2004-2010 Tiny SPRL (<http://tiny.be>).
-#
-#    This program is free software: you can redistribute it and/or modify
-#    it under the terms of the GNU Affero General Public License as
-#    published by the Free Software Foundation, either version 3 of the
-#    License, or (at your option) any later version.
-#
-#    This program is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU Affero General Public License for more details.
-#
-#    You should have received a copy of the GNU Affero General Public License
-#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
-#
-##############################################################################
-
-import check_print
diff --git a/addons/account_check_writing/report/check_print.py b/addons/account_check_writing/report/check_print.py
deleted file mode 100644
index e67d334..0000000
--- a/addons/account_check_writing/report/check_print.py
+++ /dev/null
@@ -1,73 +0,0 @@
-# -*- coding: utf-8 -*-
-##############################################################################
-#
-#    OpenERP, Open Source Management Solution
-#    Copyright (C) 2004-2010 Tiny SPRL (<http://tiny.be>).
-#
-#    This program is free software: you can redistribute it and/or modify
-#    it under the terms of the GNU Affero General Public License as
-#    published by the Free Software Foundation, either version 3 of the
-#    License, or (at your option) any later version.
-#
-#    This program is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU Affero General Public License for more details.
-#
-#    You should have received a copy of the GNU Affero General Public License
-#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
-#
-##############################################################################
-
-import time
-from openerp.osv import osv
-from openerp.report import report_sxw
-
-
-class report_print_check(report_sxw.rml_parse):
-    def __init__(self, cr, uid, name, context):
-        super(report_print_check, self).__init__(cr, uid, name, context)
-        self.number_lines = 0
-        self.number_add = 0
-        self.localcontext.update({
-            'time': time,
-            'get_lines': self.get_lines,
-            'fill_stars' : self.fill_stars,
-        })
-
-    def fill_stars(self, amount):
-        if len(amount) < 100:
-            stars = 100 - len(amount)
-            return ' '.join([amount,'*'*stars])
-
-        else: return amount
-
-    def get_lines(self, voucher_lines):
-        result = []
-        self.number_lines = len(voucher_lines)
-        for i in range(0, min(10,self.number_lines)):
-            if i < self.number_lines:
-                res = {
-                    'date_due' : voucher_lines[i].date_due,
-                    'name' : voucher_lines[i].name,
-                    'amount_original' : voucher_lines[i].amount_original and voucher_lines[i].amount_original or False,
-                    'amount_unreconciled' : voucher_lines[i].amount_unreconciled and voucher_lines[i].amount_unreconciled or False,
-                    'amount' : voucher_lines[i].amount and voucher_lines[i].amount or False,
-                }
-            else :
-                res = {
-                    'date_due' : False,
-                    'name' : False,
-                    'amount_original' : False,
-                    'amount_due' : False,
-                    'amount' : False,
-                }
-            result.append(res)
-        return result
-
-
-class report_check(osv.AbstractModel):
-    _name = 'report.account_check_writing.report_check'
-    _inherit = 'report.abstract_report'
-    _template = 'account_check_writing.report_check'
-    _wrapped_report_class = report_print_check
diff --git a/addons/account_check_writing/static/description/icon.png b/addons/account_check_writing/static/description/icon.png
new file mode 100644
index 0000000..3c06aa8
Binary files /dev/null and b/addons/account_check_writing/static/description/icon.png differ
diff --git a/addons/account_check_writing/tests/__init__.py b/addons/account_check_writing/tests/__init__.py
new file mode 100644
index 0000000..2f14574
--- /dev/null
+++ b/addons/account_check_writing/tests/__init__.py
@@ -0,0 +1 @@
+from . import test_check_writing
diff --git a/addons/account_check_writing/tests/test_check_writing.py b/addons/account_check_writing/tests/test_check_writing.py
new file mode 100644
index 0000000..32c95be
--- /dev/null
+++ b/addons/account_check_writing/tests/test_check_writing.py
@@ -0,0 +1,58 @@
+from openerp.addons.account.tests.account_test_classes import AccountingTestCase
+import time
+
+class TestCheckWriting(AccountingTestCase):
+
+    def setUp(self):
+        super(TestCheckWriting, self).setUp()
+        self.invoice_model = self.env['account.invoice']
+        self.invoice_line_model = self.env['account.invoice.line']
+        self.register_payments_model = self.env['account.register.payments']
+
+        self.partner_axelor = self.env.ref("base.res_partner_13")
+        self.product = self.env.ref("product.product_product_4")
+        self.payment_method_check = self.env.ref("account_check_writing.account_payment_method_check_writing")
+
+        self.account_payable = self.env['account.account'].search([('user_type', '=', self.env.ref('account.data_account_type_payable').id)])[0]
+        self.account_expenses = self.env['account.account'].search([('user_type', '=', self.env.ref('account.data_account_type_expenses').id)])[0]
+
+        self.bank = self.env['res.partner.bank'].create({'acc_number': '0123456789', 'bank_name': 'Test Bank', 'company_id': self.env.user.company_id.id})
+        self.bank_journal = self.bank.journal_id
+
+    def create_invoice(self, amount=100, is_refund=False):
+        invoice = self.invoice_model.create({
+            'partner_id': self.partner_axelor.id,
+            'reference_type': 'none',
+            'name': is_refund and "Supplier Refund" or "Supplier Invoice",
+            'type': is_refund and "in_refund" or "in_invoice",
+            'account_id': self.account_payable.id,
+            'date_invoice': time.strftime('%Y') + '-06-26',
+        })
+        self.invoice_line_model.create({
+            'product_id': self.product.id,
+            'quantity': 1,
+            'price_unit': is_refund and amount/4 or amount,
+            'invoice_id': invoice.id,
+            'name': 'something',
+            'account_id': self.account_expenses.id,
+        })
+        invoice.signal_workflow('invoice_open')
+        return invoice
+
+    def create_payment(self, invoices):
+        register_payments = self.register_payments_model.with_context({
+            'active_model': 'account.invoice',
+            'active_ids': invoices.ids
+        }).create({
+            'payment_date': time.strftime('%Y') + '-07-15',
+            'journal_id': self.bank_journal.id,
+            'payment_method': self.payment_method_check.id,
+        })
+        register_payments.create_payment()
+        return self.env['account.payment'].search([], order="id desc", limit=1)
+
+    def test_send_check(self):
+        # Create a payment and 'send' the check
+        payment = self.create_payment(self.create_invoice())
+        payment.send_checks()
+        self.assertEqual(payment.state, 'sent')
diff --git a/addons/account_check_writing/views/account_journal_view.xml b/addons/account_check_writing/views/account_journal_view.xml
new file mode 100644
index 0000000..27addfe
--- /dev/null
+++ b/addons/account_check_writing/views/account_journal_view.xml
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="utf-8"?>
+<openerp>
+    <data>
+        <record id="view_account_journal_form_inherited" model="ir.ui.view">
+            <field name="name">account.journal.form.inherited</field>
+            <field name="model">account.journal</field>
+            <field name="inherit_id" ref="account.view_account_journal_form" />
+            <field name="arch" type="xml">
+                <xpath expr="//page[@name='advanced_settings']/group" position="inside">
+                    <group string="Check Writing" attrs="{'invisible': [('check_writing_payment_method_selected', '=', False)]}">
+                        <field name="check_writing_payment_method_selected" invisible="1"/>
+                        <field name="check_sequence_id" invisible="1"/>
+                        <field name="check_manual_sequencing"/>
+                        <field name="check_next_number" attrs="{'invisible': [('check_manual_sequencing', '=', False)]}"/>
+                    </group>
+                </xpath>
+            </field>
+        </record>
+    </data>
+</openerp>
diff --git a/addons/account_check_writing/views/account_payment_view.xml b/addons/account_check_writing/views/account_payment_view.xml
new file mode 100644
index 0000000..e0b983e
--- /dev/null
+++ b/addons/account_check_writing/views/account_payment_view.xml
@@ -0,0 +1,52 @@
+<?xml version="1.0" encoding="utf-8"?>
+<openerp>
+    <data>
+        <record id="view_account_payment_form_inherited" model="ir.ui.view">
+            <field name="name">account.payment.form.inherited</field>
+            <field name="model">account.payment</field>
+            <field name="inherit_id" ref="account.view_account_payment_form" />
+            <field name="arch" type="xml">
+                <xpath expr="//button[@name='post']" position="before">
+                    <button name="send_checks" class="oe_highlight" attrs="{'invisible': ['|', ('payment_method_code', '!=', 'check_writing'), ('state', 'not in', ('posted', 'sent'))]}" string="Send Check" type="object"/>
+                </xpath>
+                <xpath expr="//div[@name='amount_div']" position="after">
+                    <field name="check_amount_in_words" attrs="{'invisible': [('payment_method_code', '!=', 'check_writing')], 'readonly': [('state', '!=', 'draft')]}"/>
+                </xpath>
+                <xpath expr="//field[@name='communication']" position="after">
+                    <field name="check_manual_sequencing" invisible="1"/>
+                    <field name="check_number" attrs="{'invisible': ['|', ('payment_method_code', '!=', 'check_writing'), ('check_manual_sequencing', '=', False)]}"/>
+                </xpath>
+            </field>
+        </record>
+
+        <record id="view_account_payment_invoice_form_inherited" model="ir.ui.view">
+            <field name="name">account.payment.invoice.form.inherited</field>
+            <field name="model">account.payment</field>
+            <field name="inherit_id" ref="account.view_account_payment_invoice_form" />
+            <field name="arch" type="xml">
+                <xpath expr="//div[@name='amount_div']" position="after">
+                    <field name="check_amount_in_words" attrs="{'invisible': [('payment_method_code', '!=', 'check_writing')]}"/>
+                </xpath>
+                <xpath expr="//field[@name='communication']" position="after">
+                    <field name="check_manual_sequencing" invisible="1"/>
+                    <field name="check_number" attrs="{'invisible': ['|', ('payment_method_code', '!=', 'check_writing'), ('check_manual_sequencing', '=', False)]}"/>
+                </xpath>
+            </field>
+        </record>
+
+        <record id="view_account_payment_from_invoices_inherited" model="ir.ui.view">
+            <field name="name">account.register.payments.wizard.inherited</field>
+            <field name="model">account.register.payments</field>
+            <field name="inherit_id" ref="account.view_account_payment_from_invoices" />
+            <field name="arch" type="xml">
+                <xpath expr="//field[@name='amount']" position="after">
+                    <field name="check_amount_in_words" attrs="{'invisible': [('payment_method_code', '!=', 'check_writing')]}"/>
+                </xpath>
+                <xpath expr="//field[@name='communication']" position="after">
+                    <field name="check_manual_sequencing" invisible="1"/>
+                    <field name="check_number" attrs="{'invisible': ['|', ('payment_method_code', '!=', 'check_writing'), ('check_manual_sequencing', '=', False)]}"/>
+                </xpath>
+            </field>
+        </record>
+    </data>
+</openerp>
diff --git a/addons/account_check_writing/views/report_check.xml b/addons/account_check_writing/views/report_check.xml
deleted file mode 100644
index d740de1..0000000
--- a/addons/account_check_writing/views/report_check.xml
+++ /dev/null
@@ -1,48 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<openerp>
-<data>
-<template id="report_check">
-    <t t-call="report.html_container">
-        <t t-foreach="docs" t-as="o">
-            <!-- This report is (obviously) a work in progress -->
-            <div class="page">
-                <address t-field="o.partner_id"
-                    t-field-options='{"widget": "contact", "fields": ["address", "name"], "no_marker": true, "no_tag_br": true}' />
-
-                <span t-esc="formatLang(o.date , date=True)"/><br/>
-                <span t-field="o.amount"
-                    t-field-options='{"widget": "monetary", "display_currency": "o.currency_id"}'/><br/>
-                <span t-esc="fill_stars(o.amount_in_word)"/>
-
-                <table class="table table-condensed">
-                    <thead>
-                        <tr>
-                            <th>Due Date</th>
-                            <th>Description</th>
-                            <th>Original Amount</th>
-                            <th>Open Balance</th>
-                            <th>Discount</th>
-                            <th>Payment</th>
-                        </tr>
-                    </thead>
-                    <tbody>
-                        <tr t-foreach="get_lines(o.line_dr_ids)" t-as="l">
-                            <td>
-                                <p t-if="l['date_due']">
-                                    <span t-esc="formatLang(l['date_due'], date=True)"/>
-                                </p>
-                            </td>
-                            <td class="text-right"><span t-esc="l['name']"/></td>
-                            <td class="text-right"><span t-esc="formatLang(l['amount_original'])"/></td>
-                            <td class="text-right"><span t-esc="formatLang(l['amount_unreconciled'])"/></td>
-                            <td class="text-right"></td>
-                            <td class="text-right"><span t-esc="formatLang(l['amount'])"/></td>
-                        </tr>
-                    </tbody>
-                </table>
-            </div>
-        </t>
-    </t>
-</template>
-</data>
-</openerp>
diff --git a/addons/account_check_writing/wizard/__init__.py b/addons/account_check_writing/wizard/__init__.py
deleted file mode 100644
index 736c994..0000000
--- a/addons/account_check_writing/wizard/__init__.py
+++ /dev/null
@@ -1,22 +0,0 @@
-# -*- coding: utf-8 -*-
-##############################################################################
-#
-#    OpenERP, Open Source Management Solution
-#    Copyright (C) 2004-2010 Tiny SPRL (<http://tiny.be>).
-#
-#    This program is free software: you can redistribute it and/or modify
-#    it under the terms of the GNU Affero General Public License as
-#    published by the Free Software Foundation, either version 3 of the
-#    License, or (at your option) any later version.
-#
-#    This program is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU Affero General Public License for more details.
-#
-#    You should have received a copy of the GNU Affero General Public License
-#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
-#
-##############################################################################
-
-import account_check_batch_printing
diff --git a/addons/account_check_writing/wizard/account_check_batch_printing.py b/addons/account_check_writing/wizard/account_check_batch_printing.py
deleted file mode 100644
index 21e5704..0000000
--- a/addons/account_check_writing/wizard/account_check_batch_printing.py
+++ /dev/null
@@ -1,75 +0,0 @@
-# -*- coding: utf-8 -*-
-##############################################################################
-#
-#    OpenERP, Open Source Management Solution
-#    Copyright (C) 2004-2010 Tiny SPRL (<http://tiny.be>).
-#
-#    This program is free software: you can redistribute it and/or modify
-#    it under the terms of the GNU Affero General Public License as
-#    published by the Free Software Foundation, either version 3 of the
-#    License, or (at your option) any later version.
-#
-#    This program is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU Affero General Public License for more details.
-#
-#    You should have received a copy of the GNU Affero General Public License
-#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
-#
-##############################################################################
-
-from openerp.tools.translate import _
-from openerp.osv import fields, osv
-from openerp.exceptions import UserError
-
-
-class account_check_write(osv.osv_memory):
-    _name = 'account.check.write'
-    _description = 'Prin Check in Batch'
-
-    _columns = {
-        'check_number': fields.integer('Next Check Number', required=True, help="The number of the next check number to be printed."),
-    }
-
-    def _get_next_number(self, cr, uid, context=None):
-        dummy, sequence_id = self.pool.get('ir.model.data').get_object_reference(cr, uid, 'account_check_writing', 'sequence_check_number')
-        return self.pool.get('ir.sequence').read(cr, uid, [sequence_id], ['number_next'])[0]['number_next']
-
-    _defaults = {
-        'check_number': _get_next_number,
-   }
-
-    def print_check_write(self, cr, uid, ids, context=None):
-        if context is None:
-            context = {}
-        voucher_obj = self.pool.get('account.voucher')
-        ir_sequence_obj = self.pool.get('ir.sequence')
-
-        #update the sequence to number the checks from the value encoded in the wizard
-        dummy, sequence_id = self.pool.get('ir.model.data').get_object_reference(cr, uid, 'account_check_writing', 'sequence_check_number')
-        increment = ir_sequence_obj.read(cr, uid, [sequence_id], ['number_increment'])[0]['number_increment']
-        new_value = self.browse(cr, uid, ids[0], context=context).check_number
-        ir_sequence_obj.write(cr, uid, sequence_id, {'number_next': new_value})
-
-        #validate the checks so that they get a number
-        voucher_ids = context.get('active_ids', [])
-        for check in voucher_obj.browse(cr, uid, voucher_ids, context=context):
-            new_value += increment
-            if check.number:
-                raise UserError(_("One of the printed check already got a number."))
-        voucher_obj.proforma_voucher(cr, uid, voucher_ids, context=context)
-
-        #update the sequence again (because the assignation using next_val was made during the same transaction of
-        #the first update of sequence)
-        ir_sequence_obj.write(cr, uid, sequence_id, {'number_next': new_value})
-
-        #print the checks
-        data = {
-            'id': voucher_ids and voucher_ids[0],
-            'ids': voucher_ids,
-        }
-
-        return self.pool['report'].get_action(
-            cr, uid, [], 'account_check_writing.report_check', data=data, context=context
-        )
diff --git a/addons/account_check_writing/wizard/account_check_batch_printing_view.xml b/addons/account_check_writing/wizard/account_check_batch_printing_view.xml
deleted file mode 100644
index 5a5d45a..0000000
--- a/addons/account_check_writing/wizard/account_check_batch_printing_view.xml
+++ /dev/null
@@ -1,28 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<openerp>
-    <data noupdate="0">
-
-        <record id="view_account_check_write" model="ir.ui.view">
-            <field name="name">account.check.form</field>
-            <field name="model">account.check.write</field>
-            <field name="arch" type="xml">
-                <form string="Check">
-                    <group col="4">
-                        <field name="check_number"/>
-                    </group>
-                    <footer>
-                        <button name="print_check_write" string="Print Check" type="object" class="oe_highlight"/> or
-                        <button string="Cancel" class="oe_link" special="cancel"/>
-                    </footer>
-                </form>
-            </field>
-        </record>
-
-        <act_window id="action_account_check_write"
-            multi="True"
-            name="Print Check in Batch"
-            res_model="account.check.write" src_model="account.voucher"
-            view_mode="form" target="new" view_type="form" /> 
-
-    </data>
-</openerp>
diff --git a/addons/account_sepa/__init__.py b/addons/account_sepa/__init__.py
new file mode 100644
index 0000000..4fb1f5c
--- /dev/null
+++ b/addons/account_sepa/__init__.py
@@ -0,0 +1,6 @@
+# -*- coding: utf-8 -*-
+
+import res_company
+import account_journal
+import account_payment
+import sepa_credit_transfer
diff --git a/addons/account_sepa/__openerp__.py b/addons/account_sepa/__openerp__.py
new file mode 100644
index 0000000..f1eeac6
--- /dev/null
+++ b/addons/account_sepa/__openerp__.py
@@ -0,0 +1,21 @@
+# -*- coding: utf-8 -*-
+{
+    'name': "SEPA Credit Transfer",
+    'summary': """Export payments as SEPA Credit Transfer files""",
+    'description': """
+        Generate payment orders as pain.001.001.03 messages. The generated XML file can then be uploaded to your bank.
+
+        This module follow the implementation guidelines issued by the European Payment Council.
+        For more informations about the SEPA standards : http://www.iso20022.org/ and http://www.europeanpaymentscouncil.eu/
+    """,
+    'author': "Odoo SA",
+    'category': 'Accounting &amp; Finance',
+    'version': '1.0',
+    'depends': ['account_accountant', 'base_iban'],
+    'data': [
+        'data/sepa.xml',
+        'views/sepa_credit_transfer_view.xml',
+        'views/account_payment.xml',
+        'views/res_company_view.xml',
+    ],
+}
diff --git a/addons/account_sepa/account_journal.py b/addons/account_sepa/account_journal.py
new file mode 100644
index 0000000..6e4c896
--- /dev/null
+++ b/addons/account_sepa/account_journal.py
@@ -0,0 +1,18 @@
+# -*- coding: utf-8 -*-
+
+from openerp import models, fields, api, _
+
+class AccountJournal(models.Model):
+    _inherit = "account.journal"
+
+    def _default_outbound_payment_methods(self):
+        vals = super(AccountJournal, self)._default_outbound_payment_methods()
+        return vals + [(4, self.env.ref('account_sepa.account_payment_method_sepa_ct').id, None)]
+
+    @api.model
+    def _enable_sepa_ct_on_bank_journals(self):
+        """ Enables sepa credit transfer payment method on bank journals. Called upon module installation via data file.
+        """
+        sepa_ct = self.env.ref('account_sepa.account_payment_method_sepa_ct')
+        for bank_journal in self.search([('type', '=', 'bank')]):
+            bank_journal.write({'outbound_payment_methods': [(4, sepa_ct.id, None)]})
diff --git a/addons/account_sepa/account_payment.py b/addons/account_sepa/account_payment.py
new file mode 100644
index 0000000..633186b
--- /dev/null
+++ b/addons/account_sepa/account_payment.py
@@ -0,0 +1,47 @@
+# -*- coding: utf-8 -*-
+
+import re
+
+from openerp import models, fields, api, _
+from openerp.exceptions import ValidationError
+from sepa_credit_transfer import check_valid_SEPA_str
+
+
+class AccountRegisterPayments(models.TransientModel):
+    _inherit = "account.register.payments"
+
+    partner_bank_account_id = fields.Many2one('res.partner.bank', string="Recipient Bank Account")
+
+    @api.onchange('partner_id')
+    def _onchange_partner_id(self):
+        if hasattr(super(AccountRegisterPayments, self), '_onchange_partner_id'):
+            super(AccountRegisterPayments, self)._onchange_partner_id()
+        if self.partner_id and len(self.partner_id.bank_ids) > 0:
+            self.partner_bank_account_id = self.partner_id.bank_ids[0]
+
+    @api.multi
+    def get_payment_vals(self):
+        res = super(AccountRegisterPayments, self).get_payment_vals()
+        res.update({'partner_bank_account_id': self.partner_bank_account_id})
+        return res
+
+class AccountPayment(models.Model):
+    _inherit = "account.payment"
+
+    partner_bank_account_id = fields.Many2one('res.partner.bank', string="Recipient Bank Account")
+
+    def _check_communication(self, payment_method_id, communication):
+        super(AccountPayment, self)._check_communication(payment_method_id, communication)
+        if payment_method_id == self.env.ref('account_sepa.account_payment_method_sepa_ct').id:
+            if not communication:
+                return
+            if len(communication) > 140:
+                raise ValidationError(_("A SEPA communication cannot exceed 140 characters"))
+            check_valid_SEPA_str(communication)
+
+    @api.onchange('partner_id')
+    def _onchange_partner_id(self):
+        if hasattr(super(AccountPayment, self), '_onchange_partner_id'):
+            super(AccountPayment, self)._onchange_partner_id()
+        if self.partner_id and len(self.partner_id.bank_ids) > 0:
+            self.partner_bank_account_id = self.partner_id.bank_ids[0]
diff --git a/addons/account_sepa/data/sepa.xml b/addons/account_sepa/data/sepa.xml
new file mode 100644
index 0000000..016c044
--- /dev/null
+++ b/addons/account_sepa/data/sepa.xml
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="utf-8"?>
+<openerp>
+    <data noupdate="1">
+
+        <record id="account_payment_method_sepa_ct" model="account.payment.method">
+            <field name="name">SEPA Credit Transfer</field>
+            <field name="code">sepa_ct</field>
+            <field name="payment_type">outbound</field>
+        </record>
+
+        <function model="account.journal" name="_enable_sepa_ct_on_bank_journals"/>
+        <function model="res.company" name="_set_default_sepa_origid_on_existing_companies"/>
+    </data>
+</openerp>
diff --git a/addons/account_sepa/res_company.py b/addons/account_sepa/res_company.py
new file mode 100644
index 0000000..43d8b6c
--- /dev/null
+++ b/addons/account_sepa/res_company.py
@@ -0,0 +1,55 @@
+# -*- coding: utf-8 -*-
+
+from openerp import models, fields, api, _
+from sepa_credit_transfer import check_valid_SEPA_str
+
+class ResCompany(models.Model):
+    _inherit = "res.company"
+
+    # TODO : complete methods _default_sepa_origid_id and _default_sepa_origid_issr for all countries of the SEPA
+
+    def _default_sepa_origid_issr(self):
+        """ Set default value for the field sepa_orgid_issr, which correspond to the field 'Issuer'
+            of an 'OrganisationIdentification', as described in ISO 20022.
+        """
+        if self.partner_id.country_id.code == 'BE':
+            return 'KBO-BCE'
+
+    def _default_sepa_origid_id(self):
+        """ Set default value for the fields sepa_orgid_id, which correspond to the field 'Identification'
+            of an 'OrganisationIdentification', as described in ISO 20022.
+        """
+        if self.partner_id.country_id.code == 'BE' and self.partner_id.vat:
+            return self.partner_id.vat[:2].upper() + self.partner_id.vat[2:].replace(' ', '')
+
+    sepa_orgid_id = fields.Char('Identification', size=35, copy=False,
+        help="Identification assigned by an institution (eg. VAT number).")
+    sepa_orgid_issr = fields.Char('Issuer', size=35, copy=False,
+        help="Entity that assigns the identification (eg. KBE-BCO or Finanzamt Muenchen IV).")
+    sepa_initiating_party_name = fields.Char('Initiating Party', size=70, copy=False, default=lambda self: self.env.user.company_id.name,
+        help="Will appear in SEPA payments as the name of the party initiating the payment.")
+
+    @api.one
+    @api.constrains('sepa_orgid_id', 'sepa_orgid_issr', 'sepa_initiating_party_name')
+    def _check_sepa_fields(self):
+        if self.sepa_orgid_id:
+            check_valid_SEPA_str(self.sepa_orgid_id)
+        if self.sepa_orgid_issr:
+            check_valid_SEPA_str(self.sepa_orgid_issr)
+        if self.sepa_initiating_party_name:
+            check_valid_SEPA_str(self.sepa_initiating_party_name)
+
+    @api.onchange('country_id')
+    def _onchange_country(self):
+        if hasattr(super(ResCompany, self), '_onchange_country'):
+            super(ResCompany, self)._onchange_country()
+        if not self.sepa_orgid_id:
+            self.sepa_orgid_id = self._default_sepa_origid_id()
+        if not self.sepa_orgid_issr:
+            self.sepa_orgid_issr = self._default_sepa_origid_issr()
+
+    @api.model
+    def _set_default_sepa_origid_on_existing_companies(self):
+        for company in self.search([]):
+            company.sepa_orgid_id = company._default_sepa_origid_id()
+            company.sepa_orgid_issr = company._default_sepa_origid_issr()
diff --git a/addons/account_sepa/schemas/pain.001.001.03.xsd b/addons/account_sepa/schemas/pain.001.001.03.xsd
new file mode 100644
index 0000000..a4fe903
--- /dev/null
+++ b/addons/account_sepa/schemas/pain.001.001.03.xsd
@@ -0,0 +1,920 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<xs:schema xmlns="urn:iso:std:iso:20022:tech:xsd:pain.001.001.03" xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="urn:iso:std:iso:20022:tech:xsd:pain.001.001.03">
+    <xs:element name="Document" type="Document"/>
+    <xs:complexType name="AccountIdentification4Choice">
+        <xs:sequence>
+            <xs:choice>
+                <xs:element name="IBAN" type="IBAN2007Identifier"/>
+                <xs:element name="Othr" type="GenericAccountIdentification1"/>
+            </xs:choice>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:complexType name="AccountSchemeName1Choice">
+        <xs:sequence>
+            <xs:choice>
+                <xs:element name="Cd" type="ExternalAccountIdentification1Code"/>
+                <xs:element name="Prtry" type="Max35Text"/>
+            </xs:choice>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:simpleType name="ActiveOrHistoricCurrencyAndAmount_SimpleType">
+        <xs:restriction base="xs:decimal">
+            <xs:minInclusive value="0"/>
+            <xs:fractionDigits value="5"/>
+            <xs:totalDigits value="18"/>
+        </xs:restriction>
+    </xs:simpleType>
+    <xs:complexType name="ActiveOrHistoricCurrencyAndAmount">
+        <xs:simpleContent>
+            <xs:extension base="ActiveOrHistoricCurrencyAndAmount_SimpleType">
+                <xs:attribute name="Ccy" type="ActiveOrHistoricCurrencyCode" use="required"/>
+            </xs:extension>
+        </xs:simpleContent>
+    </xs:complexType>
+    <xs:simpleType name="ActiveOrHistoricCurrencyCode">
+        <xs:restriction base="xs:string">
+            <xs:pattern value="[A-Z]{3,3}"/>
+        </xs:restriction>
+    </xs:simpleType>
+    <xs:simpleType name="AddressType2Code">
+        <xs:restriction base="xs:string">
+            <xs:enumeration value="ADDR"/>
+            <xs:enumeration value="PBOX"/>
+            <xs:enumeration value="HOME"/>
+            <xs:enumeration value="BIZZ"/>
+            <xs:enumeration value="MLTO"/>
+            <xs:enumeration value="DLVY"/>
+        </xs:restriction>
+    </xs:simpleType>
+    <xs:complexType name="AmountType3Choice">
+        <xs:sequence>
+            <xs:choice>
+                <xs:element name="InstdAmt" type="ActiveOrHistoricCurrencyAndAmount"/>
+                <xs:element name="EqvtAmt" type="EquivalentAmount2"/>
+            </xs:choice>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:simpleType name="AnyBICIdentifier">
+        <xs:restriction base="xs:string">
+            <xs:pattern value="[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}"/>
+        </xs:restriction>
+    </xs:simpleType>
+    <xs:complexType name="Authorisation1Choice">
+        <xs:sequence>
+            <xs:choice>
+                <xs:element name="Cd" type="Authorisation1Code"/>
+                <xs:element name="Prtry" type="Max128Text"/>
+            </xs:choice>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:simpleType name="Authorisation1Code">
+        <xs:restriction base="xs:string">
+            <xs:enumeration value="AUTH"/>
+            <xs:enumeration value="FDET"/>
+            <xs:enumeration value="FSUM"/>
+            <xs:enumeration value="ILEV"/>
+        </xs:restriction>
+    </xs:simpleType>
+    <xs:simpleType name="BICIdentifier">
+        <xs:restriction base="xs:string">
+            <xs:pattern value="[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}"/>
+        </xs:restriction>
+    </xs:simpleType>
+    <xs:simpleType name="BaseOneRate">
+        <xs:restriction base="xs:decimal">
+            <xs:fractionDigits value="10"/>
+            <xs:totalDigits value="11"/>
+        </xs:restriction>
+    </xs:simpleType>
+    <xs:simpleType name="BatchBookingIndicator">
+        <xs:restriction base="xs:boolean"/>
+    </xs:simpleType>
+    <xs:complexType name="BranchAndFinancialInstitutionIdentification4">
+        <xs:sequence>
+            <xs:element name="FinInstnId" type="FinancialInstitutionIdentification7"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="BrnchId" type="BranchData2"/>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:complexType name="BranchData2">
+        <xs:sequence>
+            <xs:element maxOccurs="1" minOccurs="0" name="Id" type="Max35Text"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="Nm" type="Max140Text"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="PstlAdr" type="PostalAddress6"/>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:complexType name="CashAccount16">
+        <xs:sequence>
+            <xs:element name="Id" type="AccountIdentification4Choice"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="Tp" type="CashAccountType2"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="Ccy" type="ActiveOrHistoricCurrencyCode"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="Nm" type="Max70Text"/>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:complexType name="CashAccountType2">
+        <xs:sequence>
+            <xs:choice>
+                <xs:element name="Cd" type="CashAccountType4Code"/>
+                <xs:element name="Prtry" type="Max35Text"/>
+            </xs:choice>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:simpleType name="CashAccountType4Code">
+        <xs:restriction base="xs:string">
+            <xs:enumeration value="CASH"/>
+            <xs:enumeration value="CHAR"/>
+            <xs:enumeration value="COMM"/>
+            <xs:enumeration value="TAXE"/>
+            <xs:enumeration value="CISH"/>
+            <xs:enumeration value="TRAS"/>
+            <xs:enumeration value="SACC"/>
+            <xs:enumeration value="CACC"/>
+            <xs:enumeration value="SVGS"/>
+            <xs:enumeration value="ONDP"/>
+            <xs:enumeration value="MGLD"/>
+            <xs:enumeration value="NREX"/>
+            <xs:enumeration value="MOMA"/>
+            <xs:enumeration value="LOAN"/>
+            <xs:enumeration value="SLRY"/>
+            <xs:enumeration value="ODFT"/>
+        </xs:restriction>
+    </xs:simpleType>
+    <xs:complexType name="CategoryPurpose1Choice">
+        <xs:sequence>
+            <xs:choice>
+                <xs:element name="Cd" type="ExternalCategoryPurpose1Code"/>
+                <xs:element name="Prtry" type="Max35Text"/>
+            </xs:choice>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:simpleType name="ChargeBearerType1Code">
+        <xs:restriction base="xs:string">
+            <xs:enumeration value="DEBT"/>
+            <xs:enumeration value="CRED"/>
+            <xs:enumeration value="SHAR"/>
+            <xs:enumeration value="SLEV"/>
+        </xs:restriction>
+    </xs:simpleType>
+    <xs:complexType name="Cheque6">
+        <xs:sequence>
+            <xs:element maxOccurs="1" minOccurs="0" name="ChqTp" type="ChequeType2Code"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="ChqNb" type="Max35Text"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="ChqFr" type="NameAndAddress10"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="DlvryMtd" type="ChequeDeliveryMethod1Choice"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="DlvrTo" type="NameAndAddress10"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="InstrPrty" type="Priority2Code"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="ChqMtrtyDt" type="ISODate"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="FrmsCd" type="Max35Text"/>
+            <xs:element maxOccurs="2" minOccurs="0" name="MemoFld" type="Max35Text"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="RgnlClrZone" type="Max35Text"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="PrtLctn" type="Max35Text"/>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:simpleType name="ChequeDelivery1Code">
+        <xs:restriction base="xs:string">
+            <xs:enumeration value="MLDB"/>
+            <xs:enumeration value="MLCD"/>
+            <xs:enumeration value="MLFA"/>
+            <xs:enumeration value="CRDB"/>
+            <xs:enumeration value="CRCD"/>
+            <xs:enumeration value="CRFA"/>
+            <xs:enumeration value="PUDB"/>
+            <xs:enumeration value="PUCD"/>
+            <xs:enumeration value="PUFA"/>
+            <xs:enumeration value="RGDB"/>
+            <xs:enumeration value="RGCD"/>
+            <xs:enumeration value="RGFA"/>
+        </xs:restriction>
+    </xs:simpleType>
+    <xs:complexType name="ChequeDeliveryMethod1Choice">
+        <xs:sequence>
+            <xs:choice>
+                <xs:element name="Cd" type="ChequeDelivery1Code"/>
+                <xs:element name="Prtry" type="Max35Text"/>
+            </xs:choice>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:simpleType name="ChequeType2Code">
+        <xs:restriction base="xs:string">
+            <xs:enumeration value="CCHQ"/>
+            <xs:enumeration value="CCCH"/>
+            <xs:enumeration value="BCHQ"/>
+            <xs:enumeration value="DRFT"/>
+            <xs:enumeration value="ELDR"/>
+        </xs:restriction>
+    </xs:simpleType>
+    <xs:complexType name="ClearingSystemIdentification2Choice">
+        <xs:sequence>
+            <xs:choice>
+                <xs:element name="Cd" type="ExternalClearingSystemIdentification1Code"/>
+                <xs:element name="Prtry" type="Max35Text"/>
+            </xs:choice>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:complexType name="ClearingSystemMemberIdentification2">
+        <xs:sequence>
+            <xs:element maxOccurs="1" minOccurs="0" name="ClrSysId" type="ClearingSystemIdentification2Choice"/>
+            <xs:element name="MmbId" type="Max35Text"/>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:complexType name="ContactDetails2">
+        <xs:sequence>
+            <xs:element maxOccurs="1" minOccurs="0" name="NmPrfx" type="NamePrefix1Code"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="Nm" type="Max140Text"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="PhneNb" type="PhoneNumber"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="MobNb" type="PhoneNumber"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="FaxNb" type="PhoneNumber"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="EmailAdr" type="Max2048Text"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="Othr" type="Max35Text"/>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:simpleType name="CountryCode">
+        <xs:restriction base="xs:string">
+            <xs:pattern value="[A-Z]{2,2}"/>
+        </xs:restriction>
+    </xs:simpleType>
+    <xs:simpleType name="CreditDebitCode">
+        <xs:restriction base="xs:string">
+            <xs:enumeration value="CRDT"/>
+            <xs:enumeration value="DBIT"/>
+        </xs:restriction>
+    </xs:simpleType>
+    <xs:complexType name="CreditTransferTransactionInformation10">
+        <xs:sequence>
+            <xs:element name="PmtId" type="PaymentIdentification1"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="PmtTpInf" type="PaymentTypeInformation19"/>
+            <xs:element name="Amt" type="AmountType3Choice"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="XchgRateInf" type="ExchangeRateInformation1"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="ChrgBr" type="ChargeBearerType1Code"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="ChqInstr" type="Cheque6"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="UltmtDbtr" type="PartyIdentification32"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="IntrmyAgt1" type="BranchAndFinancialInstitutionIdentification4"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="IntrmyAgt1Acct" type="CashAccount16"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="IntrmyAgt2" type="BranchAndFinancialInstitutionIdentification4"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="IntrmyAgt2Acct" type="CashAccount16"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="IntrmyAgt3" type="BranchAndFinancialInstitutionIdentification4"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="IntrmyAgt3Acct" type="CashAccount16"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="CdtrAgt" type="BranchAndFinancialInstitutionIdentification4"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="CdtrAgtAcct" type="CashAccount16"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="Cdtr" type="PartyIdentification32"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="CdtrAcct" type="CashAccount16"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="UltmtCdtr" type="PartyIdentification32"/>
+            <xs:element maxOccurs="unbounded" minOccurs="0" name="InstrForCdtrAgt" type="InstructionForCreditorAgent1"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="InstrForDbtrAgt" type="Max140Text"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="Purp" type="Purpose2Choice"/>
+            <xs:element maxOccurs="10" minOccurs="0" name="RgltryRptg" type="RegulatoryReporting3"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="Tax" type="TaxInformation3"/>
+            <xs:element maxOccurs="10" minOccurs="0" name="RltdRmtInf" type="RemittanceLocation2"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="RmtInf" type="RemittanceInformation5"/>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:complexType name="CreditorReferenceInformation2">
+        <xs:sequence>
+            <xs:element maxOccurs="1" minOccurs="0" name="Tp" type="CreditorReferenceType2"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="Ref" type="Max35Text"/>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:complexType name="CreditorReferenceType1Choice">
+        <xs:sequence>
+            <xs:choice>
+                <xs:element name="Cd" type="DocumentType3Code"/>
+                <xs:element name="Prtry" type="Max35Text"/>
+            </xs:choice>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:complexType name="CreditorReferenceType2">
+        <xs:sequence>
+            <xs:element name="CdOrPrtry" type="CreditorReferenceType1Choice"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="Issr" type="Max35Text"/>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:complexType name="CustomerCreditTransferInitiationV03">
+        <xs:sequence>
+            <xs:element name="GrpHdr" type="GroupHeader32"/>
+            <xs:element maxOccurs="unbounded" minOccurs="1" name="PmtInf" type="PaymentInstructionInformation3"/>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:complexType name="DateAndPlaceOfBirth">
+        <xs:sequence>
+            <xs:element name="BirthDt" type="ISODate"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="PrvcOfBirth" type="Max35Text"/>
+            <xs:element name="CityOfBirth" type="Max35Text"/>
+            <xs:element name="CtryOfBirth" type="CountryCode"/>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:complexType name="DatePeriodDetails">
+        <xs:sequence>
+            <xs:element name="FrDt" type="ISODate"/>
+            <xs:element name="ToDt" type="ISODate"/>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:simpleType name="DecimalNumber">
+        <xs:restriction base="xs:decimal">
+            <xs:fractionDigits value="17"/>
+            <xs:totalDigits value="18"/>
+        </xs:restriction>
+    </xs:simpleType>
+    <xs:complexType name="Document">
+        <xs:sequence>
+            <xs:element name="CstmrCdtTrfInitn" type="CustomerCreditTransferInitiationV03"/>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:complexType name="DocumentAdjustment1">
+        <xs:sequence>
+            <xs:element name="Amt" type="ActiveOrHistoricCurrencyAndAmount"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="CdtDbtInd" type="CreditDebitCode"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="Rsn" type="Max4Text"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="AddtlInf" type="Max140Text"/>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:simpleType name="DocumentType3Code">
+        <xs:restriction base="xs:string">
+            <xs:enumeration value="RADM"/>
+            <xs:enumeration value="RPIN"/>
+            <xs:enumeration value="FXDR"/>
+            <xs:enumeration value="DISP"/>
+            <xs:enumeration value="PUOR"/>
+            <xs:enumeration value="SCOR"/>
+        </xs:restriction>
+    </xs:simpleType>
+    <xs:simpleType name="DocumentType5Code">
+        <xs:restriction base="xs:string">
+            <xs:enumeration value="MSIN"/>
+            <xs:enumeration value="CNFA"/>
+            <xs:enumeration value="DNFA"/>
+            <xs:enumeration value="CINV"/>
+            <xs:enumeration value="CREN"/>
+            <xs:enumeration value="DEBN"/>
+            <xs:enumeration value="HIRI"/>
+            <xs:enumeration value="SBIN"/>
+            <xs:enumeration value="CMCN"/>
+            <xs:enumeration value="SOAC"/>
+            <xs:enumeration value="DISP"/>
+            <xs:enumeration value="BOLD"/>
+            <xs:enumeration value="VCHR"/>
+            <xs:enumeration value="AROI"/>
+            <xs:enumeration value="TSUT"/>
+        </xs:restriction>
+    </xs:simpleType>
+    <xs:complexType name="EquivalentAmount2">
+        <xs:sequence>
+            <xs:element name="Amt" type="ActiveOrHistoricCurrencyAndAmount"/>
+            <xs:element name="CcyOfTrf" type="ActiveOrHistoricCurrencyCode"/>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:complexType name="ExchangeRateInformation1">
+        <xs:sequence>
+            <xs:element maxOccurs="1" minOccurs="0" name="XchgRate" type="BaseOneRate"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="RateTp" type="ExchangeRateType1Code"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="CtrctId" type="Max35Text"/>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:simpleType name="ExchangeRateType1Code">
+        <xs:restriction base="xs:string">
+            <xs:enumeration value="SPOT"/>
+            <xs:enumeration value="SALE"/>
+            <xs:enumeration value="AGRD"/>
+        </xs:restriction>
+    </xs:simpleType>
+    <xs:simpleType name="ExternalAccountIdentification1Code">
+        <xs:restriction base="xs:string">
+            <xs:minLength value="1"/>
+            <xs:maxLength value="4"/>
+        </xs:restriction>
+    </xs:simpleType>
+    <xs:simpleType name="ExternalCategoryPurpose1Code">
+        <xs:restriction base="xs:string">
+            <xs:minLength value="1"/>
+            <xs:maxLength value="4"/>
+        </xs:restriction>
+    </xs:simpleType>
+    <xs:simpleType name="ExternalClearingSystemIdentification1Code">
+        <xs:restriction base="xs:string">
+            <xs:minLength value="1"/>
+            <xs:maxLength value="5"/>
+        </xs:restriction>
+    </xs:simpleType>
+    <xs:simpleType name="ExternalFinancialInstitutionIdentification1Code">
+        <xs:restriction base="xs:string">
+            <xs:minLength value="1"/>
+            <xs:maxLength value="4"/>
+        </xs:restriction>
+    </xs:simpleType>
+    <xs:simpleType name="ExternalLocalInstrument1Code">
+        <xs:restriction base="xs:string">
+            <xs:minLength value="1"/>
+            <xs:maxLength value="35"/>
+        </xs:restriction>
+    </xs:simpleType>
+    <xs:simpleType name="ExternalOrganisationIdentification1Code">
+        <xs:restriction base="xs:string">
+            <xs:minLength value="1"/>
+            <xs:maxLength value="4"/>
+        </xs:restriction>
+    </xs:simpleType>
+    <xs:simpleType name="ExternalPersonIdentification1Code">
+        <xs:restriction base="xs:string">
+            <xs:minLength value="1"/>
+            <xs:maxLength value="4"/>
+        </xs:restriction>
+    </xs:simpleType>
+    <xs:simpleType name="ExternalPurpose1Code">
+        <xs:restriction base="xs:string">
+            <xs:minLength value="1"/>
+            <xs:maxLength value="4"/>
+        </xs:restriction>
+    </xs:simpleType>
+    <xs:simpleType name="ExternalServiceLevel1Code">
+        <xs:restriction base="xs:string">
+            <xs:minLength value="1"/>
+            <xs:maxLength value="4"/>
+        </xs:restriction>
+    </xs:simpleType>
+    <xs:complexType name="FinancialIdentificationSchemeName1Choice">
+        <xs:sequence>
+            <xs:choice>
+                <xs:element name="Cd" type="ExternalFinancialInstitutionIdentification1Code"/>
+                <xs:element name="Prtry" type="Max35Text"/>
+            </xs:choice>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:complexType name="FinancialInstitutionIdentification7">
+        <xs:sequence>
+            <xs:element maxOccurs="1" minOccurs="0" name="BIC" type="BICIdentifier"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="ClrSysMmbId" type="ClearingSystemMemberIdentification2"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="Nm" type="Max140Text"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="PstlAdr" type="PostalAddress6"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="Othr" type="GenericFinancialIdentification1"/>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:complexType name="GenericAccountIdentification1">
+        <xs:sequence>
+            <xs:element name="Id" type="Max34Text"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="SchmeNm" type="AccountSchemeName1Choice"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="Issr" type="Max35Text"/>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:complexType name="GenericFinancialIdentification1">
+        <xs:sequence>
+            <xs:element name="Id" type="Max35Text"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="SchmeNm" type="FinancialIdentificationSchemeName1Choice"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="Issr" type="Max35Text"/>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:complexType name="GenericOrganisationIdentification1">
+        <xs:sequence>
+            <xs:element name="Id" type="Max35Text"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="SchmeNm" type="OrganisationIdentificationSchemeName1Choice"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="Issr" type="Max35Text"/>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:complexType name="GenericPersonIdentification1">
+        <xs:sequence>
+            <xs:element name="Id" type="Max35Text"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="SchmeNm" type="PersonIdentificationSchemeName1Choice"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="Issr" type="Max35Text"/>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:complexType name="GroupHeader32">
+        <xs:sequence>
+            <xs:element name="MsgId" type="Max35Text"/>
+            <xs:element name="CreDtTm" type="ISODateTime"/>
+            <xs:element maxOccurs="2" minOccurs="0" name="Authstn" type="Authorisation1Choice"/>
+            <xs:element name="NbOfTxs" type="Max15NumericText"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="CtrlSum" type="DecimalNumber"/>
+            <xs:element name="InitgPty" type="PartyIdentification32"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="FwdgAgt" type="BranchAndFinancialInstitutionIdentification4"/>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:simpleType name="IBAN2007Identifier">
+        <xs:restriction base="xs:string">
+            <xs:pattern value="[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}"/>
+        </xs:restriction>
+    </xs:simpleType>
+    <xs:simpleType name="ISODate">
+        <xs:restriction base="xs:date"/>
+    </xs:simpleType>
+    <xs:simpleType name="ISODateTime">
+        <xs:restriction base="xs:dateTime"/>
+    </xs:simpleType>
+    <xs:simpleType name="Instruction3Code">
+        <xs:restriction base="xs:string">
+            <xs:enumeration value="CHQB"/>
+            <xs:enumeration value="HOLD"/>
+            <xs:enumeration value="PHOB"/>
+            <xs:enumeration value="TELB"/>
+        </xs:restriction>
+    </xs:simpleType>
+    <xs:complexType name="InstructionForCreditorAgent1">
+        <xs:sequence>
+            <xs:element maxOccurs="1" minOccurs="0" name="Cd" type="Instruction3Code"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="InstrInf" type="Max140Text"/>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:complexType name="LocalInstrument2Choice">
+        <xs:sequence>
+            <xs:choice>
+                <xs:element name="Cd" type="ExternalLocalInstrument1Code"/>
+                <xs:element name="Prtry" type="Max35Text"/>
+            </xs:choice>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:simpleType name="Max10Text">
+        <xs:restriction base="xs:string">
+            <xs:minLength value="1"/>
+            <xs:maxLength value="10"/>
+        </xs:restriction>
+    </xs:simpleType>
+    <xs:simpleType name="Max128Text">
+        <xs:restriction base="xs:string">
+            <xs:minLength value="1"/>
+            <xs:maxLength value="128"/>
+        </xs:restriction>
+    </xs:simpleType>
+    <xs:simpleType name="Max140Text">
+        <xs:restriction base="xs:string">
+            <xs:minLength value="1"/>
+            <xs:maxLength value="140"/>
+        </xs:restriction>
+    </xs:simpleType>
+    <xs:simpleType name="Max15NumericText">
+        <xs:restriction base="xs:string">
+            <xs:pattern value="[0-9]{1,15}"/>
+        </xs:restriction>
+    </xs:simpleType>
+    <xs:simpleType name="Max16Text">
+        <xs:restriction base="xs:string">
+            <xs:minLength value="1"/>
+            <xs:maxLength value="16"/>
+        </xs:restriction>
+    </xs:simpleType>
+    <xs:simpleType name="Max2048Text">
+        <xs:restriction base="xs:string">
+            <xs:minLength value="1"/>
+            <xs:maxLength value="2048"/>
+        </xs:restriction>
+    </xs:simpleType>
+    <xs:simpleType name="Max34Text">
+        <xs:restriction base="xs:string">
+            <xs:minLength value="1"/>
+            <xs:maxLength value="34"/>
+        </xs:restriction>
+    </xs:simpleType>
+    <xs:simpleType name="Max35Text">
+        <xs:restriction base="xs:string">
+            <xs:minLength value="1"/>
+            <xs:maxLength value="35"/>
+        </xs:restriction>
+    </xs:simpleType>
+    <xs:simpleType name="Max4Text">
+        <xs:restriction base="xs:string">
+            <xs:minLength value="1"/>
+            <xs:maxLength value="4"/>
+        </xs:restriction>
+    </xs:simpleType>
+    <xs:simpleType name="Max70Text">
+        <xs:restriction base="xs:string">
+            <xs:minLength value="1"/>
+            <xs:maxLength value="70"/>
+        </xs:restriction>
+    </xs:simpleType>
+    <xs:complexType name="NameAndAddress10">
+        <xs:sequence>
+            <xs:element name="Nm" type="Max140Text"/>
+            <xs:element name="Adr" type="PostalAddress6"/>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:simpleType name="NamePrefix1Code">
+        <xs:restriction base="xs:string">
+            <xs:enumeration value="DOCT"/>
+            <xs:enumeration value="MIST"/>
+            <xs:enumeration value="MISS"/>
+            <xs:enumeration value="MADM"/>
+        </xs:restriction>
+    </xs:simpleType>
+    <xs:simpleType name="Number">
+        <xs:restriction base="xs:decimal">
+            <xs:fractionDigits value="0"/>
+            <xs:totalDigits value="18"/>
+        </xs:restriction>
+    </xs:simpleType>
+    <xs:complexType name="OrganisationIdentification4">
+        <xs:sequence>
+            <xs:element maxOccurs="1" minOccurs="0" name="BICOrBEI" type="AnyBICIdentifier"/>
+            <xs:element maxOccurs="unbounded" minOccurs="0" name="Othr" type="GenericOrganisationIdentification1"/>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:complexType name="OrganisationIdentificationSchemeName1Choice">
+        <xs:sequence>
+            <xs:choice>
+                <xs:element name="Cd" type="ExternalOrganisationIdentification1Code"/>
+                <xs:element name="Prtry" type="Max35Text"/>
+            </xs:choice>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:complexType name="Party6Choice">
+        <xs:sequence>
+            <xs:choice>
+                <xs:element name="OrgId" type="OrganisationIdentification4"/>
+                <xs:element name="PrvtId" type="PersonIdentification5"/>
+            </xs:choice>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:complexType name="PartyIdentification32">
+        <xs:sequence>
+            <xs:element maxOccurs="1" minOccurs="0" name="Nm" type="Max140Text"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="PstlAdr" type="PostalAddress6"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="Id" type="Party6Choice"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="CtryOfRes" type="CountryCode"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="CtctDtls" type="ContactDetails2"/>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:complexType name="PaymentIdentification1">
+        <xs:sequence>
+            <xs:element maxOccurs="1" minOccurs="0" name="InstrId" type="Max35Text"/>
+            <xs:element name="EndToEndId" type="Max35Text"/>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:complexType name="PaymentInstructionInformation3">
+        <xs:sequence>
+            <xs:element name="PmtInfId" type="Max35Text"/>
+            <xs:element name="PmtMtd" type="PaymentMethod3Code"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="BtchBookg" type="BatchBookingIndicator"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="NbOfTxs" type="Max15NumericText"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="CtrlSum" type="DecimalNumber"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="PmtTpInf" type="PaymentTypeInformation19"/>
+            <xs:element name="ReqdExctnDt" type="ISODate"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="PoolgAdjstmntDt" type="ISODate"/>
+            <xs:element name="Dbtr" type="PartyIdentification32"/>
+            <xs:element name="DbtrAcct" type="CashAccount16"/>
+            <xs:element name="DbtrAgt" type="BranchAndFinancialInstitutionIdentification4"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="DbtrAgtAcct" type="CashAccount16"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="UltmtDbtr" type="PartyIdentification32"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="ChrgBr" type="ChargeBearerType1Code"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="ChrgsAcct" type="CashAccount16"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="ChrgsAcctAgt" type="BranchAndFinancialInstitutionIdentification4"/>
+            <xs:element maxOccurs="unbounded" minOccurs="1" name="CdtTrfTxInf" type="CreditTransferTransactionInformation10"/>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:simpleType name="PaymentMethod3Code">
+        <xs:restriction base="xs:string">
+            <xs:enumeration value="CHK"/>
+            <xs:enumeration value="TRF"/>
+            <xs:enumeration value="TRA"/>
+        </xs:restriction>
+    </xs:simpleType>
+    <xs:complexType name="PaymentTypeInformation19">
+        <xs:sequence>
+            <xs:element maxOccurs="1" minOccurs="0" name="InstrPrty" type="Priority2Code"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="SvcLvl" type="ServiceLevel8Choice"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="LclInstrm" type="LocalInstrument2Choice"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="CtgyPurp" type="CategoryPurpose1Choice"/>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:simpleType name="PercentageRate">
+        <xs:restriction base="xs:decimal">
+            <xs:fractionDigits value="10"/>
+            <xs:totalDigits value="11"/>
+        </xs:restriction>
+    </xs:simpleType>
+    <xs:complexType name="PersonIdentification5">
+        <xs:sequence>
+            <xs:element maxOccurs="1" minOccurs="0" name="DtAndPlcOfBirth" type="DateAndPlaceOfBirth"/>
+            <xs:element maxOccurs="unbounded" minOccurs="0" name="Othr" type="GenericPersonIdentification1"/>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:complexType name="PersonIdentificationSchemeName1Choice">
+        <xs:sequence>
+            <xs:choice>
+                <xs:element name="Cd" type="ExternalPersonIdentification1Code"/>
+                <xs:element name="Prtry" type="Max35Text"/>
+            </xs:choice>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:simpleType name="PhoneNumber">
+        <xs:restriction base="xs:string">
+            <xs:pattern value="\+[0-9]{1,3}-[0-9()+\-]{1,30}"/>
+        </xs:restriction>
+    </xs:simpleType>
+    <xs:complexType name="PostalAddress6">
+        <xs:sequence>
+            <xs:element maxOccurs="1" minOccurs="0" name="AdrTp" type="AddressType2Code"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="Dept" type="Max70Text"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="SubDept" type="Max70Text"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="StrtNm" type="Max70Text"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="BldgNb" type="Max16Text"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="PstCd" type="Max16Text"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="TwnNm" type="Max35Text"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="CtrySubDvsn" type="Max35Text"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="Ctry" type="CountryCode"/>
+            <xs:element maxOccurs="7" minOccurs="0" name="AdrLine" type="Max70Text"/>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:simpleType name="Priority2Code">
+        <xs:restriction base="xs:string">
+            <xs:enumeration value="HIGH"/>
+            <xs:enumeration value="NORM"/>
+        </xs:restriction>
+    </xs:simpleType>
+    <xs:complexType name="Purpose2Choice">
+        <xs:sequence>
+            <xs:choice>
+                <xs:element name="Cd" type="ExternalPurpose1Code"/>
+                <xs:element name="Prtry" type="Max35Text"/>
+            </xs:choice>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:complexType name="ReferredDocumentInformation3">
+        <xs:sequence>
+            <xs:element maxOccurs="1" minOccurs="0" name="Tp" type="ReferredDocumentType2"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="Nb" type="Max35Text"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="RltdDt" type="ISODate"/>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:complexType name="ReferredDocumentType1Choice">
+        <xs:sequence>
+            <xs:choice>
+                <xs:element name="Cd" type="DocumentType5Code"/>
+                <xs:element name="Prtry" type="Max35Text"/>
+            </xs:choice>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:complexType name="ReferredDocumentType2">
+        <xs:sequence>
+            <xs:element name="CdOrPrtry" type="ReferredDocumentType1Choice"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="Issr" type="Max35Text"/>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:complexType name="RegulatoryAuthority2">
+        <xs:sequence>
+            <xs:element maxOccurs="1" minOccurs="0" name="Nm" type="Max140Text"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="Ctry" type="CountryCode"/>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:complexType name="RegulatoryReporting3">
+        <xs:sequence>
+            <xs:element maxOccurs="1" minOccurs="0" name="DbtCdtRptgInd" type="RegulatoryReportingType1Code"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="Authrty" type="RegulatoryAuthority2"/>
+            <xs:element maxOccurs="unbounded" minOccurs="0" name="Dtls" type="StructuredRegulatoryReporting3"/>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:simpleType name="RegulatoryReportingType1Code">
+        <xs:restriction base="xs:string">
+            <xs:enumeration value="CRED"/>
+            <xs:enumeration value="DEBT"/>
+            <xs:enumeration value="BOTH"/>
+        </xs:restriction>
+    </xs:simpleType>
+    <xs:complexType name="RemittanceAmount1">
+        <xs:sequence>
+            <xs:element maxOccurs="1" minOccurs="0" name="DuePyblAmt" type="ActiveOrHistoricCurrencyAndAmount"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="DscntApldAmt" type="ActiveOrHistoricCurrencyAndAmount"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="CdtNoteAmt" type="ActiveOrHistoricCurrencyAndAmount"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="TaxAmt" type="ActiveOrHistoricCurrencyAndAmount"/>
+            <xs:element maxOccurs="unbounded" minOccurs="0" name="AdjstmntAmtAndRsn" type="DocumentAdjustment1"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="RmtdAmt" type="ActiveOrHistoricCurrencyAndAmount"/>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:complexType name="RemittanceInformation5">
+        <xs:sequence>
+            <xs:element maxOccurs="unbounded" minOccurs="0" name="Ustrd" type="Max140Text"/>
+            <xs:element maxOccurs="unbounded" minOccurs="0" name="Strd" type="StructuredRemittanceInformation7"/>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:complexType name="RemittanceLocation2">
+        <xs:sequence>
+            <xs:element maxOccurs="1" minOccurs="0" name="RmtId" type="Max35Text"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="RmtLctnMtd" type="RemittanceLocationMethod2Code"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="RmtLctnElctrncAdr" type="Max2048Text"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="RmtLctnPstlAdr" type="NameAndAddress10"/>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:simpleType name="RemittanceLocationMethod2Code">
+        <xs:restriction base="xs:string">
+            <xs:enumeration value="FAXI"/>
+            <xs:enumeration value="EDIC"/>
+            <xs:enumeration value="URID"/>
+            <xs:enumeration value="EMAL"/>
+            <xs:enumeration value="POST"/>
+            <xs:enumeration value="SMSM"/>
+        </xs:restriction>
+    </xs:simpleType>
+    <xs:complexType name="ServiceLevel8Choice">
+        <xs:sequence>
+            <xs:choice>
+                <xs:element name="Cd" type="ExternalServiceLevel1Code"/>
+                <xs:element name="Prtry" type="Max35Text"/>
+            </xs:choice>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:complexType name="StructuredRegulatoryReporting3">
+        <xs:sequence>
+            <xs:element maxOccurs="1" minOccurs="0" name="Tp" type="Max35Text"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="Dt" type="ISODate"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="Ctry" type="CountryCode"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="Cd" type="Max10Text"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="Amt" type="ActiveOrHistoricCurrencyAndAmount"/>
+            <xs:element maxOccurs="unbounded" minOccurs="0" name="Inf" type="Max35Text"/>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:complexType name="StructuredRemittanceInformation7">
+        <xs:sequence>
+            <xs:element maxOccurs="unbounded" minOccurs="0" name="RfrdDocInf" type="ReferredDocumentInformation3"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="RfrdDocAmt" type="RemittanceAmount1"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="CdtrRefInf" type="CreditorReferenceInformation2"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="Invcr" type="PartyIdentification32"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="Invcee" type="PartyIdentification32"/>
+            <xs:element maxOccurs="3" minOccurs="0" name="AddtlRmtInf" type="Max140Text"/>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:complexType name="TaxAmount1">
+        <xs:sequence>
+            <xs:element maxOccurs="1" minOccurs="0" name="Rate" type="PercentageRate"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="TaxblBaseAmt" type="ActiveOrHistoricCurrencyAndAmount"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="TtlAmt" type="ActiveOrHistoricCurrencyAndAmount"/>
+            <xs:element maxOccurs="unbounded" minOccurs="0" name="Dtls" type="TaxRecordDetails1"/>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:complexType name="TaxAuthorisation1">
+        <xs:sequence>
+            <xs:element maxOccurs="1" minOccurs="0" name="Titl" type="Max35Text"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="Nm" type="Max140Text"/>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:complexType name="TaxInformation3">
+        <xs:sequence>
+            <xs:element maxOccurs="1" minOccurs="0" name="Cdtr" type="TaxParty1"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="Dbtr" type="TaxParty2"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="AdmstnZn" type="Max35Text"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="RefNb" type="Max140Text"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="Mtd" type="Max35Text"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="TtlTaxblBaseAmt" type="ActiveOrHistoricCurrencyAndAmount"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="TtlTaxAmt" type="ActiveOrHistoricCurrencyAndAmount"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="Dt" type="ISODate"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="SeqNb" type="Number"/>
+            <xs:element maxOccurs="unbounded" minOccurs="0" name="Rcrd" type="TaxRecord1"/>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:complexType name="TaxParty1">
+        <xs:sequence>
+            <xs:element maxOccurs="1" minOccurs="0" name="TaxId" type="Max35Text"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="RegnId" type="Max35Text"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="TaxTp" type="Max35Text"/>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:complexType name="TaxParty2">
+        <xs:sequence>
+            <xs:element maxOccurs="1" minOccurs="0" name="TaxId" type="Max35Text"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="RegnId" type="Max35Text"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="TaxTp" type="Max35Text"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="Authstn" type="TaxAuthorisation1"/>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:complexType name="TaxPeriod1">
+        <xs:sequence>
+            <xs:element maxOccurs="1" minOccurs="0" name="Yr" type="ISODate"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="Tp" type="TaxRecordPeriod1Code"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="FrToDt" type="DatePeriodDetails"/>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:complexType name="TaxRecord1">
+        <xs:sequence>
+            <xs:element maxOccurs="1" minOccurs="0" name="Tp" type="Max35Text"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="Ctgy" type="Max35Text"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="CtgyDtls" type="Max35Text"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="DbtrSts" type="Max35Text"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="CertId" type="Max35Text"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="FrmsCd" type="Max35Text"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="Prd" type="TaxPeriod1"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="TaxAmt" type="TaxAmount1"/>
+            <xs:element maxOccurs="1" minOccurs="0" name="AddtlInf" type="Max140Text"/>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:complexType name="TaxRecordDetails1">
+        <xs:sequence>
+            <xs:element maxOccurs="1" minOccurs="0" name="Prd" type="TaxPeriod1"/>
+            <xs:element name="Amt" type="ActiveOrHistoricCurrencyAndAmount"/>
+        </xs:sequence>
+    </xs:complexType>
+    <xs:simpleType name="TaxRecordPeriod1Code">
+        <xs:restriction base="xs:string">
+            <xs:enumeration value="MM01"/>
+            <xs:enumeration value="MM02"/>
+            <xs:enumeration value="MM03"/>
+            <xs:enumeration value="MM04"/>
+            <xs:enumeration value="MM05"/>
+            <xs:enumeration value="MM06"/>
+            <xs:enumeration value="MM07"/>
+            <xs:enumeration value="MM08"/>
+            <xs:enumeration value="MM09"/>
+            <xs:enumeration value="MM10"/>
+            <xs:enumeration value="MM11"/>
+            <xs:enumeration value="MM12"/>
+            <xs:enumeration value="QTR1"/>
+            <xs:enumeration value="QTR2"/>
+            <xs:enumeration value="QTR3"/>
+            <xs:enumeration value="QTR4"/>
+            <xs:enumeration value="HLF1"/>
+            <xs:enumeration value="HLF2"/>
+        </xs:restriction>
+    </xs:simpleType>
+</xs:schema>
diff --git a/addons/account_sepa/sepa_credit_transfer.py b/addons/account_sepa/sepa_credit_transfer.py
new file mode 100644
index 0000000..d60556d
--- /dev/null
+++ b/addons/account_sepa/sepa_credit_transfer.py
@@ -0,0 +1,338 @@
+# -*- coding: utf-8 -*-
+
+import re
+import time
+import random
+import base64
+import logging
+
+from lxml import etree
+
+from openerp import models, fields, api, _
+from openerp.tools import float_round
+from openerp.exceptions import UserError, ValidationError
+
+
+def check_valid_SEPA_str(string):
+    if re.search('[^A-Za-z0-9/\-?:().,\'+ ]', string) != None:
+        raise ValidationError(_("The text used in SEPA files can only contain the following characters :\n\n"
+            "a b c d e f g h i j k l m n o p q r s t u v w x y z\n"
+            "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z\n"
+            "0 1 2 3 4 5 6 7 8 9\n"
+            "/ - ? : ( ) . , ' + (space)"))
+
+def prepare_SEPA_string(string):
+    """ Make string comply with the recomandations of the EPC. See section 1.4 (Character Set) of document
+        'sepa credit transfer scheme customer-to-bank implementation guidelines', issued by The European Payment Council.
+    """
+    while '//' in string: # No double slash allowed
+        string = string.replace('//', '/')
+    while string.startswith('/'): # No leading slash allowed
+        string = string[1:]
+    while string.endswith('/'): # No ending slash allowed
+        string = string[:-1]
+    string = re.sub('[^A-Za-z0-9/-?:().,\'+ ]', '', string) # Only keep allowed characters
+    return string
+
+
+class AccountSepaCreditTransfer(models.TransientModel):
+    _name = "account.sepa.credit.transfer"
+    _description = "Create SEPA credit transfer files"
+
+    journal_id = fields.Many2one('account.journal', readonly=True)
+    bank_account_id = fields.Many2one('res.partner.bank', readonly=True)
+    is_generic = fields.Boolean(readonly=True,
+        help="Technical feature used during the file creation. A SEPA message is said to be 'generic' if it cannot be considered as "
+             "a standard european credit transfer. That is if the bank journal is not in €, a transaction is not in € or a payee is "
+             "not identified by an IBAN account number and a bank BIC.")
+
+    file = fields.Binary('SEPA XML File', readonly=True)
+    filename = fields.Char(string='Filename', size=256, readonly=True)
+
+    @api.v7
+    def create_sepa_credit_transfer(self, cr, uid, payment_ids, context=None):
+        payments = self.pool['account.payment'].browse(cr, uid, payment_ids, context=context)
+        return self.pool['account.sepa.credit.transfer'].browse(cr, uid, [], context=context).create_sepa_credit_transfer(payments)
+
+    @api.v8
+    @api.model
+    def create_sepa_credit_transfer(self, payments):
+        """ Create a new instance of this model then open a wizard allowing to download the file
+        """
+        # Since this method is called via a client_action_multi, we need to make sure the received records are what we expect
+        payments = payments.filtered(lambda r: r.payment_method.code == 'sepa_ct' and r.state in ('posted', 'sent'))
+
+        if len(payments) == 0:
+            raise UserError(_("Payments to export as SEPA Credit Transfer must have 'SEPA Credit Transfer' selected as payment method and be posted"))
+        if any(payment.journal_id != payments[0].journal_id for payment in payments):
+            raise UserError(_("In order to export a SEPA Credit Transfer file, please only select payments belonging to the same bank journal."))
+
+        journal = payments[0].journal_id
+        bank_account = journal.company_id.bank_ids.filtered(lambda r: r.journal_id.id == journal.id)
+        if not bank_account:
+            raise UserError(_("Configuration Error:\nThere is no bank account recorded for journal '%s'") % journal.name)
+        if len(bank_account) > 1:
+            raise UserError(_("Configuration Error:\nThere more than one bank accounts linked to journal '%s'") % journal.name)
+        if not bank_account.state or not bank_account.state == 'iban':
+            raise UserError(_("The account %s, linked to journal '%s', is not of type IBAN.\nA valid IBAN account is required to use SEPA features.") % (bank_account.acc_number, journal.name))
+        for payment in payments:
+            if not payment.partner_bank_account_id:
+                raise UserError(_("There is no bank account selected for payment '%s'") % payment.name)
+
+        res = self.create({
+            'journal_id': journal.id,
+            'bank_account_id': bank_account.id,
+            'filename': "sct_" + bank_account.acc_number.replace(' ', '') + time.strftime("_%Y-%m-%d") + ".xml",
+            'is_generic': self._require_generic_message(journal, payments),
+        })
+
+        xml_doc = res._create_pain_001_001_03_document(payments)
+        res.file = base64.encodestring(xml_doc)
+
+        payments.write({'state': 'sent'})
+        payments.write({'payment_reference': res.filename})
+
+        # Alternatively, return the id of the transient and use a controller to download the file
+        return {
+            'type': 'ir.actions.act_window',
+            'view_mode': 'form',
+            'res_model': 'account.sepa.credit.transfer',
+            'target': 'new',
+            'res_id': res.id,
+        }
+
+    @api.model
+    def _require_generic_message(self, journal, payments):
+        """ Find out if generating a credit transfer initiation message for payments requires to use the generic rules, as opposed to the standard ones.
+            The generic rules are used for payments which are not considered to be standard european credit transfers.
+        """
+        # A message is generic if :
+        debtor_currency = journal.currency_id and journal.currency_id.name or journal.company_id.currency_id.name
+        if debtor_currency != 'EUR':
+            return True # The debtor account is not labelled in EUR
+        for payment in payments:
+            bank_account = payment.partner_bank_account_id
+            if payment.currency_id.name != 'EUR':
+                return True # Any transaction in instructed in another currency than EUR
+            if not (bank_account.bank_bic or bank_account.bank and bank_account.bank.bic):
+                return True # Any creditor agent is not identified by a BIC
+            if not bank_account.state or not bank_account.state == 'iban':
+                return True # Any creditor account is not identified by an IBAN
+        return False
+
+    def _create_pain_001_001_03_document(self, doc_payments):
+        """ :param doc_payments: recordset of account.payment to be exported in the XML document returned
+        """
+        Document = etree.Element("Document", nsmap={
+            None: "urn:iso:std:iso:20022:tech:xsd:pain.001.001.03",
+            'xsi': "http://www.w3.org/2001/XMLSchema-instance" })
+        CstmrCdtTrfInitn = etree.SubElement(Document, "CstmrCdtTrfInitn")
+
+        # Create the GrpHdr XML block
+        GrpHdr = etree.SubElement(CstmrCdtTrfInitn, "GrpHdr")
+        MsgId = etree.SubElement(GrpHdr, "MsgId")
+        val_MsgId = str(int(time.time()*100))[-10:]
+        val_MsgId = prepare_SEPA_string(self.journal_id.company_id.name[-15:]) + val_MsgId
+        val_MsgId = str(random.random()) + val_MsgId
+        val_MsgId = val_MsgId[-30:]
+        MsgId.text = val_MsgId
+        CreDtTm = etree.SubElement(GrpHdr, "CreDtTm")
+        CreDtTm.text = time.strftime("%Y-%m-%dT%H:%M:%S")
+        NbOfTxs = etree.SubElement(GrpHdr, "NbOfTxs")
+        val_NbOfTxs = str(len(doc_payments))
+        if len(val_NbOfTxs) > 15:
+            raise ValidationError(_("Too many transactions for a single file."))
+        NbOfTxs.text = val_NbOfTxs
+        CtrlSum = etree.SubElement(GrpHdr, "CtrlSum")
+        CtrlSum.text = self._get_CtrlSum(doc_payments)
+        GrpHdr.append(self._get_InitgPty())
+
+        # Create the PmtInf XML block
+        PmtInf = etree.SubElement(CstmrCdtTrfInitn, "PmtInf")
+        PmtInfId = etree.SubElement(PmtInf, "PmtInfId")
+        PmtInfId.text = (val_MsgId + str(self.journal_id.id))[-30:]
+        PmtMtd = etree.SubElement(PmtInf, "PmtMtd")
+        PmtMtd.text = 'TRF'
+        BtchBookg = etree.SubElement(PmtInf, "BtchBookg")
+        BtchBookg.text = 'false'
+        NbOfTxs = etree.SubElement(PmtInf, "NbOfTxs")
+        NbOfTxs.text = str(len(doc_payments))
+        CtrlSum = etree.SubElement(PmtInf, "CtrlSum")
+        CtrlSum.text = self._get_CtrlSum(doc_payments)
+        PmtInf.append(self._get_PmtTpInf())
+        ReqdExctnDt = etree.SubElement(PmtInf, "ReqdExctnDt")
+        ReqdExctnDt.text = time.strftime("%Y-%m-%d")
+        PmtInf.append(self._get_Dbtr())
+        PmtInf.append(self._get_DbtrAcct())
+        DbtrAgt = etree.SubElement(PmtInf, "DbtrAgt")
+        FinInstnId = etree.SubElement(DbtrAgt, "FinInstnId")
+        val_BIC = self.bank_account_id.bank_bic or self.bank_account_id.bank.bic
+        if not val_BIC:
+            raise UserError(_("There is no Bank Identifier Code recorded for bank account '%s'") % self.bank_account_id.acc_number)
+        BIC = etree.SubElement(FinInstnId, "BIC")
+        BIC.text = val_BIC
+
+        # One CdtTrfTxInf per transaction
+        for payment in doc_payments:
+            PmtInf.append(self._get_CdtTrfTxInf(PmtInfId, payment))
+
+        return etree.tostring(Document, pretty_print=True, xml_declaration=True, encoding='utf-8')
+
+    def _get_CtrlSum(self, payments):
+        return str(float_round(sum(payment.amount for payment in payments), 2))
+
+    def _get_company_PartyIdentification32(self, org_id=True, postal_address=True):
+        """ Returns a PartyIdentification32 element identifying the current journal's company
+        """
+        ret = []
+        company = self.journal_id.company_id
+        name_length = self.is_generic and 35 or 70
+
+        Nm = etree.Element("Nm")
+        Nm.text = prepare_SEPA_string(company.sepa_initiating_party_name[:name_length])
+        ret.append(Nm)
+
+        if postal_address and company.partner_id.city and company.partner_id.country_id.code:
+            PstlAdr = etree.Element("PstlAdr")
+            Ctry = etree.SubElement(PstlAdr, "Ctry")
+            Ctry.text = company.partner_id.country_id.code
+            if company.partner_id.street:
+                AdrLine = etree.SubElement(PstlAdr, "AdrLine")
+                AdrLine.text = prepare_SEPA_string(company.partner_id.street)
+            if company.partner_id.zip and company.partner_id.city:
+                AdrLine = etree.SubElement(PstlAdr, "AdrLine")
+                AdrLine.text = prepare_SEPA_string(company.partner_id.zip) + " " + prepare_SEPA_string(company.partner_id.city)
+            ret.append(PstlAdr)
+
+        if org_id and company.sepa_orgid_id:
+            Id = etree.Element("Id")
+            OrgId = etree.SubElement(Id, "OrgId")
+            Othr = etree.SubElement(OrgId, "Othr")
+            _Id = etree.SubElement(Othr, "Id")
+            _Id.text = prepare_SEPA_string(company.sepa_orgid_id)
+            if company.sepa_orgid_issr:
+                Issr = etree.SubElement(Othr, "Issr")
+                Issr.text = prepare_SEPA_string(company.sepa_orgid_issr)
+            ret.append(Id)
+
+        return ret
+
+    def _get_InitgPty(self):
+        InitgPty = etree.Element("InitgPty")
+        InitgPty.extend(self._get_company_PartyIdentification32(org_id=True, postal_address=False))
+        return InitgPty
+
+    def _get_PmtTpInf(self):
+        PmtTpInf = etree.Element("PmtTpInf")
+        InstrPrty = etree.SubElement(PmtTpInf, "InstrPrty")
+        InstrPrty.text = 'NORM'
+
+        if not self.is_generic:
+            SvcLvl = etree.SubElement(PmtTpInf, "SvcLvl")
+            Cd = etree.SubElement(SvcLvl, "Cd")
+            Cd.text = 'SEPA'
+
+        return PmtTpInf
+
+    def _get_Dbtr(self):
+        Dbtr = etree.Element("Dbtr")
+        Dbtr.extend(self._get_company_PartyIdentification32(org_id=lambda: not self.is_generic, postal_address=True))
+        return Dbtr
+
+    def _get_DbtrAcct(self):
+        DbtrAcct = etree.Element("DbtrAcct")
+        Id = etree.SubElement(DbtrAcct, "Id")
+        # TODO: The BBAN is required to send a transaction to a bank outside of the SEPA.
+        # Which is not the same as a generic message, since SEPA banks validators require
+        # IBAN to be present and do not tolerate Othr ('optional' is a concept they do not
+        # understand). Some more insight is required to solve this. In the meantime, IBAN should be OK.
+        # if self.is_generic:
+        #     Othr = etree.SubElement(Id, "Othr")
+        #     _Id = etree.SubElement(Othr, "Id")
+        #     _Id.text = self.bank_account_id.get_bban()
+        IBAN = etree.SubElement(Id, "IBAN")
+        IBAN.text = self.bank_account_id.acc_number.replace(' ', '')
+        Ccy = etree.SubElement(DbtrAcct, "Ccy")
+        Ccy.text = self.journal_id.currency_id and self.journal_id.currency_id.name or self.journal_id.company_id.currency_id.name
+
+        return DbtrAcct
+
+    def _get_CdtTrfTxInf(self, PmtInfId, payment):
+        CdtTrfTxInf = etree.Element("CdtTrfTxInf")
+        PmtId = etree.SubElement(CdtTrfTxInf, "PmtId")
+        InstrId = etree.SubElement(PmtId, "InstrId")
+        InstrId.text = prepare_SEPA_string(payment.name)
+        EndToEndId = etree.SubElement(PmtId, "EndToEndId")
+        EndToEndId.text = (PmtInfId.text + str(payment.id))[-30:]
+        Amt = etree.SubElement(CdtTrfTxInf, "Amt")
+        val_Ccy = payment.currency_id and payment.currency_id.name or payment.journal_id.company_id.currency_id.name
+        val_InstdAmt = str(float_round(payment.amount, 2))
+        max_digits = val_Ccy == 'EUR' and 11 or 15
+        if len(re.sub('\.', '', val_InstdAmt)) > max_digits:
+            raise ValidationError(_("The amount of the payment '%s' is too high. The maximum permitted is %s.") % (payment.name, str(9)*(max_digits-3)+".99"))
+        InstdAmt = etree.SubElement(Amt, "InstdAmt", Ccy=val_Ccy)
+        InstdAmt.text = val_InstdAmt
+        CdtTrfTxInf.append(self._get_ChrgBr())
+        CdtTrfTxInf.append(self._get_CdtrAgt(payment.partner_bank_account_id))
+        Cdtr = etree.SubElement(CdtTrfTxInf, "Cdtr")
+        Nm = etree.SubElement(Cdtr, "Nm")
+        Nm.text = prepare_SEPA_string(payment.partner_id.name[:70])
+        CdtTrfTxInf.append(self._get_CdtrAcct(payment.partner_bank_account_id))
+        val_RmtInf = self._get_RmtInf(payment)
+        if val_RmtInf != False:
+            CdtTrfTxInf.append(val_RmtInf)
+
+        return CdtTrfTxInf
+
+    def _get_ChrgBr(self):
+        ChrgBr = etree.Element("ChrgBr")
+        ChrgBr.text = self.is_generic and "SHAR" or "SLEV"
+        return ChrgBr
+
+    def _get_CdtrAgt(self, bank_account):
+        bank = bank_account.bank
+
+        CdtrAgt = etree.Element("CdtrAgt")
+        FinInstnId = etree.SubElement(CdtrAgt, "FinInstnId")
+        val_BIC = bank_account.bank_bic or bank and bank.bic
+        if val_BIC:
+            BIC = etree.SubElement(FinInstnId, "BIC")
+            BIC.text = val_BIC
+        elif not self.is_generic:
+            raise UserError(_("There is no Bank Identifier Code recorded for bank account '%s'") % bank_account.acc_number)
+        Nm = etree.SubElement(FinInstnId, "Nm")
+        Nm.text = prepare_SEPA_string(bank_account.bank_name) or bank and prepare_SEPA_string(bank.name) or ''
+        if bank and bank.street and bank.city and bank.zip and bank.country:
+            PstlAdr = etree.SubElement(FinInstnId, "PstlAdr")
+            Ctry = etree.SubElement(PstlAdr, "Ctry")
+            Ctry.text = bank.country.code
+            AdrLine = etree.SubElement(PstlAdr, "AdrLine")
+            AdrLine.text = prepare_SEPA_string(bank.street)
+            AdrLine2 = etree.SubElement(PstlAdr, "AdrLine")
+            AdrLine2.text = prepare_SEPA_string(bank.zip) + " " + prepare_SEPA_string(bank.city)
+
+        return CdtrAgt
+
+    def _get_CdtrAcct(self, bank_account):
+        if not self.is_generic and (not bank_account.state or not bank_account.state == 'iban'):
+            raise UserError(_("The account %s, linked to partner '%s', is not of type IBAN.\nA valid IBAN account is required to use SEPA features.") % (bank_account.acc_number, bank_account.partner_id))
+
+        CdtrAcct = etree.Element("CdtrAcct")
+        Id = etree.SubElement(CdtrAcct, "Id")
+        if self.is_generic:
+            Othr = etree.SubElement(Id, "Othr")
+            _Id = etree.SubElement(Othr, "Id")
+            _Id.text = bank_account.acc_number
+        else:
+            IBAN = etree.SubElement(Id, "IBAN")
+            IBAN.text = bank_account.acc_number.replace(' ', '')
+
+        return CdtrAcct
+
+    def _get_RmtInf(self, payment):
+        if not payment.communication:
+            return False
+        RmtInf = etree.Element("RmtInf")
+        Ustrd = etree.SubElement(RmtInf, "Ustrd")
+        Ustrd.text = prepare_SEPA_string(payment.communication)
+        return RmtInf
diff --git a/addons/account_sepa/static/description/icon.png b/addons/account_sepa/static/description/icon.png
new file mode 100644
index 0000000..adb4b92
Binary files /dev/null and b/addons/account_sepa/static/description/icon.png differ
diff --git a/addons/account_sepa/tests/__init__.py b/addons/account_sepa/tests/__init__.py
new file mode 100644
index 0000000..50a0c97
--- /dev/null
+++ b/addons/account_sepa/tests/__init__.py
@@ -0,0 +1 @@
+from . import test_sepa_credit_transfer
diff --git a/addons/account_sepa/tests/test_sepa_credit_transfer.py b/addons/account_sepa/tests/test_sepa_credit_transfer.py
new file mode 100644
index 0000000..7e9089a
--- /dev/null
+++ b/addons/account_sepa/tests/test_sepa_credit_transfer.py
@@ -0,0 +1,104 @@
+# -*- coding: utf-8 -*-
+
+import base64
+from lxml import etree
+
+from openerp.addons.account.tests.account_test_classes import AccountingTestCase
+from openerp.modules.module import get_module_resource
+
+class TestSEPACreditTransfer(AccountingTestCase):
+
+    def setUp(self):
+        super(TestSEPACreditTransfer, self).setUp()
+
+        # Get some records
+        self.suppliers = self.env['res.partner'].search([('supplier', '=', True)])
+        self.sepa_ct = self.env.ref('account_sepa.account_payment_method_sepa_ct')
+
+        # Create an IBAN bank account and its journal
+        self.bank_euro = self.env['res.partner.bank'].create({
+            'state': 'iban',
+            'company_id': self.env.ref('base.main_company').id,
+            'partner_id': self.env.ref('base.main_company').partner_id.id,
+            'acc_number': 'BE61310126985517',
+            'bank_bic': 'BBRUBEBB',
+            'bank_name': 'ING',
+        })
+        self.bank_journal = self.bank_euro.journal_id
+        if self.bank_journal.company_id.currency_id != self.env.ref("base.EUR"):
+            self.bank_journal.default_credit_account_id.write({'currency_id': self.env.ref("base.EUR").id})
+            self.bank_journal.default_debit_account_id.write({'currency_id': self.env.ref("base.EUR").id})
+            self.bank_journal.write({'currency_id': self.env.ref("base.EUR").id})
+
+        # Make sure all suppliers have exactly one bank account
+        self.setSingleBankAccountToPartner(self.suppliers[0], {
+            'state': 'iban',
+            'partner_id': self.suppliers[0].id,
+            'acc_number': 'BE39103123456719',
+            'bank_bic': 'NICABEBB',
+            'bank_name': 'Crelan',
+        })
+        self.setSingleBankAccountToPartner(self.suppliers[1], {
+            'state': 'iban',
+            'partner_id': self.suppliers[1].id,
+            'acc_number': 'SI56191000000123438',
+            'bank_bic': 'CREGBEBB',
+            'bank_name': 'CBC',
+        })
+        self.setSingleBankAccountToPartner(self.suppliers[2], {
+            'state': 'bank',
+            'partner_id': self.suppliers[2].id,
+            'acc_number': '123456789',
+            'bank_name': 'Mock & Co',
+        })
+
+        # Create 1 payment per supplier
+        self.payment_1 = self.createPayment(self.suppliers[0], 500)
+        self.payment_1.post()
+        self.payment_2 = self.createPayment(self.suppliers[1], 600)
+        self.payment_2.post()
+        self.payment_3 = self.createPayment(self.suppliers[2], 700)
+        self.payment_3.post()
+
+        # Get a pain.001.001.03 schema validator
+        schema_file_path = get_module_resource('account_sepa', 'schemas', 'pain.001.001.03.xsd')
+        self.xmlschema = etree.XMLSchema(etree.parse(open(schema_file_path)))
+
+    def setSingleBankAccountToPartner(self, partner_id, bank_account_vals):
+        """ Make sure a partner has exactly one bank account """
+        partner_id.bank_ids.unlink()
+        return self.env['res.partner.bank'].create(bank_account_vals)
+
+    def createPayment(self, partner, amount):
+        """ Create a SEPA credit transfer payment """
+        return self.env['account.payment'].create({
+            'journal_id': self.bank_journal.id,
+            'partner_bank_account_id': partner.bank_ids[0].id,
+            'payment_method': self.sepa_ct.id,
+            'payment_type': 'outbound',
+            'payment_date': '2015-04-28',
+            'amount': amount,
+            'currency_id': self.env.ref("base.EUR").id,
+            'partner_id': partner.id,
+            'partner_type': 'supplier',
+        })
+
+    def testStandardSEPA(self):
+        model_credit_transfer = self.env['account.sepa.credit.transfer']
+        model_credit_transfer.create_sepa_credit_transfer(self.payment_1 | self.payment_2)
+        credit_transfer = model_credit_transfer.search([], limit=1, order="id desc")
+        self.assertFalse(credit_transfer.is_generic)
+        sct_doc = etree.fromstring(base64.b64decode(credit_transfer.file))
+        self.assertTrue(self.xmlschema.validate(sct_doc), self.xmlschema.error_log.last_error)
+        self.assertEqual(self.payment_1.state, 'sent')
+        self.assertEqual(self.payment_2.state, 'sent')
+
+    def testGenericSEPA(self):
+        model_credit_transfer = self.env['account.sepa.credit.transfer']
+        model_credit_transfer.create_sepa_credit_transfer(self.payment_1 | self.payment_3)
+        credit_transfer = model_credit_transfer.search([], limit=1, order="id desc")
+        self.assertTrue(credit_transfer.is_generic)
+        sct_doc = etree.fromstring(base64.b64decode(credit_transfer.file))
+        self.assertTrue(self.xmlschema.validate(sct_doc), self.xmlschema.error_log.last_error)
+        self.assertEqual(self.payment_1.state, 'sent')
+        self.assertEqual(self.payment_3.state, 'sent')
diff --git a/addons/account_sepa/views/account_payment.xml b/addons/account_sepa/views/account_payment.xml
new file mode 100644
index 0000000..63846aa
--- /dev/null
+++ b/addons/account_sepa/views/account_payment.xml
@@ -0,0 +1,38 @@
+<?xml version="1.0" encoding="utf-8"?>
+<openerp>
+    <data>
+        <record id="view_account_payment_form_inherited" model="ir.ui.view">
+            <field name="name">account.payment.form.inherited</field>
+            <field name="model">account.payment</field>
+            <field name="inherit_id" ref="account.view_account_payment_form" />
+            <field name="arch" type="xml">
+                <xpath expr="//field[@name='payment_method']" position="after">
+                    <!-- TODO: the context="{'default_partner_id': partner_id}" is not working -->
+                    <field name="partner_bank_account_id" attrs="{'invisible': ['|', ('payment_method_code', '!=', 'sepa_ct'), ('partner_id', '=', False)], 'required': [('payment_method_code', '=', 'sepa_ct')], 'readonly': [('state', '!=', 'draft')]}" domain="[('partner_id', '=', partner_id)]" context="{'default_partner_id': partner_id}"/>
+                </xpath>
+            </field>
+        </record>
+
+        <record id="view_account_payment_invoice_form_inherited" model="ir.ui.view">
+            <field name="name">account.payment.invoice.form.inherited</field>
+            <field name="model">account.payment</field>
+            <field name="inherit_id" ref="account.view_account_payment_invoice_form" />
+            <field name="arch" type="xml">
+                <xpath expr="//field[@name='payment_method']" position="after">
+                    <field name="partner_bank_account_id" attrs="{'invisible': ['|', ('payment_method_code', '!=', 'sepa_ct'), ('partner_id', '=', False)], 'required': [('payment_method_code', '=', 'sepa_ct')]}" domain="[('partner_id', '=', partner_id)]" context="{'default_partner_id': partner_id}"/>
+                </xpath>
+            </field>
+        </record>
+
+        <record id="view_account_payment_from_invoices_inherited" model="ir.ui.view">
+            <field name="name">account.register.payments.wizard.inherited</field>
+            <field name="model">account.register.payments</field>
+            <field name="inherit_id" ref="account.view_account_payment_from_invoices" />
+            <field name="arch" type="xml">
+                <xpath expr="//field[@name='payment_method']" position="after">
+                    <field name="partner_bank_account_id" attrs="{'invisible': ['|', ('payment_method_code', '!=', 'sepa_ct'), ('partner_id', '=', False)], 'required': [('payment_method_code', '=', 'sepa_ct')]}" domain="[('partner_id', '=', partner_id)]" context="{'default_partner_id': partner_id}"/>
+                </xpath>
+            </field>
+        </record>
+    </data>
+</openerp>
diff --git a/addons/account_sepa/views/res_company_view.xml b/addons/account_sepa/views/res_company_view.xml
new file mode 100644
index 0000000..8c8c95c
--- /dev/null
+++ b/addons/account_sepa/views/res_company_view.xml
@@ -0,0 +1,19 @@
+<?xml version="1.0" encoding="utf-8"?>
+<openerp>
+    <data>
+        <record id="view_company_form_inherited" model="ir.ui.view">
+            <field name="name">res.company.form.inherited</field>
+            <field name="inherit_id" ref="base.view_company_form"/>
+            <field name="model">res.company</field>
+            <field name="arch" type="xml">
+                <group name="account_grp" position="after">
+                    <group name="sepa" string="SEPA">
+                        <field name="sepa_initiating_party_name"/>
+                        <field name="sepa_orgid_id"/>
+                        <field name="sepa_orgid_issr"/>
+                    </group>
+                </group>
+            </field>
+        </record>
+    </data>
+</openerp>
diff --git a/addons/account_sepa/views/sepa_credit_transfer_view.xml b/addons/account_sepa/views/sepa_credit_transfer_view.xml
new file mode 100644
index 0000000..ddc780e
--- /dev/null
+++ b/addons/account_sepa/views/sepa_credit_transfer_view.xml
@@ -0,0 +1,56 @@
+<?xml version="1.0" encoding="utf-8"?>
+<openerp>
+    <data>
+
+        <record id="view_sepa_credit_transfer_download" model="ir.ui.view">
+            <field name="name">account.sepa.credit.transfer.download</field>
+            <field name="model">account.sepa.credit.transfer</field>
+            <field name="arch" type="xml">
+                <form string="Download SEPA Credit Transfer File" version="7.0">
+                    <group>
+                        <p class="oe_grey" colspan="4">
+                           Click on the file to save it somewhere on your computer. Then upload that file on your bank's homebanking website to order the credit transfer.
+                        </p>
+                        <field name="file" filename="filename"/>
+                        <field name="filename" invisible="True"/>
+                    </group>
+                    <footer>
+                        <button string='Ok' class="oe_highlight" special="cancel"/>
+                        or
+                        <button string="Cancel" class="oe_link" special="cancel"/>
+                    </footer>
+                </form>
+            </field>
+        </record>
+
+        <record model="ir.actions.server" id="action_account_download_sepa_sct_file">
+            <field name="name">Download SEPA Payment</field>
+            <field name="model_id" ref="account.model_account_payment"/>
+            <field name="code">
+                if context.get('active_model') == 'account.payment' and context.get('active_ids'):
+                    action = self.pool['account.sepa.credit.transfer'].create_sepa_credit_transfer(cr, uid, context['active_ids'], context=context)
+            </field>
+        </record>
+
+        <record model="ir.values" id="account_download_sepa_sct_file">
+            <field name="model_id" ref="account.model_account_payment" />
+            <field name="name">Download SEPA Payment</field>
+            <field name="key2">client_action_multi</field>
+            <field name="value" eval="'ir.actions.server,' +str(ref('action_account_download_sepa_sct_file'))" />
+            <field name="key">action</field>
+            <field name="model">account.payment</field>
+        </record>
+
+        <record id="view_sepa_credit_transfer_search" model="ir.ui.view">
+            <field name="name">account.sepa.credit.transfer.search</field>
+            <field name="model">account.payment</field>
+            <field name="inherit_id" ref="account.view_account_payment_search"/>
+            <field name="arch" type="xml">
+                <xpath expr="//filter[@name='state_sent']" position="before">
+                    <filter string="Sepa Payments To Send" domain="[('payment_method.code', '=', 'sepa_ct'), ('state','=','posted')]" name="sepa_to_send"/>
+                </xpath>
+            </field>
+        </record>
+
+    </data>
+</openerp>
diff --git a/addons/base_iban/__openerp__.py b/addons/base_iban/__openerp__.py
index b7196ed..e7c3d4d 100644
--- a/addons/base_iban/__openerp__.py
+++ b/addons/base_iban/__openerp__.py
@@ -26,12 +26,13 @@
 This module installs the base for IBAN (International Bank Account Number) bank accounts and checks for it's validity.
 ======================================================================================================================
 
-The ability to extract the correctly represented local accounts from IBAN accounts 
+The ability to extract the correctly represented local accounts from IBAN accounts
 with a single statement.
     """,
     'author': 'OpenERP SA',
     'website': 'https://www.odoo.com',
     'depends': ['base'],
+    'demo': ['demo/iban_demo.xml'],
     'data': ['base_iban_data.xml' , 'base_iban_view.xml'],
     'installable': True,
     'auto_install': False,
diff --git a/addons/base_iban/base_iban.py b/addons/base_iban/base_iban.py
index 3a48afe..ccc6b12 100644
--- a/addons/base_iban/base_iban.py
+++ b/addons/base_iban/base_iban.py
@@ -1,182 +1,144 @@
 # -*- coding: utf-8 -*-
-##############################################################################
-#
-#    OpenERP, Open Source Management Solution
-#    Copyright (C) 2004-2010 Tiny SPRL (<http://tiny.be>).
-#
-#    This program is free software: you can redistribute it and/or modify
-#    it under the terms of the GNU Affero General Public License as
-#    published by the Free Software Foundation, either version 3 of the
-#    License, or (at your option) any later version.
-#
-#    This program is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU Affero General Public License for more details.
-#
-#    You should have received a copy of the GNU Affero General Public License
-#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
-#
-##############################################################################
-import string
-
-from openerp.osv import fields, osv
-from openerp.tools.translate import _
-
-# Reference Examples of IBAN
-_ref_iban = { 'al':'ALkk BBBS SSSK CCCC CCCC CCCC CCCC', 'ad':'ADkk BBBB SSSS CCCC CCCC CCCC',
-'at':'ATkk BBBB BCCC CCCC CCCC', 'be': 'BEkk BBBC CCCC CCKK', 'ba': 'BAkk BBBS SSCC CCCC CCKK',
-'bg': 'BGkk BBBB SSSS DDCC CCCC CC', 'bh': 'BHkk BBBB SSSS SSSS SSSS SS',
-'cr': 'CRkk BBBC CCCC CCCC CCCC C',
-'hr': 'HRkk BBBB BBBC CCCC CCCC C', 'cy': 'CYkk BBBS SSSS CCCC CCCC CCCC CCCC',
-'cz': 'CZkk BBBB SSSS SSCC CCCC CCCC', 'dk': 'DKkk BBBB CCCC CCCC CC',
-'do': 'DOkk BBBB CCCC CCCC CCCC CCCC CCCC',
- 'ee': 'EEkk BBSS CCCC CCCC CCCK', 'fo': 'FOkk CCCC CCCC CCCC CC',
- 'fi': 'FIkk BBBB BBCC CCCC CK', 'fr': 'FRkk BBBB BGGG GGCC CCCC CCCC CKK',
- 'ge': 'GEkk BBCC CCCC CCCC CCCC CC', 'de': 'DEkk BBBB BBBB CCCC CCCC CC',
- 'gi': 'GIkk BBBB CCCC CCCC CCCC CCC', 'gr': 'GRkk BBBS SSSC CCCC CCCC CCCC CCC',
- 'gl': 'GLkk BBBB CCCC CCCC CC', 'hu': 'HUkk BBBS SSSC CCCC CCCC CCCC CCCC',
- 'is':'ISkk BBBB SSCC CCCC XXXX XXXX XX', 'ie': 'IEkk BBBB SSSS SSCC CCCC CC',
- 'il': 'ILkk BBBS SSCC CCCC CCCC CCC', 'it': 'ITkk KBBB BBSS SSSC CCCC CCCC CCC',
- 'kz': 'KZkk BBBC CCCC CCCC CCCC', 'kw': 'KWkk BBBB CCCC CCCC CCCC CCCC CCCC CC',
- 'lv': 'LVkk BBBB CCCC CCCC CCCC C',
-'lb': 'LBkk BBBB CCCC CCCC CCCC CCCC CCCC', 'li': 'LIkk BBBB BCCC CCCC CCCC C',
-'lt': 'LTkk BBBB BCCC CCCC CCCC', 'lu': 'LUkk BBBC CCCC CCCC CCCC' ,
-'mk': 'MKkk BBBC CCCC CCCC CKK', 'mt': 'MTkk BBBB SSSS SCCC CCCC CCCC CCCC CCC',
-'mr': 'MRkk BBBB BSSS SSCC CCCC CCCC CKK',
-'mu': 'MUkk BBBB BBSS CCCC CCCC CCCC CCCC CC', 'mc': 'MCkk BBBB BGGG GGCC CCCC CCCC CKK',
-'me': 'MEkk BBBC CCCC CCCC CCCC KK',
-'nl': 'NLkk BBBB CCCC CCCC CC', 'no': 'NOkk BBBB CCCC CCK',
-'pl':'PLkk BBBS SSSK CCCC CCCC CCCC CCCC',
-'pt': 'PTkk BBBB SSSS CCCC CCCC CCCK K', 'ro': 'ROkk BBBB CCCC CCCC CCCC CCCC',
-'sm': 'SMkk KBBB BBSS SSSC CCCC CCCC CCC', 'sa': 'SAkk BBCC CCCC CCCC CCCC CCCC',
-'rs': 'RSkk BBBC CCCC CCCC CCCC KK', 'sk': 'SKkk BBBB SSSS SSCC CCCC CCCC',
-'si': 'SIkk BBSS SCCC CCCC CKK', 'es': 'ESkk BBBB SSSS KKCC CCCC CCCC',
-'se': 'SEkk BBBB CCCC CCCC CCCC CCCC', 'ch': 'CHkk BBBB BCCC CCCC CCCC C',
-'tn': 'TNkk BBSS SCCC CCCC CCCC CCCC', 'tr': 'TRkk BBBB BRCC CCCC CCCC CCCC CC',
-'ae': 'AEkk BBBC CCCC CCCC CCCC CCC',
-'gb': 'GBkk BBBB SSSS SSCC CCCC CC',
-}
 
-def _format_iban(iban_str):
-    '''
-    This function removes all characters from given 'iban_str' that isn't a alpha numeric and converts it to upper case.
-    '''
-    res = ""
-    if iban_str:
-        for char in iban_str:
-            if char.isalnum():
-                res += char.upper()
-    return res
-
-def _pretty_iban(iban_str):
-    "return iban_str in groups of four characters separated by a single space"
-    res = []
-    while iban_str:
-        res.append(iban_str[:4])
-        iban_str = iban_str[4:]
-    return ' '.join(res)
-
-class res_partner_bank(osv.osv):
+import re
+
+from openerp import models, api, _
+from openerp.exceptions import UserError, ValidationError
+
+
+def normalize_iban(iban):
+    return re.sub('[\W_]', '', iban)
+
+def pretty_iban(iban):
+    """ return iban in groups of four characters separated by a single space """
+    return ' '.join([iban[i:i + 4] for i in range(0, len(iban), 4)])
+
+def get_bban_from_iban(iban):
+    """ Returns the basic bank account number corresponding to an IBAN.
+        Note : the BBAN is not the same as the domestic bank account number !
+        The relation between IBAN, BBAN and domestic can be found here : http://www.ecbs.org/iban.htm
+    """
+    return normalize_iban(iban)[4:]
+
+def validate_iban(iban):
+    iban = normalize_iban(iban)
+    if not iban:
+        raise ValidationError(_("No IBAN !"))
+
+    country_code = iban[:2].lower()
+    if country_code not in _map_iban_template:
+        raise ValidationError(_("The IBAN is invalid, it should begin with the country code"))
+
+    iban_template = _map_iban_template[country_code]
+    if len(iban) != len(iban_template.replace(' ', '')):
+        raise ValidationError(_("The IBAN does not seem to be correct. You should have entered something like this %s\n"\
+            "Where B = National bank code, S = Branch code, C = Account No, k = Check digit" % iban_template))
+
+    check_chars = iban[4:] + iban[:4]
+    digits = int(''.join(str(int(char, 36)) for char in check_chars))  # BASE 36: 0..9,A..Z -> 0..35
+    if digits % 97 != 1:
+        raise ValidationError(_("This IBAN does not pass the validation check, please verify it."))
+
+
+class res_partner_bank(models.Model):
     _inherit = "res.partner.bank"
 
+    def get_bban(self):
+        if self.state != 'iban':
+            raise UserError(_("Cannot compute the BBAN because the account number is not an IBAN."))
+        return get_bban_from_iban(self.acc_number)
+
     def create(self, cr, uid, vals, context=None):
-        #overwrite to format the iban number correctly
-        if (vals.get('state',False)=='iban') and vals.get('acc_number', False):
-            vals['acc_number'] = _format_iban(vals['acc_number'])
-            vals['acc_number'] = _pretty_iban(vals['acc_number'])
+        if (vals.get('state') == 'iban') and vals.get('acc_number'):
+            vals['acc_number'] = pretty_iban(normalize_iban(vals['acc_number']))
         return super(res_partner_bank, self).create(cr, uid, vals, context)
 
     def write(self, cr, uid, ids, vals, context=None):
-        #overwrite to format the iban number correctly
-        if (vals.get('state',False)=='iban') and vals.get('acc_number', False):
-            vals['acc_number'] = _format_iban(vals['acc_number'])
-            vals['acc_number'] = _pretty_iban(vals['acc_number'])
+        if (vals.get('state') == 'iban') and vals.get('acc_number'):
+            vals['acc_number'] = pretty_iban(normalize_iban(vals['acc_number']))
         return super(res_partner_bank, self).write(cr, uid, ids, vals, context)
 
-    def is_iban_valid(self, cr, uid, iban, context=None):
-        """ Check if IBAN is valid or not
-            @param iban: IBAN as string
-            @return: True if IBAN is valid, False otherwise
-        """
-        if not iban:
-            return False
-        iban = _format_iban(iban).lower()
-        if iban[:2] in _ref_iban and len(iban) != len(_format_iban(_ref_iban[iban[:2]])):
-            return False
-        #the four first digits have to be shifted to the end
-        iban = iban[4:] + iban[:4]
-        #letters have to be transformed into numbers (a = 10, b = 11, ...)
-        iban2 = ""
-        for char in iban:
-            if char.isalpha():
-                iban2 += str(ord(char)-87)
-            else:
-                iban2 += char
-        #iban is correct if modulo 97 == 1
-        return int(iban2) % 97 == 1
-
-    def check_iban(self, cr, uid, ids, context=None):
-        '''
-        Check the IBAN number
-        '''
-        for bank_acc in self.browse(cr, uid, ids, context=context):
-            if bank_acc.state != 'iban':
-                continue
-            if not self.is_iban_valid(cr, uid, bank_acc.acc_number, context=context):
-                return False
-        return True
-
-    def _construct_constraint_msg(self, cr, uid, ids, context=None):
-
-        def default_iban_check(iban_cn):
-             return iban_cn and iban_cn[0] in string.ascii_lowercase and iban_cn[1] in string.ascii_lowercase
-
-        iban_country = self.browse(cr, uid, ids)[0].acc_number and self.browse(cr, uid, ids)[0].acc_number[:2].lower()
-        if default_iban_check(iban_country):
-            if iban_country in _ref_iban:
-                return _('The IBAN does not seem to be correct. You should have entered something like this %s'), \
-                        ('%s \nWhere B = National bank code, S = Branch code,'\
-                         ' C = Account No, K = Check digit' % _ref_iban[iban_country])
-            return _('This IBAN does not pass the validation check, please verify it'), ()
-        return _('The IBAN is invalid, it should begin with the country code'), ()
-
-    def _check_bank(self, cr, uid, ids, context=None):
-        for partner_bank in self.browse(cr, uid, ids, context=context):
-            if partner_bank.state == 'iban' and not partner_bank.bank.bic:
-                return False
-        return True
-
-    def get_bban_from_iban(self, cr, uid, ids, context=None):
-        '''
-        This function returns the bank account number computed from the iban account number, thanks to the mapping_list dictionary that contains the rules associated to its country.
-        '''
-        res = {}
-        mapping_list = {
-         #TODO add rules for others countries
-            'be': lambda x: x[4:],
-            'fr': lambda x: x[14:],
-            'ch': lambda x: x[9:],
-            'gb': lambda x: x[14:],
-        }
-        for record in self.browse(cr, uid, ids, context=context):
-            if not record.acc_number:
-                res[record.id] = False
-                continue
-            res[record.id] = False
-            for code, function in mapping_list.items():
-                if record.acc_number.lower().startswith(code):
-                    res[record.id] = function(record.acc_number)
-                    break
-        return res
-
-    _columns = {
-        # Deprecated: we keep it for backward compatibility, to be removed in v7
-        # We use acc_number instead of IBAN since v6.1, but we keep this field
-        # to not break community modules.
-        'iban': fields.related('acc_number', string='IBAN', size=34, readonly=True, help="International Bank Account Number", type="char"),
-    }
-    _constraints = [
-        (check_iban, _construct_constraint_msg, ["iban", "acc_number", "state"]),
-        (_check_bank, '\nPlease define BIC/Swift code on bank for bank type IBAN Account to make valid payments', ['bic'])
-    ]
+    @api.one
+    @api.constrains('state', 'acc_number')
+    def _check_iban(self):
+        if self.state == 'iban':
+            validate_iban(self.acc_number)
+
+    @api.one
+    @api.constrains('state', 'bank_bic')
+    def _check_bank_bic(self):
+        if self.state == 'iban' and not self.bank_bic:
+            raise ValidationError(_("Please define BIC/Swift code on bank for bank type IBAN Account to make valid payments."))
+
+
+# Map ISO 3166-1 -> IBAN template, as described here :
+# http://en.wikipedia.org/wiki/International_Bank_Account_Number#IBAN_formats_by_country
+_map_iban_template = {
+    'ad': 'ADkk BBBB SSSS CCCC CCCC CCCC',  # Andorra
+    'ae': 'AEkk BBBC CCCC CCCC CCCC CCC',  # United Arab Emirates
+    'al': 'ALkk BBBS SSSK CCCC CCCC CCCC CCCC',  # Albania
+    'at': 'ATkk BBBB BCCC CCCC CCCC',  # Austria
+    'az': 'AZkk BBBB CCCC CCCC CCCC CCCC CCCC',  # Azerbaijan
+    'ba': 'BAkk BBBS SSCC CCCC CCKK',  # Bosnia and Herzegovina
+    'be': 'BEkk BBBC CCCC CCXX',  # Belgium
+    'bg': 'BGkk BBBB SSSS DDCC CCCC CC',  # Bulgaria
+    'bh': 'BHkk BBBB CCCC CCCC CCCC CC',  # Bahrain
+    'br': 'BRkk BBBB BBBB SSSS SCCC CCCC CCCT N',  # Brazil
+    'ch': 'CHkk BBBB BCCC CCCC CCCC C',  # Switzerland
+    'cr': 'CRkk BBBC CCCC CCCC CCCC C',  # Costa Rica
+    'cy': 'CYkk BBBS SSSS CCCC CCCC CCCC CCCC',  # Cyprus
+    'cz': 'CZkk BBBB SSSS SSCC CCCC CCCC',  # Czech Republic
+    'de': 'DEkk BBBB BBBB CCCC CCCC CC',  # Germany
+    'dk': 'DKkk BBBB CCCC CCCC CC',  # Denmark
+    'do': 'DOkk BBBB CCCC CCCC CCCC CCCC CCCC',  # Dominican Republic
+    'ee': 'EEkk BBSS CCCC CCCC CCCK',  # Estonia
+    'es': 'ESkk BBBB SSSS KKCC CCCC CCCC',  # Spain
+    'fi': 'FIkk BBBB BBCC CCCC CK',  # Finland
+    'fo': 'FOkk CCCC CCCC CCCC CC',  # Faroe Islands
+    'fr': 'FRkk BBBB BGGG GGCC CCCC CCCC CKK',  # France
+    'gb': 'GBkk BBBB SSSS SSCC CCCC CC',  # United Kingdom
+    'ge': 'GEkk BBCC CCCC CCCC CCCC CC',  # Georgia
+    'gi': 'GIkk BBBB CCCC CCCC CCCC CCC',  # Gibraltar
+    'gl': 'GLkk BBBB CCCC CCCC CC',  # Greenland
+    'gr': 'GRkk BBBS SSSC CCCC CCCC CCCC CCC',  # Greece
+    'gt': 'GTkk BBBB MMTT CCCC CCCC CCCC CCCC',  # Guatemala
+    'hr': 'HRkk BBBB BBBC CCCC CCCC C',  # Croatia
+    'hu': 'HUkk BBBS SSSC CCCC CCCC CCCC CCCC',  # Hungary
+    'ie': 'IEkk BBBB SSSS SSCC CCCC CC',  # Ireland
+    'il': 'ILkk BBBS SSCC CCCC CCCC CCC',  # Israel
+    'is': 'ISkk BBBB SSCC CCCC XXXX XXXX XX',  # Iceland
+    'it': 'ITkk KBBB BBSS SSSC CCCC CCCC CCC',  # Italy
+    'jo': 'JOkk BBBB NNNN CCCC CCCC CCCC CCCC CC',  # Jordan
+    'kw': 'KWkk BBBB CCCC CCCC CCCC CCCC CCCC CC',  # Kuwait
+    'kz': 'KZkk BBBC CCCC CCCC CCCC',  # Kazakhstan
+    'lb': 'LBkk BBBB CCCC CCCC CCCC CCCC CCCC',  # Lebanon
+    'li': 'LIkk BBBB BCCC CCCC CCCC C',  # Liechtenstein
+    'lt': 'LTkk BBBB BCCC CCCC CCCC',  # Lithuania
+    'lu': 'LUkk BBBC CCCC CCCC CCCC',  # Luxembourg
+    'lv': 'LVkk BBBB CCCC CCCC CCCC C',  # Latvia
+    'mc': 'MCkk BBBB BGGG GGCC CCCC CCCC CKK',  # Monaco
+    'md': 'MDkk BBCC CCCC CCCC CCCC CCCC',  # Moldova
+    'me': 'MEkk BBBC CCCC CCCC CCCC KK',  # Montenegro
+    'mk': 'MKkk BBBC CCCC CCCC CKK',  # Macedonia
+    'mr': 'MRkk BBBB BSSS SSCC CCCC CCCC CKK',  # Mauritania
+    'mt': 'MTkk BBBB SSSS SCCC CCCC CCCC CCCC CCC',  # Malta
+    'mu': 'MUkk BBBB BBSS CCCC CCCC CCCC CCCC CC',  # Mauritius
+    'nl': 'NLkk BBBB CCCC CCCC CC',  # Netherlands
+    'no': 'NOkk BBBB CCCC CCK',  # Norway
+    'pk': 'PKkk BBBB CCCC CCCC CCCC CCCC',  # Pakistan
+    'pl': 'PLkk BBBS SSSK CCCC CCCC CCCC CCCC',  # Poland
+    'ps': 'PSkk BBBB XXXX XXXX XCCC CCCC CCCC C',  # Palestinian
+    'pt': 'PTkk BBBB SSSS CCCC CCCC CCCK K',  # Portugal
+    'qa': 'QAkk BBBB CCCC CCCC CCCC CCCC CCCC C',  # Qatar
+    'ro': 'ROkk BBBB CCCC CCCC CCCC CCCC',  # Romania
+    'rs': 'RSkk BBBC CCCC CCCC CCCC KK',  # Serbia
+    'sa': 'SAkk BBCC CCCC CCCC CCCC CCCC',  # Saudi Arabia
+    'se': 'SEkk BBBB CCCC CCCC CCCC CCCC',  # Sweden
+    'si': 'SIkk BBSS SCCC CCCC CKK',  # Slovenia
+    'sk': 'SKkk BBBB SSSS SSCC CCCC CCCC',  # Slovakia
+    'sm': 'SMkk KBBB BBSS SSSC CCCC CCCC CCC',  # San Marino
+    'tn': 'TNkk BBSS SCCC CCCC CCCC CCCC',  # Tunisia
+    'tr': 'TRkk BBBB BRCC CCCC CCCC CCCC CC',  # Turkey
+    'vg': 'VGkk BBBB CCCC CCCC CCCC CCCC',  # Virgin Islands
+    'xk': 'XKkk BBBB CCCC CCCC CCCC',  # Kosovo
+}
diff --git a/addons/base_iban/demo/iban_demo.xml b/addons/base_iban/demo/iban_demo.xml
new file mode 100644
index 0000000..602c2b4
--- /dev/null
+++ b/addons/base_iban/demo/iban_demo.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<openerp>
+    <data noupdate="1">
+
+        <record id="bank_iban_asustek" model="res.partner.bank">
+            <field name="state">iban</field>
+            <field name="acc_number">BE39103123456719</field>
+            <field name="bank_name">Crelan</field>
+            <field name="bank_bic">NICABEBB</field>
+            <field name="partner_id" ref="base.res_partner_1"/>
+        </record>
+
+        <record id="bank_iban_china_export" model="res.partner.bank">
+            <field name="state">iban</field>
+            <field name="acc_number">SI56191000000123438</field>
+            <field name="bank_name">CBC</field>
+            <field name="bank_bic">CREGBEBB</field>
+            <field name="partner_id" ref="base.res_partner_3"/>
+        </record>
+
+        <record id="bank_iban_main_partner" model="res.partner.bank">
+            <field name="state">iban</field>
+            <field name="acc_number">BE61310126985517</field>
+            <field name="bank_name">ING</field>
+            <field name="bank_bic">BBRUBEBB</field>
+            <field name="partner_id" ref="base.res_partner_4"/>
+        </record>
+
+    </data>
+</openerp>
diff --git a/addons/l10n_us_check_printing/__init__.py b/addons/l10n_us_check_printing/__init__.py
new file mode 100644
index 0000000..9383ead
--- /dev/null
+++ b/addons/l10n_us_check_printing/__init__.py
@@ -0,0 +1,6 @@
+# -*- coding: utf-8 -*-
+
+import res_company
+import account_payment
+
+import report
diff --git a/addons/l10n_us_check_printing/__openerp__.py b/addons/l10n_us_check_printing/__openerp__.py
new file mode 100644
index 0000000..ae73619
--- /dev/null
+++ b/addons/l10n_us_check_printing/__openerp__.py
@@ -0,0 +1,33 @@
+# -*- coding: utf-8 -*-
+{
+    'name': 'US Check Printing',
+    'version': '1.0',
+    'author': 'Odoo SA',
+    'category': 'Localization/Checks Printing',
+    'summary': 'Print US Checks',
+    'description': """
+US Check Printing
+=================
+This module allows to print your payments on pre-printed check paper.
+You can configure the output (layout, stubs informations, etc.) in company settings, and manage the checks numbering (if you use pre-printed checks without numbers) in journal settings.
+
+Supported formats
+-----------------
+- Check on top : Quicken / QuickBooks standard
+- Check on middle: Peachtree standard
+- Check on bottom: ADP standard
+    """,
+    'website': 'https://www.odoo.com/page/accounting',
+    'depends' : ['account_check_writing', 'l10n_us'],
+    'data': [
+        'data/us_check_printing.xml',
+        'report/print_check.xml',
+        'report/print_check_top.xml',
+        'report/print_check_middle.xml',
+        'report/print_check_bottom.xml',
+        'views/account_payment_view.xml',
+        'views/res_company_view.xml',
+    ],
+    'installable': True,
+    'auto_install': True,
+}
diff --git a/addons/l10n_us_check_printing/account_payment.py b/addons/l10n_us_check_printing/account_payment.py
new file mode 100644
index 0000000..47ccb57
--- /dev/null
+++ b/addons/l10n_us_check_printing/account_payment.py
@@ -0,0 +1,13 @@
+# -*- coding: utf-8 -*-
+
+from openerp import models, api
+
+class account_payment(models.Model):
+    _inherit = "account.payment"
+
+    @api.multi
+    def print_checks(self):
+        us_check_layout = self[0].company_id.us_check_layout
+        if us_check_layout != 'disabled':
+            return self.env['report'].get_action(self, self[0].company_id.us_check_layout)
+        super(account_payment, self).print_checks()
diff --git a/addons/l10n_us_check_printing/data/us_check_printing.xml b/addons/l10n_us_check_printing/data/us_check_printing.xml
new file mode 100644
index 0000000..ed06fc6
--- /dev/null
+++ b/addons/l10n_us_check_printing/data/us_check_printing.xml
@@ -0,0 +1,58 @@
+<?xml version="1.0" encoding="utf-8"?>
+<openerp>
+    <data noupdate="1">
+
+        <record id="paperformat_check_us" model="report.paperformat">
+            <field name="name">US Check Letter</field>
+            <field name="default" eval="False" />
+            <field name="format">Letter</field>
+            <field name="page_height">0</field>
+            <field name="page_width">0</field>
+            <field name="orientation">Portrait</field>
+            <field name="margin_top">0</field>
+            <field name="margin_bottom">0</field>
+            <field name="margin_left">0</field>
+            <field name="margin_right">0</field>
+            <field name="header_line" eval="False" />
+            <field name="header_spacing">0</field>
+            <field name="dpi">90</field>
+        </record>
+
+        <report id="action_print_check_top"
+            string="Print Check (Top)"
+            model="account.payment"
+            name="l10n_us_check_printing.print_check_top"
+            file="l10n_us_check_printing.print_check_top"
+            report_type="qweb-pdf"
+            attachment_use="True"
+            attachment="'check_'+(object.partner_id.name)+'_'+(object.name)+'.pdf'" />
+        <record id="l10n_us_check_printing.action_print_check_top" model="ir.actions.report.xml">
+            <field name="paperformat_id" ref="l10n_us_check_printing.paperformat_check_us"/>
+        </record>
+
+        <report id="action_print_check_middle"
+            string="Print Check (Middle)"
+            model="account.payment"
+            name="l10n_us_check_printing.print_check_middle"
+            file="l10n_us_check_printing.print_check_middle"
+            report_type="qweb-pdf"
+            attachment_use="True"
+            attachment="'check_'+(object.partner_id.name)+'_'+(object.name)+'.pdf'" />
+        <record id="l10n_us_check_printing.action_print_check_middle" model="ir.actions.report.xml">
+            <field name="paperformat_id" ref="l10n_us_check_printing.paperformat_check_us"/>
+        </record>
+
+        <report id="action_print_check_bottom"
+            string="Print Check (Bottom)"
+            model="account.payment"
+            name="l10n_us_check_printing.print_check_bottom"
+            file="l10n_us_check_printing.print_check_bottom"
+            report_type="qweb-pdf"
+            attachment_use="True"
+            attachment="'check_'+(object.partner_id.name)+'_'+(object.name)+'.pdf'" />
+        <record id="l10n_us_check_printing.action_print_check_bottom" model="ir.actions.report.xml">
+            <field name="paperformat_id" ref="l10n_us_check_printing.paperformat_check_us"/>
+        </record>
+
+    </data>
+</openerp>
diff --git a/addons/l10n_us_check_printing/i18n/account_check_writing.pot b/addons/l10n_us_check_printing/i18n/account_check_writing.pot
new file mode 100644
index 0000000..5daf4bd
--- /dev/null
+++ b/addons/l10n_us_check_printing/i18n/account_check_writing.pot
@@ -0,0 +1,229 @@
+# Translation of Odoo Server.
+# This file contains the translation of the following modules:
+#	* account_check_writing
+#
+msgid ""
+msgstr ""
+"Project-Id-Version: Odoo Server 8.0\n"
+"Report-Msgid-Bugs-To: \n"
+"POT-Creation-Date: 2015-01-21 14:07+0000\n"
+"PO-Revision-Date: 2015-01-21 14:07+0000\n"
+"Last-Translator: <>\n"
+"Language-Team: \n"
+"MIME-Version: 1.0\n"
+"Content-Type: text/plain; charset=UTF-8\n"
+"Content-Transfer-Encoding: \n"
+"Plural-Forms: \n"
+
+#. module: account_check_writing
+#: model:ir.actions.act_window,help:account_check_writing.action_write_check
+msgid "<p class=\"oe_view_nocontent_create\">\n"
+"                Click to create a new check. \n"
+"              </p><p>\n"
+"                The check payment form allows you to track the payment you do\n"
+"                to your suppliers using checks. When you select a supplier, the\n"
+"                payment method and an amount for the payment, Odoo will\n"
+"                propose to reconcile your payment with the open supplier\n"
+"                invoices or bills.\n"
+"              </p>\n"
+"            "
+msgstr ""
+
+#. module: account_check_writing
+#: model:ir.model,name:account_check_writing.model_account_voucher
+msgid "Accounting Voucher"
+msgstr ""
+
+#. module: account_check_writing
+#: field:account.voucher,allow_check:0
+msgid "Allow Check Writing"
+msgstr ""
+
+#. module: account_check_writing
+#: field:account.journal,allow_check_writing:0
+msgid "Allow Check writing"
+msgstr ""
+
+#. module: account_check_writing
+#: field:account.voucher,amount_in_word:0
+msgid "Amount in Word"
+msgstr ""
+
+#. module: account_check_writing
+#: view:account.check.write:account_check_writing.view_account_check_write
+msgid "Cancel"
+msgstr ""
+
+#. module: account_check_writing
+#: view:account.check.write:account_check_writing.view_account_check_write
+#: model:ir.actions.report.xml,name:account_check_writing.action_report_check
+msgid "Check"
+msgstr ""
+
+#. module: account_check_writing
+#: field:res.company,check_layout:0
+msgid "Check Layout"
+msgstr ""
+
+#. module: account_check_writing
+#: help:account.journal,use_preprint_check:0
+msgid "Check if you use a preformated sheet for check"
+msgstr ""
+
+#. module: account_check_writing
+#: selection:res.company,check_layout:0
+msgid "Check in middle"
+msgstr ""
+
+#. module: account_check_writing
+#: selection:res.company,check_layout:0
+msgid "Check on Top"
+msgstr ""
+
+#. module: account_check_writing
+#: selection:res.company,check_layout:0
+msgid "Check on bottom"
+msgstr ""
+
+#. module: account_check_writing
+#: help:res.company,check_layout:0
+msgid "Check on top is compatible with Quicken, QuickBooks and Microsoft Money. Check in middle is compatible with Peachtree, ACCPAC and DacEasy. Check on bottom is compatible with Peachtree, ACCPAC and DacEasy only"
+msgstr ""
+
+#. module: account_check_writing
+#: help:account.journal,allow_check_writing:0
+msgid "Check this if the journal is to be used for writing checks."
+msgstr ""
+
+#. module: account_check_writing
+#: model:ir.model,name:account_check_writing.model_res_company
+msgid "Companies"
+msgstr ""
+
+#. module: account_check_writing
+#: field:account.check.write,create_uid:0
+msgid "Created by"
+msgstr ""
+
+#. module: account_check_writing
+#: field:account.check.write,create_date:0
+msgid "Created on"
+msgstr ""
+
+#. module: account_check_writing
+#: view:website:account_check_writing.report_check
+msgid "Description"
+msgstr ""
+
+#. module: account_check_writing
+#: view:website:account_check_writing.report_check
+msgid "Discount"
+msgstr ""
+
+#. module: account_check_writing
+#: view:website:account_check_writing.report_check
+msgid "Due Date"
+msgstr ""
+
+#. module: account_check_writing
+#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
+#, python-format
+msgid "Error!"
+msgstr ""
+
+#. module: account_check_writing
+#: field:account.check.write,id:0
+#: field:report.account_check_writing.report_check,id:0
+msgid "ID"
+msgstr ""
+
+#. module: account_check_writing
+#: model:ir.model,name:account_check_writing.model_account_journal
+msgid "Journal"
+msgstr ""
+
+#. module: account_check_writing
+#: field:account.check.write,write_uid:0
+msgid "Last Updated by"
+msgstr ""
+
+#. module: account_check_writing
+#: field:account.check.write,write_date:0
+msgid "Last Updated on"
+msgstr ""
+
+#. module: account_check_writing
+#: field:account.check.write,check_number:0
+msgid "Next Check Number"
+msgstr ""
+
+#. module: account_check_writing
+#: code:addons/account_check_writing/account_voucher.py:77
+#, python-format
+msgid "No check selected "
+msgstr ""
+
+#. module: account_check_writing
+#: code:addons/account_check_writing/wizard/account_check_batch_printing.py:59
+#, python-format
+msgid "One of the printed check already got a number."
+msgstr ""
+
+#. module: account_check_writing
+#: view:website:account_check_writing.report_check
+msgid "Open Balance"
+msgstr ""
+
+#. module: account_check_writing
+#: view:website:account_check_writing.report_check
+msgid "Original Amount"
+msgstr ""
+
+#. module: account_check_writing
+#: view:website:account_check_writing.report_check
+msgid "Payment"
+msgstr ""
+
+#. module: account_check_writing
+#: model:ir.model,name:account_check_writing.model_account_check_write
+msgid "Prin Check in Batch"
+msgstr ""
+
+#. module: account_check_writing
+#: view:account.check.write:account_check_writing.view_account_check_write
+#: view:account.voucher:account_check_writing.view_vendor_payment_check_form
+msgid "Print Check"
+msgstr ""
+
+#. module: account_check_writing
+#: model:ir.actions.act_window,name:account_check_writing.action_account_check_write
+msgid "Print Check in Batch"
+msgstr ""
+
+#. module: account_check_writing
+#: code:addons/account_check_writing/account_voucher.py:77
+#, python-format
+msgid "Printing error"
+msgstr ""
+
+#. module: account_check_writing
+#: help:account.check.write,check_number:0
+msgid "The number of the next check number to be printed."
+msgstr ""
+
+#. module: account_check_writing
+#: field:account.journal,use_preprint_check:0
+msgid "Use Preprinted Check"
+msgstr ""
+
+#. module: account_check_writing
+#: model:ir.actions.act_window,name:account_check_writing.action_write_check
+#: model:ir.ui.menu,name:account_check_writing.menu_action_write_check
+msgid "Write Checks"
+msgstr ""
+
+#. module: account_check_writing
+#: view:account.check.write:account_check_writing.view_account_check_write
+msgid "or"
+msgstr ""
+
diff --git a/addons/l10n_us_check_printing/report/__init__.py b/addons/l10n_us_check_printing/report/__init__.py
new file mode 100644
index 0000000..e0533fb
--- /dev/null
+++ b/addons/l10n_us_check_printing/report/__init__.py
@@ -0,0 +1,22 @@
+# -*- coding: utf-8 -*-
+##############################################################################
+#
+#    OpenERP, Open Source Management Solution
+#    Copyright (C) 2004-2010 Tiny SPRL (<http://tiny.be>).
+#
+#    This program is free software: you can redistribute it and/or modify
+#    it under the terms of the GNU Affero General Public License as
+#    published by the Free Software Foundation, either version 3 of the
+#    License, or (at your option) any later version.
+#
+#    This program is distributed in the hope that it will be useful,
+#    but WITHOUT ANY WARRANTY; without even the implied warranty of
+#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+#    GNU Affero General Public License for more details.
+#
+#    You should have received a copy of the GNU Affero General Public License
+#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+#
+##############################################################################
+
+import print_check
diff --git a/addons/l10n_us_check_printing/report/print_check.py b/addons/l10n_us_check_printing/report/print_check.py
new file mode 100644
index 0000000..1830da1
--- /dev/null
+++ b/addons/l10n_us_check_printing/report/print_check.py
@@ -0,0 +1,124 @@
+# -*- coding: utf-8 -*-
+
+from openerp.osv import osv
+from openerp.report import report_sxw
+from openerp.tools.translate import _
+
+LINE_FILLER = '*'
+INV_LINES_PER_STUB = 9
+
+class report_print_check(report_sxw.rml_parse):
+
+    def __init__(self, cr, uid, name, context):
+        super(report_print_check, self).__init__(cr, uid, name, context)
+        self.localcontext.update({
+            'pages': self.get_pages,
+        })
+
+    def fill_line(self, amount_str):
+        return amount_str and (amount_str+' ').ljust(200, LINE_FILLER) or ''
+
+    def get_pages(self, payment):
+        """ Returns the data structure used by the template : a list of dicts containing what to print on pages.
+        """
+        stub_pages = self.make_stub_pages(payment)
+        multi_stub = payment.company_id.us_check_multi_stub
+        credit_section = payment.company_id.us_check_credit_section
+        pages = []
+        for i in range(0, stub_pages != None and len(stub_pages) or 1):
+            pages.append({
+                'sequence_number': payment.check_number\
+                    if (payment.journal_id.check_manual_sequencing and payment.check_number != 0)\
+                    else False,
+                'payment_date': payment.payment_date,
+                'partner_name': payment.partner_id.name,
+                'currency': payment.currency_id,
+                'amount': payment.amount if i == 0 else 'VOID',
+                'amount_in_word': self.fill_line(payment.check_amount_in_words) if i == 0 else 'VOID',
+                'memo': payment.communication,
+                'stub_cropped': not multi_stub and len(payment.invoice_ids) > INV_LINES_PER_STUB,
+                'credit_section': credit_section,
+                # If the payment does not reference an invoice, there is no stub line to display
+                'stub_lines': stub_pages != None and stub_pages[i],
+            })
+        return pages
+
+    def make_stub_pages(self, payment):
+        """ The stub is the summary of paid invoices. It may spill on several pages, in which case only the check on
+            first page is valid. This function returns a list of stub lines per page.
+        """
+        if len(payment.invoice_ids) == 0:
+            return None
+
+        multi_stub = payment.company_id.us_check_multi_stub
+        credit_section = payment.company_id.us_check_credit_section
+
+        debits = payment.invoice_ids.filtered(lambda r: r.type == 'in_invoice')
+        credits = payment.invoice_ids.filtered(lambda r: r.type == 'in_refund')
+
+        # Prepare the stub lines
+        if not credit_section or not credits:
+            stub_lines = [self.make_stub_line(payment, inv) for inv in payment.invoice_ids]
+        else:
+            stub_lines = [{'header': True, 'name': "Invoices"}]
+            stub_lines += [self.make_stub_line(payment, inv) for inv in debits]
+            stub_lines += [{'header': True, 'name': "Credits"}]
+            stub_lines += [self.make_stub_line(payment, inv) for inv in credits]
+
+        # Crop the stub lines or split them on multiple pages
+        if not multi_stub:
+            # If we need to crop the stub, leave place for an ellipsis line
+            num_stub_lines = len(stub_lines) > INV_LINES_PER_STUB and INV_LINES_PER_STUB-1 or INV_LINES_PER_STUB
+            stub_pages = [stub_lines[:num_stub_lines]]
+        else:
+            stub_pages = []
+            i = 0
+            while i < len(stub_lines):
+                # Make sure we don't start the credit section at the end of a page
+                if len(stub_lines) >= i+INV_LINES_PER_STUB and stub_lines[i+INV_LINES_PER_STUB-1].get('credit_section_separator'):
+                    num_stub_lines = INV_LINES_PER_STUB-1 or INV_LINES_PER_STUB
+                else:
+                    num_stub_lines = INV_LINES_PER_STUB
+                stub_pages.append(stub_lines[i:i+num_stub_lines])
+                i += num_stub_lines
+
+        return stub_pages
+
+    def make_stub_line(self, payment, invoice):
+        """ Return the dict used to display an invoice/refund in the stub
+        """
+        invoice_payment_aml = payment.move_line_ids.filtered(lambda r: r.invoice == invoice and r.user_type.type in ('payable', 'receivable'))
+        invoice_sign = invoice.type == 'in_refund' and -1 or 1
+        discount = sum(il.price_unit * il.quantity * il.discount / 100 for il in invoice.invoice_line_ids)
+        if payment.currency_id != payment.journal_id.company_id.currency_id:
+            amount_paid = abs(invoice_payment_aml.amount_currency)
+        else:
+            amount_paid = abs(invoice_payment_aml.debit - invoice_payment_aml.credit)
+        return {
+            'due_date': invoice.date_due,
+            'number': invoice.number,
+            'amount_total': invoice_sign * invoice.amount_total,
+            'amount_residual': invoice_sign * invoice.residual,
+            'discount': discount,
+            'amount_paid': invoice_sign * amount_paid,
+            'currency': invoice.currency_id,
+        }
+
+
+class print_check_top(osv.AbstractModel):
+    _name = 'report.l10n_us_check_printing.print_check_top'
+    _inherit = 'report.abstract_report'
+    _template = 'l10n_us_check_printing.print_check_top'
+    _wrapped_report_class = report_print_check
+
+class print_check_middle(osv.AbstractModel):
+    _name = 'report.l10n_us_check_printing.print_check_middle'
+    _inherit = 'report.abstract_report'
+    _template = 'l10n_us_check_printing.print_check_middle'
+    _wrapped_report_class = report_print_check
+
+class print_check_bottom(osv.AbstractModel):
+    _name = 'report.l10n_us_check_printing.print_check_bottom'
+    _inherit = 'report.abstract_report'
+    _template = 'l10n_us_check_printing.print_check_bottom'
+    _wrapped_report_class = report_print_check
diff --git a/addons/l10n_us_check_printing/report/print_check.xml b/addons/l10n_us_check_printing/report/print_check.xml
new file mode 100644
index 0000000..af0cb60
--- /dev/null
+++ b/addons/l10n_us_check_printing/report/print_check.xml
@@ -0,0 +1,135 @@
+<?xml version="1.0" encoding="utf-8"?>
+<openerp>
+<data>
+
+<template id="base_styles">
+    <style type="text/css">
+        /*
+         *  WARNING : wkhtml2pdf will interpret measurement units according to the total
+         *  width of the document. That means that if an element overflows from the page
+         *  (eg. left: 7.5in; width: 2in;) all the dimensions will be scaled down.
+        */
+
+        body {
+            width: 8.5in;
+        }
+
+        .ckus_page {
+            position: relative;
+            font-size: 10pt;
+        }
+
+        .ckus_check, .ckus_stub_1, .ckus_stub_2 {
+            position: absolute;
+            height: 3.25in;
+        }
+
+        .ckus_check > * {
+            position: absolute;
+            white-space: nowrap;
+        }
+
+        .sequence_number {
+            text-align: right;
+            font-size: 1.3em;
+        }
+
+        .ckus_stub {
+            width: 7.65in;
+        }
+
+        .ckus_stub .sequence_number {
+            height: 0.3in;
+            margin-bottom: 0.1in;
+        }
+
+        .ckus_stub .summary_line {
+            width: 100%;
+            margin-bottom: 0.1in;
+        }
+
+        .ckus_stub .summary_line span {
+            padding: 0 0.1in;
+        }
+
+        .ckus_stub .stub_lines td {
+            padding: 0.01in 0.05in;
+        }
+
+        .ckus_stub .stub_total_amount {
+            position: absolute;
+            bottom: 0.1in;
+            right: 0.1in;
+            text-align: right;
+            font-weight: bold;
+        }
+    </style>
+</template>
+
+<template id="ckus_check">
+    <div class="ckus_check">
+        <div class="sequence_number" t-if="page['sequence_number']" t-esc="page['sequence_number']" />
+        <div class="ckus_date" t-esc="formatLang(page['payment_date'], date=True)"/>
+        <div class="ckus_payee_name" t-esc="page['partner_name']"/>
+        <div class="ckus_amount">
+            <t t-if="isinstance(page['amount'], float)"><t t-esc="formatLang(page['amount'])"/></t>
+            <t t-if="isinstance(page['amount'], str)"><t t-esc="page['amount']"/></t>
+        </div>
+        <div class="ckus_amount_in_word" t-esc="page['amount_in_word']"/>
+        <div class="ckus_memo" t-esc="page['memo']"/>
+    </div>
+</template>
+
+<template id="ckus_stub">
+    <div t-attf-class="ckus_stub ckus_stub_{{ stub_num }}">
+        <div class="sequence_number" t-if="page['sequence_number']" t-esc="page['sequence_number']" />
+        <div class="row summary_line">
+            <div class="col-xs-6 text-left">
+                <span t-esc="page['partner_name']"/>
+            </div>
+            <div class="col-xs-6 text-right">
+                <span t-esc="formatLang(page['payment_date'], date=True)"/>
+            </div>
+        </div>
+
+        <table class="table table-bordered table-condensed stub_lines" t-if="page['stub_lines']">
+            <thead><tr>
+                <th class="text-left">Due Date</th>
+                <th class="text-left">Description</th>
+                <th class="text-right">Original Amount</th>
+                <th class="text-right">Open Balance</th>
+                <th class="text-right">Discount</th>
+                <th class="text-right">Payment</th>
+            </tr></thead>
+            <tbody>
+                <t t-foreach="page['stub_lines']" t-as="stub_line">
+                    <t t-if="stub_line.get('header')">
+                        <tr><th colspan="6"><t t-esc="stub_line['name']"/></th></tr>
+                    </t>
+                    <t t-if="not stub_line.get('header')"><tr>
+                        <td class="text-left"><t t-if="stub_line['due_date']" t-esc="formatLang(stub_line['due_date'], date=True)"/></td>
+                        <td class="text-left"><t t-esc="stub_line['number']"/></td>
+                        <td class="text-right"><t t-esc="formatLang(stub_line['amount_total'], monetary=True, currency_obj=stub_line['currency'])"/></td>
+                        <td class="text-right">
+                            <t t-if="int(stub_line['amount_residual']*10**4) != 0"><t t-esc="formatLang(stub_line['amount_residual'], monetary=True, currency_obj=stub_line['currency'])"/></t>
+                            <t t-if="int(stub_line['amount_residual']*10**4) == 0">-</t>
+                        </td>
+                        <td class="text-right">
+                            <t t-if="stub_line['discount']"><t t-esc="formatLang(stub_line['discount'], monetary=True, currency_obj=stub_line['currency'])"/></t>
+                            <t t-if="not stub_line['discount']">-</t>
+                        </td>
+                        <td class="text-right"><t t-esc="formatLang(stub_line['amount_paid'], monetary=True, currency_obj=stub_line['currency'])"/></td>
+                    </tr></t>
+                </t>
+                <tr t-if="page['stub_cropped']"><td colspan="6" class="text-right">...</td></tr>
+            </tbody>
+        </table>
+        <div class="stub_total_amount">Check Amount:
+            <t t-if="isinstance(page['amount'], float)"><t t-esc="formatLang(page['amount'], monetary=True, currency_obj=page['currency'])"/></t>
+            <t t-if="isinstance(page['amount'], str)"><t t-esc="page['amount']"/></t>
+        </div>
+    </div>
+</template>
+
+</data>
+</openerp>
diff --git a/addons/l10n_us_check_printing/report/print_check_bottom.xml b/addons/l10n_us_check_printing/report/print_check_bottom.xml
new file mode 100644
index 0000000..df7f0cf
--- /dev/null
+++ b/addons/l10n_us_check_printing/report/print_check_bottom.xml
@@ -0,0 +1,71 @@
+<?xml version="1.0" encoding="utf-8"?>
+<openerp>
+<data>
+<template id="print_check_bottom">
+    <t t-call="l10n_us_check_printing.base_styles" />
+    <style type="text/css">
+        .ckus_stub_1 {
+            top: 0in;
+        }
+        .ckus_stub_2 {
+            top: 3.95in;
+        }
+        .ckus_check {
+            top: 7.5in;
+        }
+
+
+        .ckus_check .sequence_number {
+            top: 0in;
+            left: 6.75in;
+            width: 1.0in;
+        }
+        .ckus_date {
+            top: 1.45in;
+            left: 4.55in;
+            width: 1.50in;
+            text-align: center;
+        }
+        .ckus_payee_name {
+            top: 1.85in;
+            left: 0.35in;
+            width: 5.5in;
+            text-align: left;
+        }
+        .ckus_amount {
+            top: 1.45in;
+            left: 6.73in;
+            width: 1.1in;
+            text-align: center;
+        }
+        .ckus_amount_in_word {
+            top: 2.15in;
+            left: 0.35in;
+            width: 5.0in;
+            text-align: left;
+            font-weight: bold;
+            overflow: hidden;
+        }
+        .ckus_memo {
+            top: 2.45in;
+            left: 0.35in;
+            width: 4.10in;
+            text-align: left;
+            font-size: 0.9em;
+            overflow: hidden;
+        }
+    </style>
+
+    <t t-call="report.html_container">
+        <t t-foreach="docs" t-as="o">
+            <div t-foreach="pages(o)" t-as="page" class="page ckus_page" t-attf-style="top: {{ o.company_id.us_check_margin_top }}in; left: {{ o.company_id.us_check_margin_left }}in;">
+                <t t-call="l10n_us_check_printing.ckus_stub"><t t-set="stub_num" t-value="1"/></t>
+                <t t-call="l10n_us_check_printing.ckus_stub"><t t-set="stub_num" t-value="2"/></t>
+                <t t-call="l10n_us_check_printing.ckus_check" />
+            </div>
+        </t>
+    </t>
+
+</template>
+</data>
+</openerp>
diff --git a/addons/l10n_us_check_printing/report/print_check_middle.xml b/addons/l10n_us_check_printing/report/print_check_middle.xml
new file mode 100644
index 0000000..bd0f190
--- /dev/null
+++ b/addons/l10n_us_check_printing/report/print_check_middle.xml
@@ -0,0 +1,69 @@
+<?xml version="1.0" encoding="utf-8"?>
+<openerp>
+<data>
+<template id="print_check_middle">
+    <t t-call="l10n_us_check_printing.base_styles" />
+    <style type="text/css">
+        .ckus_stub_1 {
+            top: 0in;
+        }
+        .ckus_check {
+            top: 3.45in;
+        }
+        .ckus_stub_2 {
+            top: 7.0in;
+        }
+
+        .ckus_check .sequence_number {
+            top: 0.1in;
+            left: 6.90in;
+            width: 1.0in;
+        }
+        .ckus_payee_name {
+            top: 2.0in;
+            left: 0.35in;
+            width: 5.5in;
+            text-align: left;
+        }
+        .ckus_date {
+            top: 1.5in;
+            left: 4.55in;
+            width: 1.40in;
+            text-align: center;
+        }
+        .ckus_amount {
+            top: 1.5in;
+            left: 6.60in;
+            width: 1.40in;
+            text-align: center;
+        }
+        .ckus_amount_in_word {
+            top: 2.3in;
+            left: 0.35in;
+            width: 5.0in;
+            text-align: left;
+            font-weight: bold;
+            overflow: hidden;
+        }
+        .ckus_memo {
+            top: 2.6in;
+            left: 0.35in;
+            width: 4.10in;
+            text-align: left;
+            font-size: 0.9em;
+            overflow: hidden;
+        }
+    </style>
+
+    <t t-call="report.html_container">
+        <t t-foreach="docs" t-as="o">
+            <div t-foreach="pages(o)" t-as="page" class="page ckus_page" t-attf-style="top: {{ o.company_id.us_check_margin_top }}in; left: {{ o.company_id.us_check_margin_left }}in;">
+                <t t-call="l10n_us_check_printing.ckus_stub"><t t-set="stub_num" t-value="1"/></t>
+                <t t-call="l10n_us_check_printing.ckus_check" />
+                <t t-call="l10n_us_check_printing.ckus_stub"><t t-set="stub_num" t-value="2"/></t>
+            </div>
+        </t>
+    </t>
+</template>
+</data>
+</openerp>
diff --git a/addons/l10n_us_check_printing/report/print_check_top.xml b/addons/l10n_us_check_printing/report/print_check_top.xml
new file mode 100644
index 0000000..6a99c49
--- /dev/null
+++ b/addons/l10n_us_check_printing/report/print_check_top.xml
@@ -0,0 +1,71 @@
+<?xml version="1.0" encoding="utf-8"?>
+<openerp>
+<data>
+<template id="print_check_top">
+    <t t-call="l10n_us_check_printing.base_styles" />
+    <style type="text/css">
+        .ckus_check {
+            top: 0.25in;
+        }
+        .ckus_stub_1 {
+            top: 3.7in;
+        }
+        .ckus_stub_2 {
+            top: 7.0in;
+        }
+
+        .ckus_check .sequence_number {
+            top: 0.1in;
+            left: 6.85in;
+            width: 0.60in;
+        }
+        .ckus_date {
+            top: 0.5in;
+            left: 6.25in;
+            width: 1.20in;
+            text-align: center;
+        }
+        .ckus_payee_name {
+            top: 1.0in;
+            left: 0.82in;
+            width: 4.0in;
+            text-align: left;
+        }
+        .ckus_amount {
+            top: 1.0in;
+            left: 6.25in;
+            width: 1.20in;
+            text-align: left;
+        }
+        .ckus_amount_in_word {
+            top: 1.45in;
+            left: 0.35in;
+            width: 4.5in;
+            text-align: left;
+            font-weight: bold;
+            overflow: hidden;
+        }
+        .ckus_memo {
+            top: 1.80in;
+            left: 0.50in;
+            width: 4.0in;
+            text-align: left;
+            font-size: 0.9em;
+            overflow: hidden;
+        }
+
+    </style>
+
+    <t t-call="report.html_container">
+        <t t-foreach="docs" t-as="o">
+            <div t-foreach="pages(o)" t-as="page" class="page ckus_page" t-attf-style="top: {{ o.company_id.us_check_margin_top }}in; left: {{ o.company_id.us_check_margin_left }}in;">
+                <t t-call="l10n_us_check_printing.ckus_check" />
+                <t t-call="l10n_us_check_printing.ckus_stub"><t t-set="stub_num" t-value="1"/></t>
+                <t t-call="l10n_us_check_printing.ckus_stub"><t t-set="stub_num" t-value="2"/></t>
+            </div>
+        </t>
+    </t>
+
+</template>
+</data>
+</openerp>
diff --git a/addons/l10n_us_check_printing/res_company.py b/addons/l10n_us_check_printing/res_company.py
new file mode 100644
index 0000000..64945e3
--- /dev/null
+++ b/addons/l10n_us_check_printing/res_company.py
@@ -0,0 +1,29 @@
+# -*- coding: utf-8 -*-
+
+from openerp import models, api, fields
+
+class res_company(models.Model):
+    _inherit = "res.company"
+
+    us_check_layout = fields.Selection(string="Check Layout", required=True,
+        help="Select the format corresponding to the check paper you will be printing your checks on.\n"
+             "In order to disable the printing feature, select 'None'.",
+        selection=[
+            ('disabled', 'None'),
+            ('l10n_us_check_printing.print_check_top', 'Check on top'),
+            ('l10n_us_check_printing.print_check_middle', 'Check in middle'),
+            ('l10n_us_check_printing.print_check_bottom', 'Check on bottom')
+        ],
+        default="l10n_us_check_printing.print_check_top")
+
+    us_check_multi_stub = fields.Boolean('Multi-Pages Check Stub',
+        help="This option allows you to print check details (stub) on multiple pages if they don't fit on a single page.")
+
+    us_check_credit_section = fields.Boolean('Display Credits Separately',
+        help="Invoices and credits will be displayed in their respective section on the check stubs.")
+
+    us_check_margin_top = fields.Float('Top Margin', default=0.25,
+        help="Adjust the margins of generated checks to make it fit your printer's settings.")
+
+    us_check_margin_left = fields.Float('Left Margin', default=0.25,
+        help="Adjust the margins of generated checks to make it fit your printer's settings.")
diff --git a/addons/l10n_us_check_printing/static/description/icon.png b/addons/l10n_us_check_printing/static/description/icon.png
new file mode 100644
index 0000000..3c06aa8
Binary files /dev/null and b/addons/l10n_us_check_printing/static/description/icon.png differ
diff --git a/addons/l10n_us_check_printing/tests/__init__.py b/addons/l10n_us_check_printing/tests/__init__.py
new file mode 100644
index 0000000..e7cb6f9
--- /dev/null
+++ b/addons/l10n_us_check_printing/tests/__init__.py
@@ -0,0 +1 @@
+from . import test_print_check
diff --git a/addons/l10n_us_check_printing/tests/test_print_check.py b/addons/l10n_us_check_printing/tests/test_print_check.py
new file mode 100644
index 0000000..8bb877c
--- /dev/null
+++ b/addons/l10n_us_check_printing/tests/test_print_check.py
@@ -0,0 +1,28 @@
+# Make sure / performs a floating point division even if environment is python 2
+from __future__ import division
+
+from openerp.addons.account_check_writing.tests.test_check_writing import TestCheckWriting
+from openerp.addons.l10n_us_check_printing.report import print_check
+
+import math
+
+class TestPrintCheck(TestCheckWriting):
+
+    def setUp(self):
+        super(TestPrintCheck, self).setUp()
+        self.check_report = print_check.report_print_check(self.env.cr, self.env.uid, 'test', self.env.context)
+
+    def test_print_check(self):
+        # Make a payment for 10 invoices and 5 refunds
+        invoices = self.env['account.invoice']
+        for i in range(0,15):
+            invoices |= self.create_invoice(is_refund=(i%3 == 0))
+        payment = self.create_payment(invoices)
+
+        # Check the data generated for the report
+        self.env.ref('base.main_company').write({'us_check_multi_stub': True})
+        report_pages = self.check_report.get_pages(payment)
+        self.assertEqual(len(report_pages), int(math.ceil(len(invoices.ids) / print_check.INV_LINES_PER_STUB)))
+        self.env.ref('base.main_company').write({'us_check_multi_stub': False})
+        report_pages = self.check_report.get_pages(payment)
+        self.assertEqual(len(report_pages), 1)
diff --git a/addons/l10n_us_check_printing/views/account_payment_view.xml b/addons/l10n_us_check_printing/views/account_payment_view.xml
new file mode 100644
index 0000000..4cbedf9
--- /dev/null
+++ b/addons/l10n_us_check_printing/views/account_payment_view.xml
@@ -0,0 +1,15 @@
+<?xml version="1.0" encoding="utf-8"?>
+<openerp>
+    <data>
+        <record id="view_account_payment_form_inherited" model="ir.ui.view">
+            <field name="name">account.payment.form.inherited</field>
+            <field name="model">account.payment</field>
+            <field name="inherit_id" ref="account_check_writing.view_account_payment_form_inherited" />
+            <field name="arch" type="xml">
+                <xpath expr="//button[@name='send_checks']" position="attributes">
+                    <attribute name="string">Print Check</attribute>
+                </xpath>
+            </field>
+        </record>
+    </data>
+</openerp>
diff --git a/addons/l10n_us_check_printing/views/res_company_view.xml b/addons/l10n_us_check_printing/views/res_company_view.xml
new file mode 100644
index 0000000..1a282b7
--- /dev/null
+++ b/addons/l10n_us_check_printing/views/res_company_view.xml
@@ -0,0 +1,21 @@
+<?xml version="1.0" encoding="utf-8"?>
+<openerp>
+    <data>
+        <record id="view_res_company_form_inherited" model="ir.ui.view">
+            <field name="name">res.company.form.inherited</field>
+            <field name="model">res.company</field>
+            <field name="inherit_id" ref="base.view_company_form"/>
+            <field name="arch" type="xml">
+                <group name="account_grp" position="after">
+                    <group name="us_check_writing" string="US Check Writing">
+                        <field name="us_check_layout"/>
+                        <field name="us_check_multi_stub"/>
+                        <field name="us_check_credit_section"/>
+                        <field name="us_check_margin_top"/>
+                        <field name="us_check_margin_left"/>
+                    </group>
+                </group>
+            </field>
+        </record>
+    </data>
+</openerp>
diff --git a/addons/sale/tests/test_sale_to_invoice.py b/addons/sale/tests/test_sale_to_invoice.py
index 315fb09..6505a61 100644
--- a/addons/sale/tests/test_sale_to_invoice.py
+++ b/addons/sale/tests/test_sale_to_invoice.py
@@ -31,7 +31,6 @@ class TestSale(TestMail):
 
     def test_sale_to_invoice(self):
         """ Testing for invoice create,validate and pay with invoicing and payment user.""" 
-        import time
         # Usefull models
         IrModelData = self.env['ir.model.data']
         partner_obj = self.env['res.partner']
@@ -41,9 +40,9 @@ class TestSale(TestMail):
         group_id = IrModelData.xmlid_to_res_id('account.group_account_invoice') or False
         product_id = IrModelData.xmlid_to_res_id('product.product_category_3') or False
         company_id = IrModelData.xmlid_to_res_id('base.main_company') or False
-        journal_id = self.env['res.company'].browse(company_id)._create_bank_account_and_journal('BNK')
-        account_id = journal_obj.browse(journal_id).default_credit_account_id.id
-        date = time.strftime("%Y/%m/%d")
+        company = self.env['res.company'].browse(company_id)
+        journal_vals = journal_obj._prepare_bank_journal(company, {'account_type': 'bank', 'acc_name': 'BNK'})
+        journal = journal_obj.create(journal_vals)
 
         # Usefull accounts
         user_type_id = IrModelData.xmlid_to_res_id('account.data_account_type_revenue')
diff --git a/openerp/addons/base/base_demo.xml b/openerp/addons/base/base_demo.xml
index c5ab8ba..2ca2d03 100644
--- a/openerp/addons/base/base_demo.xml
+++ b/openerp/addons/base/base_demo.xml
@@ -29,7 +29,6 @@
         </record>
 
         <record model="res.partner.bank" id="bank_company">
-            <field name="name">Your Company Bank</field>
             <field name="acc_number">BE123456789</field>
             <field name="partner_id" ref="main_partner" />
         </record>
diff --git a/openerp/addons/base/res/res_bank.py b/openerp/addons/base/res/res_bank.py
index b1bb73a..24604ba 100644
--- a/openerp/addons/base/res/res_bank.py
+++ b/openerp/addons/base/res/res_bank.py
@@ -114,7 +114,6 @@ class res_partner_bank(osv.osv):
         return value
 
     _columns = {
-        'name': fields.char('Bank Account'), # to be removed in v6.2 ?
         'acc_number': fields.char('Account Number', required=True),
         'bank': fields.many2one('res.bank', 'Bank'),
         'bank_bic': fields.char('Bank Identifier Code'),
@@ -133,7 +132,8 @@ class res_partner_bank(osv.osv):
         'state': fields.selection(_bank_type_get, 'Bank Account Type',
             change_default=True),
         'sequence': fields.integer('Sequence'),
-        'footer': fields.boolean("Display on Reports", help="Display this bank account on the footer of printed documents like invoices and sales orders.")
+        'footer': fields.boolean("Display on Reports", help="Display this bank account on the footer of printed documents like invoices and sales orders."),
+        'currency_id': fields.many2one('res.currency', string='Currency', help="Currency of the bank account and its related journal."),
     }
 
     _defaults = {
@@ -150,9 +150,6 @@ class res_partner_bank(osv.osv):
         'state_id': lambda obj, cursor, user, context: obj._default_value(
             cursor, user, 'state_id', context=context),
         'name': '/',
-        'company_id': lambda obj, cursor, user, context: obj.pool.get('res.company')._company_default_get(
-            cursor, user, 'res.partner.bank', context=context),
-        'partner_id': lambda obj, cr, uid, context: obj.pool.get('res.users').browse(cr, uid, uid, context).company_id.partner_id
     }
 
     def fields_get(self, cr, uid, allfields=None, context=None, write_access=True, attributes=None):
@@ -190,7 +187,10 @@ class res_partner_bank(osv.osv):
                     data = dict((k, v or '') for (k, v) in data.iteritems())
                     name = bank_code_format[data['state']] % data
                 except Exception:
-                    raise UserError(_("Formating Error") + ':' + _("Invalid Bank Account Type Name format."))
+                    raise UserError(_("Bank account name formating error") + ': ' + _("Check the format_layout field set on the Bank Account Type."))
+            if data.get('currency_id'):
+                currency_name = self.pool.get('res.currency').browse(cr, uid, data['currency_id'], context=context).name
+                name += ' (' + currency_name + ')'
             res.append((data.get('id', False), name))
         return res
 
@@ -219,7 +219,6 @@ class res_partner_bank(osv.osv):
             result['bank_bic'] = bank.bic
         return {'value': result}
 
-
     def onchange_partner_id(self, cr, uid, ids, partner_id, context=None):
         result = {}
         if partner_id is not False:
@@ -228,7 +227,7 @@ class res_partner_bank(osv.osv):
             result['owner_name'] = part.name
             result['street'] = part.street or False
             result['city'] = part.city or False
-            result['zip'] =  part.zip or False
-            result['country_id'] =  part.country_id.id
+            result['zip'] = part.zip or False
+            result['country_id'] = part.country_id.id
             result['state_id'] = part.state_id.id
         return {'value': result}
diff --git a/openerp/addons/base/res/res_bank_view.xml b/openerp/addons/base/res/res_bank_view.xml
index a87dd20..a45cd45 100644
--- a/openerp/addons/base/res/res_bank_view.xml
+++ b/openerp/addons/base/res/res_bank_view.xml
@@ -177,7 +177,7 @@
               </p>
               <p>
                 If you use the accounting application of Odoo, journals and accounts will be created automatically based on these data.
-              </p>  
+              </p>
             </field>
         </record>
         <menuitem action="action_res_partner_bank_account_form"
diff --git a/openerp/addons/base/tests/test_expression.py b/openerp/addons/base/tests/test_expression.py
index de7e047..b27b954 100644
--- a/openerp/addons/base/tests/test_expression.py
+++ b/openerp/addons/base/tests/test_expression.py
@@ -152,9 +152,9 @@ class test_expression(common.TransactionCase):
         p_aa = partner_obj.create(cr, uid, {'name': 'test__AA', 'parent_id': p_a, 'state_id': state_ids[0]})
         p_ab = partner_obj.create(cr, uid, {'name': 'test__AB', 'parent_id': p_a, 'state_id': state_ids[1]})
         p_ba = partner_obj.create(cr, uid, {'name': 'test__BA', 'parent_id': p_b, 'state_id': state_ids[0]})
-        b_aa = bank_obj.create(cr, uid, {'name': '__bank_test_a', 'state': bank_type[0], 'partner_id': p_aa, 'acc_number': '1234'})
-        b_ab = bank_obj.create(cr, uid, {'name': '__bank_test_b', 'state': bank_type[0], 'partner_id': p_ab, 'acc_number': '5678'})
-        b_ba = bank_obj.create(cr, uid, {'name': '__bank_test_b', 'state': bank_type[0], 'partner_id': p_ba, 'acc_number': '9876'})
+        b_aa = bank_obj.create(cr, uid, {'acc_number': '__bank_test_a', 'state': bank_type[0], 'partner_id': p_aa})
+        b_ab = bank_obj.create(cr, uid, {'acc_number': '__bank_test_b', 'state': bank_type[0], 'partner_id': p_ab})
+        b_ba = bank_obj.create(cr, uid, {'acc_number': '__bank_test_b', 'state': bank_type[0], 'partner_id': p_ba})
 
         # --------------------------------------------------
         # Test1: basics about the attribute
@@ -172,30 +172,30 @@ class test_expression(common.TransactionCase):
 
         # Do: one2many without _auto_join
         self._reinit_mock()
-        partner_ids = partner_obj.search(cr, uid, [('bank_ids.name', 'like', name_test)])
+        partner_ids = partner_obj.search(cr, uid, [('bank_ids.acc_number', 'like', name_test)])
         # Test result
         self.assertEqual(set(partner_ids), set([p_aa]),
-            "_auto_join off: ('bank_ids.name', 'like', '..'): incorrect result")
+            "_auto_join off: ('bank_ids.acc_number', 'like', '..'): incorrect result")
         # Test produced queries
         self.assertEqual(len(self.query_list), 3,
-            "_auto_join off: ('bank_ids.name', 'like', '..') should produce 3 queries (1 in res_partner_bank, 2 on res_partner)")
+            "_auto_join off: ('bank_ids.acc_number', 'like', '..') should produce 3 queries (1 in res_partner_bank, 2 on res_partner)")
         sql_query = self.query_list[0].get_sql()
         self.assertIn('res_partner_bank', sql_query[0],
-            "_auto_join off: ('bank_ids.name', 'like', '..') first query incorrect main table")
+            "_auto_join off: ('bank_ids.acc_number', 'like', '..') first query incorrect main table")
 
-        expected = "%s::text like %s" % (unaccent('"res_partner_bank"."name"'), unaccent('%s'))
+        expected = "%s::text like %s" % (unaccent('"res_partner_bank"."acc_number"'), unaccent('%s'))
         self.assertIn(expected, sql_query[1],
-            "_auto_join off: ('bank_ids.name', 'like', '..') first query incorrect where condition")
+            "_auto_join off: ('bank_ids.acc_number', 'like', '..') first query incorrect where condition")
         
         self.assertEqual(set(['%' + name_test + '%']), set(sql_query[2]),
-            "_auto_join off: ('bank_ids.name', 'like', '..') first query incorrect parameter")
+            "_auto_join off: ('bank_ids.acc_number', 'like', '..') first query incorrect parameter")
         sql_query = self.query_list[2].get_sql()
         self.assertIn('res_partner', sql_query[0],
-            "_auto_join off: ('bank_ids.name', 'like', '..') third query incorrect main table")
+            "_auto_join off: ('bank_ids.acc_number', 'like', '..') third query incorrect main table")
         self.assertIn('"res_partner"."id" in (%s)', sql_query[1],
-            "_auto_join off: ('bank_ids.name', 'like', '..') third query incorrect where condition")
+            "_auto_join off: ('bank_ids.acc_number', 'like', '..') third query incorrect where condition")
         self.assertEqual(set([p_aa]), set(sql_query[2]),
-            "_auto_join off: ('bank_ids.name', 'like', '..') third query incorrect parameter")
+            "_auto_join off: ('bank_ids.acc_number', 'like', '..') third query incorrect parameter")
 
         # Do: cascaded one2many without _auto_join
         self._reinit_mock()
@@ -210,27 +210,27 @@ class test_expression(common.TransactionCase):
         # Do: one2many with _auto_join
         partner_bank_ids_col._auto_join = True
         self._reinit_mock()
-        partner_ids = partner_obj.search(cr, uid, [('bank_ids.name', 'like', 'test_a')])
+        partner_ids = partner_obj.search(cr, uid, [('bank_ids.acc_number', 'like', 'test_a')])
         # Test result
         self.assertEqual(set(partner_ids), set([p_aa]),
-            "_auto_join on: ('bank_ids.name', 'like', '..') incorrect result")
+            "_auto_join on: ('bank_ids.acc_number', 'like', '..') incorrect result")
         # Test produced queries
         self.assertEqual(len(self.query_list), 1,
-            "_auto_join on: ('bank_ids.name', 'like', '..') should produce 1 query")
+            "_auto_join on: ('bank_ids.acc_number', 'like', '..') should produce 1 query")
         sql_query = self.query_list[0].get_sql()
         self.assertIn('"res_partner"', sql_query[0],
-            "_auto_join on: ('bank_ids.name', 'like', '..') query incorrect main table")
+            "_auto_join on: ('bank_ids.acc_number', 'like', '..') query incorrect main table")
         self.assertIn('"res_partner_bank" as "res_partner__bank_ids"', sql_query[0],
-            "_auto_join on: ('bank_ids.name', 'like', '..') query incorrect join")
+            "_auto_join on: ('bank_ids.acc_number', 'like', '..') query incorrect join")
 
-        expected = "%s::text like %s" % (unaccent('"res_partner__bank_ids"."name"'), unaccent('%s'))
+        expected = "%s::text like %s" % (unaccent('"res_partner__bank_ids"."acc_number"'), unaccent('%s'))
         self.assertIn(expected, sql_query[1],
-            "_auto_join on: ('bank_ids.name', 'like', '..') query incorrect where condition")
+            "_auto_join on: ('bank_ids.acc_number', 'like', '..') query incorrect where condition")
         
         self.assertIn('"res_partner"."id"="res_partner__bank_ids"."partner_id"', sql_query[1],
-            "_auto_join on: ('bank_ids.name', 'like', '..') query incorrect join condition")
+            "_auto_join on: ('bank_ids.acc_number', 'like', '..') query incorrect join condition")
         self.assertEqual(set(['%' + name_test + '%']), set(sql_query[2]),
-            "_auto_join on: ('bank_ids.name', 'like', '..') query incorrect parameter")
+            "_auto_join on: ('bank_ids.acc_number', 'like', '..') query incorrect parameter")
 
         # Do: one2many with _auto_join, test final leaf is an id
         self._reinit_mock()
@@ -391,7 +391,7 @@ class test_expression(common.TransactionCase):
         partner_child_ids_col._auto_join = True
         partner_bank_ids_col._auto_join = True
         partner_child_ids_col._domain = lambda self: ['!', ('name', '=', self._name)]
-        partner_bank_ids_col._domain = [('acc_number', 'like', '1')]
+        partner_bank_ids_col._domain = [('acc_number', 'like', 'a')]
         # Do: 2 cascaded one2many with _auto_join, test final leaf is an id
         self._reinit_mock()
         partner_ids = partner_obj.search(cr, uid, ['&', (1, '=', 1), ('child_ids.bank_ids.id', 'in', [b_aa, b_ba])])
diff --git a/openerp/addons/base/tests/test_osv_expression.yml b/openerp/addons/base/tests/test_osv_expression.yml
index f358499..88f3143 100644
--- a/openerp/addons/base/tests/test_osv_expression.yml
+++ b/openerp/addons/base/tests/test_osv_expression.yml
@@ -370,7 +370,7 @@
         # Search the company via its one2many (the one2many must point back at the company).
         company = self.browse(cr, uid, ref('ymltest_company3'))
         max_currency_id = max(self.pool['res.partner.bank'].search(cr, uid, []))
-        bank_ids1 = self.pool['res.partner.bank'].search(cr, uid, [('name', 'not like', 'probably_unexisting_name')])
+        bank_ids1 = self.pool['res.partner.bank'].search(cr, uid, [('acc_number', 'not like', 'probably_unexisting_name')])
         bank_ids2 = self.pool['res.partner.bank'].search(cr, uid, [('id', 'not in', [max_currency_id + 1003])])
         bank_ids3 = self.pool['res.partner.bank'].search(cr, uid, [('id', 'not in', [])])
         assert bank_ids1 == bank_ids2 == bank_ids3, 'All 3 results should have be the same: all banks'
